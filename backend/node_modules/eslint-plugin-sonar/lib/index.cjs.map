{"version":3,"file":"index.cjs","sources":["../../SonarJS/packages/jsts/src/rules/core/index.ts","../../SonarJS/packages/jsts/src/rules/helpers/accessibility.ts","../../SonarJS/packages/jsts/src/rules/helpers/ast.ts","../../SonarJS/packages/jsts/src/rules/helpers/ancestor.ts","../../SonarJS/packages/jsts/src/rules/helpers/chai.ts","../../SonarJS/packages/jsts/src/rules/helpers/collection.ts","../../SonarJS/packages/jsts/src/rules/helpers/decorators/interceptor.ts","../../SonarJS/packages/jsts/src/rules/helpers/decorators/merger.ts","../../SonarJS/packages/shared/src/helpers/files.ts","../../SonarJS/packages/shared/src/errors/error.ts","../../SonarJS/packages/jsts/src/linter/parameters/sonar-runtime.ts","../../SonarJS/packages/jsts/src/rules/helpers/express.ts","../../SonarJS/packages/jsts/src/rules/helpers/file.ts","../../SonarJS/packages/jsts/src/rules/helpers/globals.ts","../../SonarJS/packages/jsts/src/rules/helpers/location.ts","../../SonarJS/packages/jsts/src/rules/helpers/lva.ts","../../SonarJS/packages/jsts/src/rules/helpers/mocha.ts","../../SonarJS/packages/jsts/src/rules/helpers/module.ts","../../SonarJS/packages/jsts/src/rules/helpers/quickfix.ts","../../SonarJS/packages/jsts/src/rules/helpers/reaching-definitions.ts","../../SonarJS/packages/jsts/src/rules/helpers/rule-detect-react.ts","../../SonarJS/packages/jsts/src/rules/helpers/sinon.ts","../../SonarJS/packages/jsts/src/rules/helpers/type.ts","../../SonarJS/packages/jsts/src/rules/helpers/vitest.ts","../../SonarJS/packages/jsts/src/rules/helpers/vue.ts","../../SonarJS/packages/jsts/src/rules/helpers/parser-services.ts","../../SonarJS/packages/jsts/src/rules/S2376/decorator.ts","../../SonarJS/packages/jsts/src/rules/S2376/index.ts","../../SonarJS/packages/jsts/src/rules/S1077/decorator.ts","../../SonarJS/packages/jsts/src/rules/S1077/index.ts","../../SonarJS/packages/jsts/src/rules/S6827/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6827/index.ts","../../SonarJS/packages/jsts/src/rules/S6844/rule.ts","../../SonarJS/packages/jsts/src/rules/helpers/regex/ast.ts","../../SonarJS/packages/jsts/src/rules/helpers/regex/flags.ts","../../SonarJS/packages/jsts/src/rules/helpers/regex/extract.ts","../../SonarJS/packages/jsts/src/rules/helpers/regex/group.ts","../../SonarJS/packages/jsts/src/rules/helpers/regex/tokenizer.ts","../../SonarJS/packages/jsts/src/rules/helpers/regex/range.ts","../../SonarJS/packages/jsts/src/rules/helpers/regex/location.ts","../../SonarJS/packages/jsts/src/rules/helpers/regex/rule-template.ts","../../SonarJS/packages/jsts/src/rules/helpers/regex/simplified-regex-character-class.ts","../../SonarJS/packages/jsts/src/rules/S5850/rule.ts","../../SonarJS/packages/jsts/src/rules/S3782/rule.ts","../../SonarJS/packages/jsts/src/rules/S2234/rule.ts","../../SonarJS/packages/jsts/src/rules/S3513/rule.ts","../../SonarJS/packages/jsts/src/rules/S3796/rule.ts","../../SonarJS/packages/jsts/src/rules/S1528/rule.ts","../../SonarJS/packages/jsts/src/rules/S3524/rule.ts","../../SonarJS/packages/jsts/src/linter/custom-rules/cognitive-complexity.ts","../../SonarJS/packages/jsts/src/linter/visitors/visitor.ts","../../SonarJS/packages/jsts/src/rules/typescript-eslint/sanitize.ts","../../SonarJS/packages/jsts/src/rules/typescript-eslint/index.ts","../../SonarJS/packages/jsts/src/rules/helpers/supertest.ts","../../SonarJS/packages/jsts/src/rules/S2699/rule.ts","../../SonarJS/packages/jsts/src/rules/helpers/aws/cdk.ts","../../SonarJS/packages/jsts/src/rules/helpers/result.ts","../../SonarJS/packages/jsts/src/rules/S6333/rule.ts","../../SonarJS/packages/jsts/src/rules/S6329/rule.ts","../../SonarJS/packages/jsts/src/rules/S6275/rule.ts","../../SonarJS/packages/jsts/src/rules/S6332/rule.ts","../../SonarJS/packages/jsts/src/rules/helpers/aws/iam.ts","../../SonarJS/packages/jsts/src/rules/S6302/rule.ts","../../SonarJS/packages/jsts/src/rules/S6304/rule.ts","../../SonarJS/packages/jsts/src/rules/S6317/rule.ts","../../SonarJS/packages/jsts/src/rules/S6270/rule.ts","../../SonarJS/packages/jsts/src/rules/S6308/rule.ts","../../SonarJS/packages/jsts/src/rules/S6303/rule.ts","../../SonarJS/packages/jsts/src/rules/S6321/rule.ts","../../SonarJS/packages/jsts/src/rules/helpers/aws/s3.ts","../../SonarJS/packages/jsts/src/rules/S6265/rule.ts","../../SonarJS/packages/jsts/src/rules/S6249/rule.ts","../../SonarJS/packages/jsts/src/rules/S6281/rule.ts","../../SonarJS/packages/jsts/src/rules/S6245/rule.ts","../../SonarJS/packages/jsts/src/rules/S6252/rule.ts","../../SonarJS/packages/jsts/src/rules/S6319/rule.ts","../../SonarJS/packages/jsts/src/rules/S6327/rule.ts","../../SonarJS/packages/jsts/src/rules/S6330/rule.ts","../../SonarJS/packages/jsts/src/rules/S1529/rule.ts","../../SonarJS/packages/jsts/src/rules/S4798/rule.ts","../../SonarJS/packages/jsts/src/rules/S1105/decorator.ts","../../SonarJS/packages/jsts/src/rules/S1105/index.ts","../../SonarJS/packages/jsts/src/rules/S1472/rule.ts","../../SonarJS/packages/jsts/src/rules/S5742/rule.ts","../../SonarJS/packages/jsts/src/rules/S6092/rule.ts","../../SonarJS/packages/jsts/src/rules/S101/rule.ts","../../SonarJS/packages/jsts/src/rules/S3525/rule.ts","../../SonarJS/packages/jsts/src/rules/S1523/rule.ts","../../SonarJS/packages/jsts/src/rules/S3616/rule.ts","../../SonarJS/packages/jsts/src/rules/S124/rule.ts","../../SonarJS/packages/jsts/src/rules/S6353/rule.ts","../../SonarJS/packages/jsts/src/rules/S3973/rule.ts","../../SonarJS/packages/jsts/src/rules/S5757/rule.ts","../../SonarJS/packages/jsts/src/rules/S1848/rule.ts","../../SonarJS/packages/jsts/src/rules/S2598/rule.ts","../../SonarJS/packages/jsts/src/rules/S5693/rule.ts","../../SonarJS/packages/jsts/src/rules/S5728/rule.ts","../../SonarJS/packages/jsts/src/rules/helpers/cookie-flag-check.ts","../../SonarJS/packages/jsts/src/rules/S3330/rule.ts","../../SonarJS/packages/jsts/src/rules/S2255/rule.ts","../../SonarJS/packages/jsts/src/rules/S5122/rule.ts","../../SonarJS/packages/jsts/src/rules/S4502/rule.ts","../../SonarJS/packages/jsts/src/rules/S1541/rule.ts","../../SonarJS/packages/jsts/src/rules/S3798/rule.ts","../../SonarJS/packages/jsts/src/rules/S1788/decorator.ts","../../SonarJS/packages/jsts/src/rules/S1788/index.ts","../../SonarJS/packages/jsts/src/rules/S1874/rule.ts","../../SonarJS/packages/jsts/src/rules/S3514/rule.ts","../../SonarJS/packages/jsts/src/rules/S3403/rule.ts","../../SonarJS/packages/jsts/src/rules/S5247/rule.ts","../../SonarJS/packages/jsts/src/rules/S5725/rule.ts","../../SonarJS/packages/jsts/src/rules/S6080/rule.ts","../../SonarJS/packages/jsts/src/rules/S5743/rule.ts","../../SonarJS/packages/jsts/src/rules/S5869/rule.ts","../../SonarJS/packages/jsts/src/rules/S5842/rule.ts","../../SonarJS/packages/jsts/src/rules/S4787/rule.ts","../../SonarJS/packages/jsts/src/rules/S5542/rule.ts","../../SonarJS/packages/jsts/src/rules/S3723/rule.ts","../../SonarJS/packages/jsts/src/rules/S6328/rule.ts","../../SonarJS/packages/jsts/src/rules/S1067/rule.ts","../../SonarJS/packages/jsts/src/rules/S1451/rule.ts","../../SonarJS/packages/jsts/src/rules/S3317/rule.ts","../../SonarJS/packages/jsts/src/rules/S2612/rule.ts","../../SonarJS/packages/jsts/src/rules/S1135/rule.ts","../../SonarJS/packages/jsts/src/rules/S1134/rule.ts","../../SonarJS/packages/jsts/src/rules/S1535/rule.ts","../../SonarJS/packages/jsts/src/rules/S2251/rule.ts","../../SonarJS/packages/jsts/src/rules/S5732/rule.ts","../../SonarJS/packages/jsts/src/rules/S1515/rule.ts","../../SonarJS/packages/jsts/src/rules/S100/rule.ts","../../SonarJS/packages/jsts/src/rules/S3800/rule.ts","../../SonarJS/packages/jsts/src/rules/S1527/rule.ts","../../SonarJS/packages/jsts/src/rules/S3531/rule.ts","../../SonarJS/packages/jsts/src/rules/S4790/rule.ts","../../SonarJS/packages/jsts/src/rules/S5691/rule.ts","../../SonarJS/packages/jsts/src/rules/S6754/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6754/index.ts","../../SonarJS/packages/jsts/src/rules/S5254/rule.ts","../../SonarJS/packages/jsts/src/rules/S3785/rule.ts","../../SonarJS/packages/jsts/src/rules/S3686/rule.ts","../../SonarJS/packages/jsts/src/rules/S2692/rule.ts","../../SonarJS/packages/jsts/src/rules/S2092/rule.ts","../../SonarJS/packages/jsts/src/rules/S5659/rule.ts","../../SonarJS/packages/jsts/src/rules/S3415/rule.ts","../../SonarJS/packages/jsts/src/rules/S6477/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6477/index.ts","../../SonarJS/packages/jsts/src/rules/S6481/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6481/index.ts","../../SonarJS/packages/jsts/src/rules/S6749/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6749/index.ts","../../SonarJS/packages/jsts/src/rules/S6853/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6853/index.ts","../../SonarJS/packages/jsts/src/rules/S1439/rule.ts","../../SonarJS/packages/jsts/src/rules/S5148/rule.ts","../../SonarJS/packages/jsts/src/rules/S4622/rule.ts","../../SonarJS/packages/jsts/src/rules/S4084/decorator.ts","../../SonarJS/packages/jsts/src/rules/S4084/index.ts","../../SonarJS/packages/jsts/src/rules/S1994/rule.ts","../../SonarJS/packages/jsts/src/rules/S1082/rule.ts","../../SonarJS/packages/jsts/src/rules/S134/rule.ts","../../SonarJS/packages/jsts/src/rules/S2430/decorator.ts","../../SonarJS/packages/jsts/src/rules/S2430/index.ts","../../SonarJS/packages/jsts/src/rules/S2999/rule.ts","../../SonarJS/packages/jsts/src/rules/S4275/rule.ts","../../SonarJS/packages/jsts/src/rules/S2871/rule.ts","../../SonarJS/packages/jsts/src/rules/S6268/rule.ts","../../SonarJS/packages/jsts/src/rules/S2870/rule.ts","../../SonarJS/packages/jsts/src/rules/S6479/rule.ts","../../SonarJS/packages/jsts/src/rules/S3579/rule.ts","../../SonarJS/packages/jsts/src/rules/S6551/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6551/index.ts","../../SonarJS/packages/jsts/src/rules/S2424/rule.ts","../../SonarJS/packages/jsts/src/rules/S1219/rule.ts","../../SonarJS/packages/jsts/src/rules/S5332/rule.lib.ts","../../SonarJS/packages/jsts/src/rules/S5332/rule.aws.ts","../../SonarJS/packages/jsts/src/rules/S5332/rule.ts","../../SonarJS/packages/jsts/src/rules/S6079/rule.ts","../../SonarJS/packages/jsts/src/parsers/options.ts","../../SonarJS/packages/jsts/src/linter/recognizers/Detector.ts","../../SonarJS/packages/jsts/src/linter/recognizers/detectors/CamelCaseDetector.ts","../../SonarJS/packages/jsts/src/linter/recognizers/detectors/ContainsDetector.ts","../../SonarJS/packages/jsts/src/linter/recognizers/detectors/EndWithDetector.ts","../../SonarJS/packages/jsts/src/linter/recognizers/detectors/KeywordsDetector.ts","../../SonarJS/packages/jsts/src/linter/recognizers/JavaScriptFootPrint.ts","../../SonarJS/packages/jsts/src/linter/recognizers/CodeRecognizer.ts","../../SonarJS/packages/jsts/src/rules/S125/rule.ts","../../SonarJS/packages/jsts/src/rules/S1854/rule.ts","../../SonarJS/packages/jsts/src/rules/S3001/rule.ts","../../SonarJS/packages/jsts/src/program/program.ts","../../SonarJS/packages/jsts/src/project-metadata/package-json/index.ts","../../SonarJS/packages/jsts/src/project-metadata/index.ts","../../SonarJS/packages/jsts/src/rules/S6957/rule.ts","../../SonarJS/packages/jsts/src/rules/S4621/rule.ts","../../SonarJS/packages/jsts/src/rules/S108/decorator.ts","../../SonarJS/packages/jsts/src/rules/S108/index.ts","../../SonarJS/packages/jsts/src/rules/S6019/rule.ts","../../SonarJS/packages/jsts/src/rules/S6323/rule.ts","../../SonarJS/packages/jsts/src/rules/S1186/decorator.ts","../../SonarJS/packages/jsts/src/rules/S1186/index.ts","../../SonarJS/packages/jsts/src/rules/S6331/rule.ts","../../SonarJS/packages/jsts/src/rules/S4023/decorator.ts","../../SonarJS/packages/jsts/src/rules/S4023/index.ts","../../SonarJS/packages/jsts/src/rules/S2187/rule.ts","../../SonarJS/packages/jsts/src/rules/S888/rule.ts","../../SonarJS/packages/jsts/src/rules/S6426/rule.ts","../../SonarJS/packages/jsts/src/rules/S6643/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6643/index.ts","../../SonarJS/packages/jsts/src/rules/S1116/decorator.ts","../../SonarJS/packages/jsts/src/rules/S1116/index.ts","../../SonarJS/packages/jsts/src/rules/S6788/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6788/index.ts","../../SonarJS/packages/jsts/src/rules/S4139/rule.ts","../../SonarJS/packages/jsts/src/rules/S1530/rule.ts","../../SonarJS/packages/jsts/src/rules/S2990/rule.ts","../../SonarJS/packages/jsts/src/rules/S2137/rule.ts","../../SonarJS/packages/jsts/src/rules/S2068/rule.ts","../../SonarJS/packages/jsts/src/rules/S1313/rule.ts","../../SonarJS/packages/jsts/src/rules/S6442/rule.ts","../../SonarJS/packages/jsts/src/rules/S2486/rule.ts","../../SonarJS/packages/jsts/src/rules/S4328/rule.ts","../../SonarJS/packages/jsts/src/rules/S2703/rule.ts","../../SonarJS/packages/jsts/src/rules/S4619/rule.ts","../../SonarJS/packages/jsts/src/rules/S2970/rule.ts","../../SonarJS/packages/jsts/src/rules/S3801/rule.ts","../../SonarJS/packages/jsts/src/rules/S3402/rule.ts","../../SonarJS/packages/jsts/src/rules/S2189/rule.ts","../../SonarJS/packages/jsts/src/rules/S5604/rule.ts","../../SonarJS/packages/jsts/src/rules/S4123/rule.ts","../../SonarJS/packages/jsts/src/rules/S3516/rule.ts","../../SonarJS/packages/jsts/src/rules/S5759/rule.ts","../../SonarJS/packages/jsts/src/rules/S1119/rule.ts","../../SonarJS/packages/jsts/src/rules/S6958/rule.ts","../../SonarJS/packages/jsts/src/rules/S6660/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6660/index.ts","../../SonarJS/packages/jsts/src/rules/S5734/rule.ts","../../SonarJS/packages/jsts/src/rules/S4043/rule.ts","../../SonarJS/packages/jsts/src/rules/S6544/rule.ts","../../SonarJS/packages/jsts/src/rules/S5730/rule.ts","../../SonarJS/packages/jsts/src/rules/S1121/rule.ts","../../SonarJS/packages/jsts/src/rules/S3358/rule.ts","../../SonarJS/packages/jsts/src/rules/S2004/rule.ts","../../SonarJS/packages/jsts/src/rules/S881/rule.ts","../../SonarJS/packages/jsts/src/rules/S4036/rule.ts","../../SonarJS/packages/jsts/src/rules/S1226/rule.ts","../../SonarJS/packages/jsts/src/rules/S1533/rule.ts","../../SonarJS/packages/jsts/src/rules/S2814/decorator.ts","../../SonarJS/packages/jsts/src/rules/S2814/index.ts","../../SonarJS/packages/jsts/src/rules/S4165/rule.ts","../../SonarJS/packages/jsts/src/rules/S4782/rule.ts","../../SonarJS/packages/jsts/src/rules/S1110/rule.ts","../../SonarJS/packages/jsts/src/rules/S6571/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6571/index.ts","../../SonarJS/packages/jsts/src/rules/S3827/rule.ts","../../SonarJS/packages/jsts/src/rules/S5736/rule.ts","../../SonarJS/packages/jsts/src/rules/S3533/rule.ts","../../SonarJS/packages/jsts/src/rules/S4324/rule.ts","../../SonarJS/packages/jsts/src/rules/S5863/rule.ts","../../SonarJS/packages/jsts/src/rules/S6679/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6679/index.ts","../../SonarJS/packages/jsts/src/rules/S105/rule.ts","../../SonarJS/packages/jsts/src/rules/S5257/rule.ts","../../SonarJS/packages/jsts/src/rules/S4327/decorator.ts","../../SonarJS/packages/jsts/src/rules/S4327/index.ts","../../SonarJS/packages/jsts/src/rules/S3696/decorator.ts","../../SonarJS/packages/jsts/src/rules/S3696/index.ts","../../SonarJS/packages/jsts/src/rules/S4822/rule.ts","../../SonarJS/packages/jsts/src/rules/S4623/rule.ts","../../SonarJS/packages/jsts/src/rules/S2138/rule.ts","../../SonarJS/packages/jsts/src/rules/S2681/rule.ts","../../SonarJS/packages/jsts/src/rules/S6486/rule.ts","../../SonarJS/packages/jsts/src/rules/S6747/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6747/rule.ts","../../SonarJS/packages/jsts/src/rules/S1763/decorator.ts","../../SonarJS/packages/jsts/src/rules/S1763/index.ts","../../SonarJS/packages/jsts/src/rules/S6791/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6791/index.ts","../../SonarJS/packages/jsts/src/rules/S5042/rule.ts","../../SonarJS/packages/jsts/src/rules/S6478/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6478/index.ts","../../SonarJS/packages/jsts/src/rules/S3984/rule.ts","../../SonarJS/packages/jsts/src/rules/S905/decorator.ts","../../SonarJS/packages/jsts/src/rules/S905/index.ts","../../SonarJS/packages/jsts/src/rules/S1172/rule.ts","../../SonarJS/packages/jsts/src/rules/S1068/decorator.ts","../../SonarJS/packages/jsts/src/rules/S1068/index.ts","../../SonarJS/packages/jsts/src/rules/S6676/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6676/index.ts","../../SonarJS/packages/jsts/src/rules/S6647/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6647/rule.ts","../../SonarJS/packages/jsts/src/rules/S2123/rule.ts","../../SonarJS/packages/jsts/src/rules/S4335/rule.ts","../../SonarJS/packages/jsts/src/rules/S6443/rule.ts","../../SonarJS/packages/jsts/src/rules/S3504/decorator.ts","../../SonarJS/packages/jsts/src/rules/S3504/index.ts","../../SonarJS/packages/jsts/src/rules/S1526/rule.ts","../../SonarJS/packages/jsts/src/rules/S6299/rule.ts","../../SonarJS/packages/jsts/src/rules/S5547/rule.ts","../../SonarJS/packages/jsts/src/rules/S4426/rule.ts","../../SonarJS/packages/jsts/src/rules/S2208/rule.ts","../../SonarJS/packages/jsts/src/rules/S3760/rule.ts","../../SonarJS/packages/jsts/src/rules/S2259/rule.ts","../../SonarJS/packages/jsts/src/rules/S5264/rule.ts","../../SonarJS/packages/jsts/src/rules/S3498/decorator.ts","../../SonarJS/packages/jsts/src/rules/S3498/index.ts","../../SonarJS/packages/jsts/src/rules/S3757/rule.ts","../../SonarJS/packages/jsts/src/rules/S4721/rule.ts","../../SonarJS/packages/jsts/src/rules/S2819/rule.ts","../../SonarJS/packages/jsts/src/rules/S4524/rule.ts","../../SonarJS/packages/jsts/src/rules/S6572/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6572/index.ts","../../SonarJS/packages/jsts/src/rules/S4138/decorator.ts","../../SonarJS/packages/jsts/src/rules/S4138/index.ts","../../SonarJS/packages/jsts/src/rules/S6598/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6598/index.ts","../../SonarJS/packages/jsts/src/rules/S4156/decorator.ts","../../SonarJS/packages/jsts/src/rules/S4156/index.ts","../../SonarJS/packages/jsts/src/rules/S6606/rule.ts","../../SonarJS/packages/jsts/src/rules/S6661/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6661/index.ts","../../SonarJS/packages/jsts/src/rules/S4634/rule.ts","../../SonarJS/packages/jsts/src/rules/S6666/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6666/index.ts","../../SonarJS/packages/jsts/src/rules/S6557/decorator.ts","../../SonarJS/packages/jsts/src/rules/S6557/index.ts","../../SonarJS/packages/jsts/src/rules/S3512/decorator.ts","../../SonarJS/packages/jsts/src/rules/S3512/index.ts","../../SonarJS/packages/jsts/src/rules/S4322/rule.ts","../../SonarJS/packages/jsts/src/rules/S4823/rule.ts","../../SonarJS/packages/jsts/src/rules/S4507/rule.ts","../../SonarJS/packages/jsts/src/rules/S2245/rule.ts","../../SonarJS/packages/jsts/src/rules/S1444/rule.ts","../../SonarJS/packages/jsts/src/rules/S5443/rule.ts","../../SonarJS/packages/jsts/src/rules/S6959/rule.ts","../../SonarJS/packages/jsts/src/rules/S6564/rule.ts","../../SonarJS/packages/jsts/src/rules/S5843/rule.ts","../../SonarJS/packages/jsts/src/rules/S4784/rule.ts","../../SonarJS/packages/jsts/src/rules/S6440/rule.ts","../../SonarJS/packages/jsts/src/rules/S1438/decorator.ts","../../SonarJS/packages/jsts/src/rules/S1438/index.ts","../../SonarJS/packages/jsts/src/rules/S5876/rule.ts","../../SonarJS/packages/jsts/src/rules/S3499/rule.ts","../../SonarJS/packages/jsts/src/rules/S6397/rule.ts","../../SonarJS/packages/jsts/src/rules/S6035/rule.ts","../../SonarJS/packages/jsts/src/rules/S5852/rule.ts","../../SonarJS/packages/jsts/src/rules/S4818/rule.ts","../../SonarJS/packages/jsts/src/rules/S2392/rule.ts","../../SonarJS/packages/jsts/src/rules/S6439/rule.ts","../../SonarJS/packages/jsts/src/rules/S138/rule.ts","../../SonarJS/packages/jsts/src/rules/S104/rule.ts","../../SonarJS/packages/jsts/src/rules/S107/rule.ts","../../SonarJS/packages/jsts/src/rules/S6324/rule.ts","../../SonarJS/packages/jsts/src/rules/S1534/decorator.ts","../../SonarJS/packages/jsts/src/rules/S1534/rule.ts","../../SonarJS/packages/jsts/src/rules/S2639/rule.ts","../../SonarJS/packages/jsts/src/rules/S128/rule.ts","../../SonarJS/packages/jsts/src/rules/S5856/rule.ts","../../SonarJS/packages/jsts/src/rules/S109/rule.ts","../../SonarJS/packages/jsts/src/rules/S5868/rule.ts","../../SonarJS/packages/jsts/src/rules/S6326/rule.ts","../../SonarJS/packages/jsts/src/rules/S6441/rule.ts","../../SonarJS/packages/jsts/src/rules/S1481/rule.ts","../../SonarJS/packages/jsts/src/rules/S6582/rule.ts","../../SonarJS/packages/jsts/src/rules/S6759/rule.ts","../../SonarJS/packages/jsts/src/rules/S6594/rule.ts","../../SonarJS/packages/jsts/src/rules/S2077/rule.ts","../../SonarJS/packages/jsts/src/rules/S5973/rule.ts","../../SonarJS/packages/jsts/src/rules/S4829/rule.ts","../../SonarJS/packages/jsts/src/rules/S6351/rule.ts","../../SonarJS/packages/jsts/src/rules/S5739/rule.ts","../../SonarJS/packages/jsts/src/rules/S3003/rule.ts","../../SonarJS/packages/jsts/src/rules/S3854/rule.ts","../../SonarJS/packages/jsts/src/rules/S131/rule.ts","../../SonarJS/packages/jsts/src/rules/helpers/isHtmlElement.ts","../../SonarJS/packages/jsts/src/rules/helpers/table.ts","../../SonarJS/packages/jsts/src/rules/S5256/rule.ts","../../SonarJS/packages/jsts/src/rules/S5260/rule.ts","../../SonarJS/packages/jsts/src/rules/S5958/rule.ts","../../SonarJS/packages/jsts/src/rules/S135/rule.ts","../../SonarJS/packages/jsts/src/rules/S5867/rule.ts","../../SonarJS/packages/jsts/src/rules/S6535/rule.ts","../../SonarJS/packages/jsts/src/rules/S1128/rule.ts","../../SonarJS/packages/jsts/src/rules/S5860/rule.ts","../../SonarJS/packages/jsts/src/rules/S4830/rule.ts","../../SonarJS/packages/jsts/src/rules/S5527/rule.ts","../../SonarJS/packages/jsts/src/rules/S3500/rule.ts","../../SonarJS/packages/jsts/src/rules/S2310/rule.ts","../../SonarJS/packages/jsts/src/rules/S2688/decorator.ts","../../SonarJS/packages/jsts/src/rules/S2688/index.ts","../../SonarJS/packages/jsts/src/rules/S4323/rule.ts","../../SonarJS/packages/jsts/src/rules/S1154/rule.ts","../../SonarJS/packages/jsts/src/rules/S3758/rule.ts","../../SonarJS/packages/jsts/src/rules/S117/rule.ts","../../SonarJS/packages/jsts/src/rules/S3735/rule.ts","../../SonarJS/packages/jsts/src/rules/S4423/rule.lib.ts","../../SonarJS/packages/jsts/src/rules/S4423/rule.aws.ts","../../SonarJS/packages/jsts/src/rules/S4423/rule.ts","../../SonarJS/packages/jsts/src/rules/S2817/rule.ts","../../SonarJS/packages/jsts/src/rules/S5689/rule.ts","../../SonarJS/packages/jsts/src/rules/S2755/rule.ts","../../SonarJS/packages/jsts/src/rules/S4817/rule.ts","../../SonarJS/packages/jsts/src/rules/index.ts","../src/plugin.ts","../src/config-rules.ts","../src/configs.ts"],"sourcesContent":["/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { builtinRules } from 'eslint/use-at-your-own-risk';\n/**\n * ESLint core rules.\n */\nexport const eslintRules = Object.fromEntries(builtinRules);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nimport jsxAstUtils from 'jsx-ast-utils';\nimport getElementType from 'eslint-plugin-jsx-a11y/lib/util/getElementType';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { Rule } from 'eslint';\n\nexport function isPresentationTable(context: Rule.RuleContext, node: TSESTree.JSXOpeningElement) {\n  const DISALLOWED_VALUES = ['presentation', 'none'];\n  const type = getElementType(context)(node);\n  if (type.toLowerCase() !== 'table') {\n    return false;\n  }\n  const role = jsxAstUtils.getProp(node.attributes, 'role');\n  if (!role) {\n    return false;\n  }\n  const roleValue = String(jsxAstUtils.getLiteralPropValue(role));\n\n  return DISALLOWED_VALUES.includes(roleValue?.toLowerCase());\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport { findFirstMatchingAncestor, flatMap, getFullyQualifiedName, toEncodedMessage } from '.';\n\nexport type Node = estree.Node | TSESTree.Node;\n\nexport type LoopLike =\n  | estree.WhileStatement\n  | estree.DoWhileStatement\n  | estree.ForStatement\n  | estree.ForOfStatement\n  | estree.ForInStatement;\n\nexport type FunctionNodeType =\n  | estree.FunctionDeclaration\n  | estree.FunctionExpression\n  | estree.ArrowFunctionExpression;\n\nexport type StringLiteral = estree.Literal & { value: string };\n\nexport const FUNCTION_NODES = [\n  'FunctionDeclaration',\n  'FunctionExpression',\n  'ArrowFunctionExpression',\n];\n\nexport const functionLike = new Set([\n  'FunctionDeclaration',\n  'FunctionExpression',\n  'ArrowFunctionExpression',\n  'MethodDefinition',\n]);\n\nexport function isIdentifier(\n  node: Node | undefined,\n  ...values: string[]\n): node is estree.Identifier {\n  return (\n    node?.type === 'Identifier' &&\n    (values.length === 0 || values.some(value => value === node.name))\n  );\n}\n\nexport function isMemberWithProperty(node: estree.Node, ...values: string[]) {\n  return node.type === 'MemberExpression' && isIdentifier(node.property, ...values);\n}\n\nexport function isMemberExpression(\n  node: estree.Node,\n  objectValue: string,\n  ...propertyValue: string[]\n) {\n  if (node.type === 'MemberExpression') {\n    const { object, property } = node;\n    if (isIdentifier(object, objectValue) && isIdentifier(property, ...propertyValue)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function isBinaryPlus(\n  node: estree.Node,\n): node is estree.BinaryExpression & { operator: '+' } {\n  return node.type === 'BinaryExpression' && node.operator === '+';\n}\n\nexport function isUnaryExpression(node: estree.Node | undefined): node is estree.UnaryExpression {\n  return node !== undefined && node.type === 'UnaryExpression';\n}\n\nexport function isArrayExpression(node: estree.Node | undefined): node is estree.ArrayExpression {\n  return node !== undefined && node.type === 'ArrayExpression';\n}\n\nexport function isRequireModule(node: estree.CallExpression, ...moduleNames: string[]) {\n  if (isIdentifier(node.callee, 'require') && node.arguments.length === 1) {\n    const argument = node.arguments[0];\n    if (argument.type === 'Literal') {\n      return moduleNames.includes(String(argument.value));\n    }\n  }\n\n  return false;\n}\n\nexport function isMethodInvocation(\n  callExpression: estree.CallExpression,\n  objectIdentifierName: string,\n  methodName: string,\n  minArgs: number,\n): boolean {\n  return (\n    callExpression.callee.type === 'MemberExpression' &&\n    isIdentifier(callExpression.callee.object, objectIdentifierName) &&\n    isIdentifier(callExpression.callee.property, methodName) &&\n    callExpression.callee.property.type === 'Identifier' &&\n    callExpression.arguments.length >= minArgs\n  );\n}\n\nexport function isFunctionInvocation(\n  callExpression: estree.CallExpression,\n  functionName: string,\n  minArgs: number,\n): boolean {\n  return (\n    callExpression.callee.type === 'Identifier' &&\n    isIdentifier(callExpression.callee, functionName) &&\n    callExpression.arguments.length >= minArgs\n  );\n}\n\nexport function isFunctionCall(\n  node: estree.Node,\n): node is estree.CallExpression & { callee: estree.Identifier } {\n  return node.type === 'CallExpression' && node.callee.type === 'Identifier';\n}\n\nexport function isMethodCall(callExpr: estree.CallExpression): callExpr is estree.CallExpression & {\n  callee: estree.MemberExpression & { property: estree.Identifier };\n} {\n  return (\n    callExpr.callee.type === 'MemberExpression' &&\n    !callExpr.callee.computed &&\n    callExpr.callee.property.type === 'Identifier'\n  );\n}\n\nexport function isCallingMethod(\n  callExpr: estree.CallExpression,\n  arity: number,\n  ...methodNames: string[]\n): callExpr is estree.CallExpression & {\n  callee: estree.MemberExpression & { property: estree.Identifier };\n} {\n  return (\n    isMethodCall(callExpr) &&\n    callExpr.arguments.length === arity &&\n    methodNames.includes(callExpr.callee.property.name)\n  );\n}\n\nexport function isNamespaceSpecifier(importDeclaration: estree.ImportDeclaration, name: string) {\n  return importDeclaration.specifiers.some(\n    ({ type, local }) => type === 'ImportNamespaceSpecifier' && local.name === name,\n  );\n}\n\nexport function isDefaultSpecifier(importDeclaration: estree.ImportDeclaration, name: string) {\n  return importDeclaration.specifiers.some(\n    ({ type, local }) => type === 'ImportDefaultSpecifier' && local.name === name,\n  );\n}\n\nexport function isModuleExports(node: estree.Node): boolean {\n  return (\n    node.type === 'MemberExpression' &&\n    node.object.type === 'Identifier' &&\n    node.object.name === 'module' &&\n    node.property.type === 'Identifier' &&\n    node.property.name === 'exports'\n  );\n}\n\nexport function isFunctionNode(node: estree.Node): node is FunctionNodeType {\n  return FUNCTION_NODES.includes(node.type);\n}\n\n// we have similar function in eslint-plugin-sonarjs, however this one accepts null\n// eventually we should update eslint-plugin-sonarjs\nexport function isLiteral(n: estree.Node | null): n is estree.Literal {\n  return n != null && n.type === 'Literal';\n}\n\nexport function isNullLiteral(n: estree.Node): boolean {\n  return isLiteral(n) && n.value === null;\n}\n\nexport function isFalseLiteral(n: estree.Node): boolean {\n  return isLiteral(n) && n.value === false;\n}\n\nexport function isUndefined(node: Node): boolean {\n  return node.type === 'Identifier' && node.name === 'undefined';\n}\n\n/**\n * Detect expression statements like the following:\n *  myArray[1] = 42;\n *  myArray[1] += 42;\n *  myObj.prop1 = 3;\n *  myObj.prop1 += 3;\n */\nexport function isElementWrite(statement: estree.ExpressionStatement, ref: Scope.Reference) {\n  if (statement.expression.type === 'AssignmentExpression') {\n    const assignmentExpression = statement.expression;\n    const lhs = assignmentExpression.left;\n    return isMemberExpressionReference(lhs, ref);\n  }\n  return false;\n}\n\nfunction isMemberExpressionReference(lhs: estree.Node, ref: Scope.Reference): boolean {\n  return (\n    lhs.type === 'MemberExpression' &&\n    (isReferenceTo(ref, lhs.object) || isMemberExpressionReference(lhs.object, ref))\n  );\n}\n\nexport function isReferenceTo(ref: Scope.Reference, node: estree.Node) {\n  return node.type === 'Identifier' && node === ref.identifier;\n}\n\nexport function getUniqueWriteUsage(context: Rule.RuleContext, name: string, node: estree.Node) {\n  const variable = getVariableFromName(context, name, node);\n  return getUniqueWriteReference(variable);\n}\n\nexport function getUniqueWriteReference(\n  variable: Scope.Variable | undefined,\n): estree.Node | undefined {\n  if (variable) {\n    const writeReferences = variable.references.filter(reference => reference.isWrite());\n    if (writeReferences.length === 1 && writeReferences[0].writeExpr) {\n      return writeReferences[0].writeExpr;\n    }\n  }\n  return undefined;\n}\n\nexport function getUniqueWriteUsageOrNode(\n  context: Rule.RuleContext,\n  node: estree.Node,\n  recursive = false,\n): estree.Node {\n  if (node.type === 'Identifier') {\n    const usage = getUniqueWriteUsage(context, node.name, node);\n    if (usage) {\n      return recursive ? getUniqueWriteUsageOrNode(context, usage, recursive) : usage;\n    } else {\n      return node;\n    }\n  } else {\n    return node;\n  }\n}\n\nexport function getValueOfExpression<T extends estree.Node['type']>(\n  context: Rule.RuleContext,\n  expr: estree.Node | undefined | null,\n  type: T,\n  recursive = false,\n): Extract<estree.Node, { type: T }> | undefined {\n  if (!expr) {\n    return undefined;\n  }\n  if (isNodeType(expr, type)) {\n    return expr;\n  }\n  if (expr.type === 'Identifier') {\n    const usage = getUniqueWriteUsage(context, expr.name, expr);\n    if (usage) {\n      if (isNodeType(usage, type)) {\n        return usage;\n      }\n      if (recursive) {\n        return getValueOfExpression(context, usage, type, true);\n      }\n    }\n  }\n\n  return undefined;\n}\n\n// see https://stackoverflow.com/questions/64262105/narrowing-return-value-of-function-based-on-argument\nfunction isNodeType<T extends Node['type']>(\n  node: Node,\n  type: T,\n): node is Extract<Node, { type: T }> {\n  return node.type === type;\n}\n\n/**\n * for `x = 42` or `let x = 42` when visiting '42' returns 'x' variable\n */\nexport function getLhsVariable(\n  context: Rule.RuleContext,\n  node: estree.Node,\n): Scope.Variable | undefined {\n  const ancestors = context.sourceCode.getAncestors(node);\n  const parent = ancestors[ancestors.length - 1];\n  let formIdentifier: estree.Identifier | undefined;\n  if (parent.type === 'VariableDeclarator' && parent.id.type === 'Identifier') {\n    formIdentifier = parent.id;\n  } else if (parent.type === 'AssignmentExpression' && parent.left.type === 'Identifier') {\n    formIdentifier = parent.left;\n  }\n  if (formIdentifier) {\n    return getVariableFromName(context, formIdentifier.name, node);\n  }\n\n  return undefined;\n}\n\nexport function getVariableFromScope(scope: Scope.Scope | null, name: string) {\n  let variable;\n  while (variable == null && scope != null) {\n    variable = scope.variables.find(value => value.name === name);\n    scope = scope.upper;\n  }\n  return variable;\n}\n\nexport function getVariableFromName(context: Rule.RuleContext, name: string, node: estree.Node) {\n  const scope: Scope.Scope | null = context.sourceCode.getScope(node);\n  return getVariableFromScope(scope, name);\n}\n\n/**\n * Takes array of arguments. Keeps following variable definitions\n * and unpacking arrays as long as possible. Returns flattened\n * array with all collected nodes.\n *\n * A usage example should clarify why this might be useful.\n * According to ExpressJs `app.use` spec, the arguments can be:\n *\n * - A middleware function.\n * - A series of middleware functions (separated by commas).\n * - An array of middleware functions.\n * - A combination of all of the above.\n *\n * This means that methods like `app.use` accept variable arguments,\n * but also arrays, or combinations thereof. This methods helps\n * to flatten out such complicated composed argument lists.\n */\nexport function flattenArgs(context: Rule.RuleContext, args: estree.Node[]): estree.Node[] {\n  // Invokes `getUniqueWriteUsageOrNode` at most once, from then on\n  // only flattens arrays.\n  function recHelper(nodePossiblyIdentifier: estree.Node): estree.Node[] {\n    const n = getUniqueWriteUsageOrNode(context, nodePossiblyIdentifier);\n    if (n.type === 'ArrayExpression') {\n      return flatMap(n.elements as estree.Node[], recHelper);\n    } else {\n      return [n];\n    }\n  }\n\n  return flatMap(args, recHelper);\n}\n\nexport function resolveIdentifiers(\n  node: TSESTree.Node,\n  acceptShorthand = false,\n): TSESTree.Identifier[] {\n  const identifiers: TSESTree.Identifier[] = [];\n  resolveIdentifiersAcc(node, identifiers, acceptShorthand);\n  return identifiers;\n}\n\nfunction resolveIdentifiersAcc(\n  node: TSESTree.Node,\n  identifiers: TSESTree.Identifier[],\n  acceptShorthand: boolean,\n): void {\n  if (!node) {\n    return;\n  }\n  switch (node.type) {\n    case 'Identifier':\n      identifiers.push(node);\n      break;\n    case 'ObjectPattern':\n      node.properties.forEach(prop => resolveIdentifiersAcc(prop, identifiers, acceptShorthand));\n      break;\n    case 'ArrayPattern':\n      node.elements.forEach(\n        elem => elem && resolveIdentifiersAcc(elem, identifiers, acceptShorthand),\n      );\n      break;\n    case 'Property':\n      if (acceptShorthand || !node.shorthand) {\n        resolveIdentifiersAcc(node.value, identifiers, acceptShorthand);\n      }\n      break;\n    case 'RestElement':\n      resolveIdentifiersAcc(node.argument, identifiers, acceptShorthand);\n      break;\n    case 'AssignmentPattern':\n      resolveIdentifiersAcc(node.left, identifiers, acceptShorthand);\n      break;\n    case 'TSParameterProperty':\n      resolveIdentifiersAcc(node.parameter, identifiers, acceptShorthand);\n      break;\n  }\n}\n\nexport function getPropertyWithValue(\n  context: Rule.RuleContext,\n  objectExpression: estree.ObjectExpression,\n  propertyName: string,\n  propertyValue: estree.Literal['value'],\n): estree.Property | undefined {\n  const maybeProperty = getProperty(objectExpression, propertyName, context);\n  if (maybeProperty) {\n    const maybePropertyValue = getValueOfExpression(context, maybeProperty.value, 'Literal');\n    if (maybePropertyValue?.value === propertyValue) {\n      return maybeProperty;\n    }\n  }\n  return undefined;\n}\n\nfunction getPropertyFromSpreadElement(\n  spreadElement: estree.SpreadElement,\n  key: string,\n  ctx: Rule.RuleContext,\n): estree.Property | null | undefined {\n  const props = getValueOfExpression(ctx, spreadElement.argument, 'ObjectExpression');\n  const recursiveDefinition = findFirstMatchingAncestor(\n    spreadElement.argument as TSESTree.Node,\n    node => node === props,\n  );\n  if (recursiveDefinition || props === undefined) {\n    return undefined;\n  }\n  return getProperty(props, key, ctx);\n}\n\n/**\n * Retrieves the property with the specified key from the given node.\n * @returns The property if found, or null if not found, or undefined if property not found and one of the properties\n * is an unresolved SpreadElement.\n */\nexport function getProperty(\n  expr: estree.Node | undefined | null,\n  key: string,\n  ctx: Rule.RuleContext,\n): estree.Property | null | undefined {\n  if (expr?.type !== 'ObjectExpression') {\n    return null;\n  }\n  let unresolvedSpreadElement = false;\n  for (let i = expr.properties.length - 1; i >= 0; --i) {\n    const property = expr.properties[i];\n    if (isProperty(property, key)) {\n      return property;\n    }\n    if (property.type === 'SpreadElement') {\n      const prop = getPropertyFromSpreadElement(property, key, ctx);\n      if (prop === undefined) {\n        unresolvedSpreadElement = true;\n      } else if (prop !== null) {\n        return prop;\n      }\n    }\n  }\n  if (unresolvedSpreadElement) {\n    return undefined;\n  }\n  return null;\n\n  function isProperty(node: estree.Node, key: string): node is estree.Property {\n    return (\n      node.type === 'Property' &&\n      (isIdentifier(node.key, key) || (isStringLiteral(node.key) && node.key.value === key))\n    );\n  }\n}\n\nexport function resolveFromFunctionReference(\n  context: Rule.RuleContext,\n  functionIdentifier: estree.Identifier,\n) {\n  const { scopeManager } = context.sourceCode;\n  for (const scope of scopeManager.scopes) {\n    const reference = scope.references.find(r => r.identifier === functionIdentifier);\n    if (\n      reference?.resolved &&\n      reference.resolved.defs.length === 1 &&\n      reference.resolved.defs[0].type === 'FunctionName'\n    ) {\n      return reference.resolved.defs[0].node;\n    }\n  }\n  return null;\n}\n\nexport function resolveFunction(\n  context: Rule.RuleContext,\n  node: estree.Node,\n): estree.Function | null {\n  if (isFunctionNode(node)) {\n    return node;\n  } else if (node.type === 'Identifier') {\n    return resolveFromFunctionReference(context, node);\n  } else {\n    return null;\n  }\n}\n\nexport function checkSensitiveCall(\n  context: Rule.RuleContext,\n  callExpression: estree.CallExpression,\n  sensitiveArgumentIndex: number,\n  sensitiveProperty: string,\n  sensitivePropertyValue: boolean,\n  message: string,\n) {\n  if (callExpression.arguments.length < sensitiveArgumentIndex + 1) {\n    return;\n  }\n  const sensitiveArgument = callExpression.arguments[sensitiveArgumentIndex];\n  const options = getValueOfExpression(context, sensitiveArgument, 'ObjectExpression');\n  if (!options) {\n    return;\n  }\n  const unsafeProperty = getPropertyWithValue(\n    context,\n    options,\n    sensitiveProperty,\n    sensitivePropertyValue,\n  );\n  if (unsafeProperty) {\n    context.report({\n      node: callExpression.callee,\n      message: toEncodedMessage(message, [unsafeProperty]),\n    });\n  }\n}\n\nexport function isStringLiteral(node: estree.Node): node is StringLiteral {\n  return isLiteral(node) && typeof node.value === 'string';\n}\n\nexport function isBooleanLiteral(node: estree.Node): node is estree.Literal & { value: boolean } {\n  return isLiteral(node) && typeof node.value === 'boolean';\n}\n\nexport function isNumberLiteral(node: estree.Node): node is estree.Literal & { value: number } {\n  return isLiteral(node) && typeof node.value === 'number';\n}\n\nexport function isRegexLiteral(node: estree.Node): node is estree.RegExpLiteral {\n  return node.type === 'Literal' && node.value instanceof RegExp;\n}\n\n/**\n * Checks if the node is of the form: foo.bar\n *\n * @param node\n * @returns\n */\nexport function isDotNotation(\n  node: estree.Node,\n): node is estree.MemberExpression & { property: estree.Identifier } {\n  return node.type === 'MemberExpression' && !node.computed && node.property.type === 'Identifier';\n}\n\n/**\n * Checks if the node is of the form: foo[\"bar\"]\n *\n * @param node\n * @returns\n */\nexport function isIndexNotation(\n  node: estree.Node,\n): node is estree.MemberExpression & { property: StringLiteral } {\n  return node.type === 'MemberExpression' && node.computed && isStringLiteral(node.property);\n}\n\nexport function isObjectDestructuring(\n  node: estree.Node,\n): node is\n  | (estree.VariableDeclarator & { id: estree.ObjectPattern })\n  | (estree.AssignmentExpression & { left: estree.ObjectPattern }) {\n  return (\n    (node.type === 'VariableDeclarator' && node.id.type === 'ObjectPattern') ||\n    (node.type === 'AssignmentExpression' && node.left.type === 'ObjectPattern')\n  );\n}\n\nexport function isStaticTemplateLiteral(node: estree.Node): node is estree.TemplateLiteral {\n  return (\n    node.type === 'TemplateLiteral' && node.expressions.length === 0 && node.quasis.length === 1\n  );\n}\n\n// Test for raw expressions like: String.raw`c:\\foo\\bar.txt` that corresponds to 'c:\\\\foo\\\\bar.txt'\nexport function isSimpleRawString(node: estree.Node): node is estree.TaggedTemplateExpression {\n  return (\n    node.type === 'TaggedTemplateExpression' &&\n    isDotNotation(node.tag) &&\n    isIdentifier(node.tag.object, 'String') &&\n    isIdentifier(node.tag.property, 'raw') &&\n    isStaticTemplateLiteral(node.quasi)\n  );\n}\n\n// In simple raw strings, the literal value is: node.quasi.quasis[0].value.raw\n// This function fails if isSimpleRawString() is not returning true for the node.\nexport function getSimpleRawStringValue(node: estree.TaggedTemplateExpression) {\n  return node.quasi.quasis[0].value.raw;\n}\n\nexport function isThisExpression(node: estree.Node): node is estree.ThisExpression {\n  return node.type === 'ThisExpression';\n}\n\nexport function isProperty(node: estree.Node): node is estree.Property {\n  return node.type === 'Property';\n}\n\n/**\n * Check if an identifier has no known value, meaning:\n *\n * - It's not imported/required\n * - Defined variable without any write references (function parameter?)\n * - Non-defined variable (a possible global?)\n *\n * @param node Node to check\n * @param ctx Rule context\n */\nexport function isUnresolved(node: estree.Node | undefined | null, ctx: Rule.RuleContext): boolean {\n  if (!node || getFullyQualifiedName(ctx, node) || isUndefined(node)) {\n    return false;\n  }\n  let nodeToCheck: estree.Node = node;\n  while (nodeToCheck.type === 'MemberExpression') {\n    nodeToCheck = nodeToCheck.object;\n  }\n\n  if (nodeToCheck.type === 'Identifier') {\n    const variable = getVariableFromName(ctx, nodeToCheck.name, node);\n    const writeReferences = variable?.references.filter(reference => reference.isWrite());\n    if (!variable || !writeReferences?.length) {\n      return true;\n    }\n  }\n  return false;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { Rule } from 'eslint';\nimport estree, { Node } from 'estree';\nimport { functionLike } from './ast';\n\nexport function findFirstMatchingLocalAncestor(\n  node: TSESTree.Node,\n  predicate: (node: TSESTree.Node) => boolean,\n) {\n  return localAncestorsChain(node).find(predicate);\n}\n\nexport function findFirstMatchingAncestor(\n  node: TSESTree.Node,\n  predicate: (node: TSESTree.Node) => boolean,\n) {\n  return ancestorsChain(node, new Set()).find(predicate);\n}\n\nexport function localAncestorsChain(node: TSESTree.Node) {\n  return ancestorsChain(node, functionLike);\n}\n\nexport function ancestorsChain(node: TSESTree.Node, boundaryTypes: Set<string>) {\n  const chain: TSESTree.Node[] = [];\n\n  let currentNode = node.parent;\n  while (currentNode) {\n    chain.push(currentNode);\n    if (boundaryTypes.has(currentNode.type)) {\n      break;\n    }\n    currentNode = currentNode.parent;\n  }\n  return chain;\n}\n\nexport function getParent(context: Rule.RuleContext, node: estree.Node) {\n  const ancestors = context.sourceCode.getAncestors(node);\n  return ancestors.length > 0 ? ancestors[ancestors.length - 1] : undefined;\n}\n\n/**\n * Returns the parent of an ESLint node\n *\n * This function assumes that an ESLint node exposes a parent property,\n * which is always defined. However, it's better to use `getParent` if\n * it is possible to retrieve the parent based on the rule context.\n *\n * It should eventually disappear once we come up with a proper solution\n * against the conflicting typings between ESLint and TypeScript ESLint\n * when it comes to the parent of a node.\n *\n * @param node an ESLint node\n * @returns the parent node\n */\nexport function getNodeParent(node: Node) {\n  return (node as TSESTree.Node).parent as Node;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getFullyQualifiedName, getImportDeclarations, getRequireCalls, isIdentifier } from '.';\n\nexport namespace Chai {\n  export function isImported(context: Rule.RuleContext): boolean {\n    return (\n      getRequireCalls(context).some(\n        r => r.arguments[0].type === 'Literal' && r.arguments[0].value === 'chai',\n      ) || getImportDeclarations(context).some(i => i.source.value === 'chai')\n    );\n  }\n\n  export function isAssertion(context: Rule.RuleContext, node: estree.Node): boolean {\n    return isAssertUsage(context, node) || isExpectUsage(context, node) || isShouldUsage(node);\n  }\n\n  function isAssertUsage(context: Rule.RuleContext, node: estree.Node) {\n    // assert(), assert.<expr>(), chai.assert(), chai.assert.<expr>()\n    const fqn = extractFQNforCallExpression(context, node);\n    if (!fqn) {\n      return false;\n    }\n    const names = fqn.split('.');\n    return names[0] === 'chai' && names[1] === 'assert';\n  }\n\n  function isExpectUsage(context: Rule.RuleContext, node: estree.Node) {\n    // expect(), chai.expect()\n    return extractFQNforCallExpression(context, node) === 'chai.expect';\n  }\n\n  function isShouldUsage(node: estree.Node) {\n    // <expr>.should.<expr>\n    return node.type === 'MemberExpression' && isIdentifier(node.property, 'should');\n  }\n\n  function extractFQNforCallExpression(context: Rule.RuleContext, node: estree.Node) {\n    if (node.type !== 'CallExpression') {\n      return undefined;\n    }\n    return getFullyQualifiedName(context, node);\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const collectionConstructor = ['Array', 'Map', 'Set', 'WeakSet', 'WeakMap'];\n\nexport const writingMethods = [\n  // array methods\n  'copyWithin',\n  'fill',\n  'pop',\n  'push',\n  'reverse',\n  'set',\n  'shift',\n  'sort',\n  'splice',\n  'unshift',\n  // map, set methods\n  'add',\n  'clear',\n  'delete',\n];\n\nexport const sortLike = ['sort', '\"sort\"', \"'sort'\"];\nexport const copyingSortLike = ['toSorted', '\"toSorted\"', \"'toSorted'\"];\n\nexport function flatMap<A, B>(xs: A[], f: (e: A) => B[]): B[] {\n  const acc: B[] = [];\n  for (const x of xs) {\n    acc.push(...f(x));\n  }\n  return acc;\n}\n\nexport function last<T>(arr: Array<T>) {\n  return arr[arr.length - 1];\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\n\nconst NUM_ARGS_NODE_MESSAGE = 2;\n\nexport type ReportOverrider = (\n  context: Rule.RuleContext,\n  reportDescriptor: Rule.ReportDescriptor,\n) => void;\nexport type ContextOverrider = (\n  context: Rule.RuleContext,\n  onReport: ReportOverrider,\n) => Rule.RuleContext;\n\n/**\n * Modifies the behavior of `context.report(descriptor)` for a given rule.\n *\n * Useful for performing additional checks before reporting an issue.\n *\n * @param rule the original rule\n * @param onReport replacement for `context.report(descr)`\n *                 invocations used inside of the rule\n * @param contextOverrider optional function to change the default context overridding mechanism\n */\nexport function interceptReport(\n  rule: Rule.RuleModule,\n  onReport: ReportOverrider,\n  contextOverrider?: ContextOverrider,\n): Rule.RuleModule {\n  return {\n    // meta should be defined only when it's defined on original rule, otherwise RuleTester will fail\n    ...(!!rule.meta && { meta: rule.meta }),\n    create(originalContext: Rule.RuleContext) {\n      let interceptingContext: Rule.RuleContext;\n      if (contextOverrider == null) {\n        interceptingContext = {\n          id: originalContext.id,\n          options: originalContext.options,\n          settings: originalContext.settings,\n          parserPath: originalContext.parserPath,\n          parserOptions: originalContext.parserOptions,\n          parserServices: originalContext.sourceCode.parserServices,\n          sourceCode: originalContext.sourceCode,\n          cwd: originalContext.cwd,\n          filename: originalContext.filename,\n          physicalFilename: originalContext.physicalFilename,\n          languageOptions: originalContext.languageOptions,\n\n          getCwd(): string {\n            return originalContext.cwd;\n          },\n\n          getPhysicalFilename(): string {\n            return originalContext.physicalFilename;\n          },\n\n          getAncestors() {\n            return originalContext.getAncestors();\n          },\n\n          getDeclaredVariables(node: estree.Node) {\n            return originalContext.getDeclaredVariables(node);\n          },\n\n          getFilename() {\n            return originalContext.filename;\n          },\n\n          getScope() {\n            return originalContext.getScope();\n          },\n\n          getSourceCode() {\n            return originalContext.sourceCode;\n          },\n\n          markVariableAsUsed(name: string) {\n            return originalContext.markVariableAsUsed(name);\n          },\n\n          report(...args: any[]): void {\n            let descr: Rule.ReportDescriptor | undefined = undefined;\n            if (args.length === 1) {\n              descr = args[0] as Rule.ReportDescriptor;\n            } else if (args.length === NUM_ARGS_NODE_MESSAGE && typeof args[1] === 'string') {\n              // not declared in the `.d.ts`, but used in practice by rules written in JS\n              descr = {\n                node: args[0] as estree.Node,\n                message: args[1],\n              };\n            }\n            if (descr) {\n              onReport(originalContext, descr);\n            }\n          },\n        };\n      } else {\n        interceptingContext = contextOverrider(originalContext, onReport);\n      }\n      return rule.create(interceptingContext);\n    },\n  };\n}\n\n// interceptReport() by default doesn't work with the React plugin\n// as the rules fail to find the context getFirstTokens() function.\nexport function interceptReportForReact(rule: Rule.RuleModule, onReport: ReportOverrider) {\n  return interceptReport(rule, onReport, contextOverriderForReact);\n}\n\nfunction contextOverriderForReact(\n  context: Rule.RuleContext,\n  onReport: (context: Rule.RuleContext, reportDescriptor: Rule.ReportDescriptor) => void,\n): Rule.RuleContext {\n  const overriddenReportContext = {\n    report(reportDescriptor: Rule.ReportDescriptor) {\n      onReport(context, reportDescriptor);\n    },\n  };\n\n  Object.setPrototypeOf(overriddenReportContext, context);\n\n  return overriddenReportContext as Rule.RuleContext;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\n\n/**\n * Merges the listeners of an arbitrary number of ESLint-based rules\n *\n * The purpose of this helper function is to merge the behaviour of a\n * variable number of rules. An ESLint rule \"listens to\" node visits based\n * on a node selector. If the node selector matches, the listener then\n * invokes a callback to proceed further with the node being visited.\n *\n * It supports when multiple rules share the same listeners, e.g., 2 rules\n * listen to `CallExpression` node visits. They will be run one after the other.\n *\n * @param rules rules to merge\n * @returns the merge of the rules' listeners\n */\nexport function mergeRules(...rules: Rule.RuleListener[]): Rule.RuleListener {\n  const merged = Object.assign({}, ...rules);\n\n  for (const listener of Object.keys(merged)) {\n    merged[listener] = mergeListeners(...rules.map(rule => rule[listener]));\n  }\n  return merged;\n}\n\nfunction mergeListeners(...listeners: (Function | undefined)[]) {\n  return (...args: any[]) => {\n    for (const listener of listeners) {\n      if (listener) {\n        listener(...args);\n      }\n    }\n  };\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport fs, { constants } from 'fs';\nimport path from 'path';\n\n/**\n * Byte Order Marker\n */\nconst BOM_BYTE = 0xfeff;\n\n/**\n * The type of input file\n *\n * The scanner indexes input files based on the project configuration,\n * if any. It determines wheter an input file denotes a `MAIN` file,\n * i.e., a source file, or a `TEST` file.\n *\n * The type of input file is then used by the linter to select which\n * rule configurations to apply, that is, which rules the linter should\n * use to analyze the file.\n */\nexport type FileType = 'MAIN' | 'TEST';\n\n/**\n * Asynchronous read of file contents from a file path\n *\n * The function gets rid of any Byte Order Marker (BOM)\n * present in the file's header.\n *\n * @param filePath the path of a file\n * @returns Promise which resolves with the content of the file\n */\nexport async function readFile(filePath: string) {\n  const fileContent = await fs.promises.readFile(filePath, { encoding: 'utf8' });\n  return stripBOM(fileContent);\n}\n\n/**\n * Synchronous read of file contents from a file path\n *\n * The function gets rid of any Byte Order Marker (BOM)\n * present in the file's header.\n *\n * @param filePath the path of a file\n * @returns Promise which resolves with the content of the file\n */\nexport function readFileSync(filePath: string) {\n  const fileContent = fs.readFileSync(filePath, { encoding: 'utf8' });\n  return stripBOM(fileContent);\n}\n\n/**\n * Removes any Byte Order Marker (BOM) from a string's head\n *\n * A string's head is nothing else but its first character.\n *\n * @param str the input string\n * @returns the stripped string\n */\nexport function stripBOM(str: string) {\n  if (str.charCodeAt(0) === BOM_BYTE) {\n    return str.slice(1);\n  }\n  return str;\n}\n/**\n * Converts a path to Unix format\n * @param path the path to convert\n * @returns the converted path\n */\nexport function toUnixPath(path: string) {\n  return path.replace(/[\\\\/]+/g, '/');\n}\n\n/**\n * Adds tsconfig.json to a path if it does not exist\n *\n * @param tsConfig\n */\nexport function addTsConfigIfDirectory(tsConfig: string) {\n  try {\n    if (fs.lstatSync(tsConfig).isDirectory()) {\n      return path.join(tsConfig, 'tsconfig.json');\n    }\n\n    return tsConfig;\n  } catch {\n    return null;\n  }\n}\n\n/**\n * Asynchronous check if file is readable.\n *\n * @param path the file path\n * @returns true if file is readable. false otherwise\n */\nexport async function fileReadable(path: string) {\n  try {\n    await fs.promises.access(path, constants.R_OK);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { unicodeEscape } from '../helpers';\n\n/**\n * The possible codes of analysis errors\n *\n * The `Unexpected` value denotes a runtime error which is either\n * unpredictable or occurs rarely to deserve its own category.\n */\nexport enum ErrorCode {\n  Parsing = 'PARSING',\n  FailingTypeScript = 'FAILING_TYPESCRIPT',\n  // We are stuck with this name because of possible external dependents\n  Unexpected = 'GENERAL_ERROR',\n  LinterInitialization = 'LINTER_INITIALIZATION',\n}\n\nexport interface ErrorData {\n  line: number;\n}\n\nexport class APIError extends Error {\n  code: ErrorCode;\n  data?: ErrorData;\n\n  private constructor(code: ErrorCode, message: string, data?: ErrorData) {\n    super(unicodeEscape(message));\n    this.code = code;\n    this.data = data;\n  }\n\n  /**\n   * Builds a failing TypeScript error.\n   */\n  static failingTypeScriptError(message: string) {\n    return new APIError(ErrorCode.FailingTypeScript, message);\n  }\n\n  /**\n   * Builds a linter initialization error.\n   */\n  static linterError(message: string) {\n    return new APIError(ErrorCode.LinterInitialization, message);\n  }\n\n  /**\n   * Builds a parsing error.\n   */\n  static parsingError(message: string, data: ErrorData) {\n    return new APIError(ErrorCode.Parsing, message, data);\n  }\n\n  /**\n   * Builds an unexpected runtime error.\n   */\n  static unexpectedError(message: string) {\n    return new APIError(ErrorCode.Unexpected, message);\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport { getRuleSchema } from './helpers';\n\n/**\n * An internal rule parameter for secondary location support\n *\n * ESLint API for reporting messages does not provide a mechanism to\n * include more than locations and fixes in the generated report. It\n * prevents us from having a proper support for secondary locations.\n *\n * As a workaround, internal rules (or even decorated ones) that want\n * to use secondary locations first need to include in their schema a\n * `sonar-runtime` parameter as follows:\n *\n * ```\n *  meta: {\n *    schema: [{\n *      enum: [SONAR_RUNTIME]\n *    }]\n *  }\n * ```\n *\n * Rules then need to encode secondary locations in the report descriptor\n * with the `toEncodedMessage` helper. This helper function encodes such\n * locations through stringified JSON objects in the `message` property\n * of the descriptor.\n *\n * The linter wrapper eventually decodes issues with secondary locations\n * by checking the presence of the internal parameter in the rule schema\n * while transforming an ESLint message into a SonarQube issue.\n */\nexport const SONAR_RUNTIME = 'sonar-runtime';\n\n/**\n * Checks if the rule schema sets the `sonar-runtime` internal parameter\n * @param ruleModule the rule definition\n * @param ruleId the ESLint rule key\n * @returns true if the rule definition includes the parameter\n */\nexport function hasSonarRuntimeOption(\n  ruleModule: Rule.RuleModule | undefined,\n  ruleId: string,\n): boolean {\n  const schema = getRuleSchema(ruleModule, ruleId);\n  return !!schema && schema.some(option => !!option.enum && option.enum.includes(SONAR_RUNTIME));\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  getFullyQualifiedName,\n  isModuleExports,\n  isMethodInvocation,\n  flattenArgs,\n  getParent,\n  toEncodedMessage,\n} from '.';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\n/**\n * This modules provides utilities for writing rules about Express.js.\n */\nexport namespace Express {\n  const EXPRESS = 'express';\n\n  /**\n   * Checks whether the declaration looks somewhat like `<id> = express()`\n   * and returns `<id>` if it matches.\n   */\n  export function attemptFindAppInstantiation(\n    varDecl: estree.VariableDeclarator,\n    context: Rule.RuleContext,\n  ): estree.Identifier | undefined {\n    const rhs = varDecl.init;\n    if (rhs && rhs.type === 'CallExpression' && getFullyQualifiedName(context, rhs) === EXPRESS) {\n      const pattern = varDecl.id;\n      return pattern.type === 'Identifier' ? pattern : undefined;\n    }\n    return undefined;\n  }\n\n  /**\n   * Checks whether the function injects an instantiated app and is exported like `module.exports = function(app) {}`\n   * or `module.exports.property = function(app) {}`, and returns app if it matches.\n   */\n  export function attemptFindAppInjection(\n    functionDef: estree.Function,\n    context: Rule.RuleContext,\n    node: estree.Node,\n  ): estree.Identifier | undefined {\n    const app = functionDef.params.find(\n      param => param.type === 'Identifier' && param.name === 'app',\n    ) as estree.Identifier | undefined;\n    if (app) {\n      const parent = getParent(context, node);\n      if (parent?.type === 'AssignmentExpression') {\n        const { left } = parent;\n        if (\n          left.type === 'MemberExpression' &&\n          (isModuleExports(left) || isModuleExports(left.object))\n        ) {\n          return app;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Checks whether the expression looks somewhat like `app.use(m1, [m2, m3], ..., mN)`,\n   * where one of `mK`-nodes satisfies the given predicate.\n   */\n  export function isUsingMiddleware(\n    context: Rule.RuleContext,\n    callExpression: estree.CallExpression,\n    app: estree.Identifier,\n    middlewareNodePredicate: (n: estree.Node) => boolean,\n  ): boolean {\n    if (isMethodInvocation(callExpression, app.name, 'use', 1)) {\n      const flattenedArgs = flattenArgs(context, callExpression.arguments);\n      return Boolean(flattenedArgs.find(middlewareNodePredicate));\n    }\n    return false;\n  }\n\n  /**\n   * Checks whether a node looks somewhat like `require('m')()` for\n   * some middleware `m` from the list of middlewares.\n   */\n  export function isMiddlewareInstance(\n    context: Rule.RuleContext,\n    middlewares: string[],\n    n: estree.Node,\n  ): boolean {\n    if (n.type === 'CallExpression') {\n      const fqn = getFullyQualifiedName(context, n);\n      return middlewares.some(middleware => middleware === fqn);\n    }\n    return false;\n  }\n\n  /**\n   * Rule factory for detecting sensitive settings that are passed to\n   * middlewares eventually used by Express.js applications:\n   *\n   * app.use(\n   *   middleware(settings)\n   * )\n   *\n   * or\n   *\n   * app.use(\n   *   middleware.method(settings)\n   * )\n   *\n   * @param sensitivePropertyFinder - a function looking for a sensitive setting on a middleware call\n   * @param message - the reported message when an issue is raised\n   * @returns a rule module that raises issues when a sensitive property is found\n   */\n  export function SensitiveMiddlewarePropertyRule(\n    sensitivePropertyFinder: (\n      context: Rule.RuleContext,\n      middlewareCall: estree.CallExpression,\n    ) => estree.Property[],\n    message: string,\n  ): Rule.RuleModule {\n    return {\n      meta: {\n        schema: [\n          {\n            // internal parameter for rules having secondary locations\n            enum: [SONAR_RUNTIME],\n          },\n        ],\n      },\n      create(context: Rule.RuleContext) {\n        let app: estree.Identifier | null;\n        let sensitiveProperties: estree.Property[];\n\n        function isExposing(middlewareNode: estree.Node): boolean {\n          return Boolean(sensitiveProperties.push(...findSensitiveProperty(middlewareNode)));\n        }\n\n        function findSensitiveProperty(middlewareNode: estree.Node): estree.Property[] {\n          if (middlewareNode.type === 'CallExpression') {\n            return sensitivePropertyFinder(context, middlewareNode);\n          }\n          return [];\n        }\n\n        return {\n          Program: () => {\n            app = null;\n            sensitiveProperties = [];\n          },\n          CallExpression: (node: estree.Node) => {\n            if (app) {\n              const callExpr = node as estree.CallExpression;\n              const isSafe = !isUsingMiddleware(context, callExpr, app, isExposing);\n              if (!isSafe) {\n                for (const sensitive of sensitiveProperties) {\n                  context.report({\n                    node: callExpr,\n                    message: toEncodedMessage(message, [sensitive as TSESTree.Property]),\n                  });\n                }\n                sensitiveProperties = [];\n              }\n            }\n          },\n          VariableDeclarator: (node: estree.Node) => {\n            if (!app) {\n              const varDecl = node as estree.VariableDeclarator;\n              const instantiatedApp = attemptFindAppInstantiation(varDecl, context);\n              if (instantiatedApp) {\n                app = instantiatedApp;\n              }\n            }\n          },\n          ':function': (node: estree.Node) => {\n            if (!app) {\n              const functionDef = node as estree.Function;\n              const injectedApp = attemptFindAppInjection(functionDef, context, node);\n              if (injectedApp) {\n                app = injectedApp;\n              }\n            }\n          },\n        };\n      },\n    };\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport { FileType } from '@sonar/shared';\n\nexport function isMainCode(context: Rule.RuleContext) {\n  return !isTestCode(context);\n}\n\nexport function isTestCode(context: Rule.RuleContext) {\n  return getFileType(context) === 'TEST';\n}\n\nfunction getFileType(context: Rule.RuleContext): FileType {\n  return context.settings['fileType'];\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// copied from javascript-frontend/src/main/resources/org/sonar/javascript/tree/symbols/globals.json ,\n// which should be deleted once the frontend migration is over\nexport const globalsByLibraries = {\n  builtin: [\n    'Array',\n    'ArrayBuffer',\n    'Boolean',\n    'DataView',\n    'Date',\n    'Error',\n    'EvalError',\n    'Float32Array',\n    'Float64Array',\n    'Function',\n    'Infinity',\n    'Int16Array',\n    'Int32Array',\n    'Int8Array',\n    'JSON',\n    'Map',\n    'Math',\n    'NaN',\n    'Number',\n    'Object',\n    'Promise',\n    'Proxy',\n    'RangeError',\n    'ReferenceError',\n    'Reflect',\n    'RegExp',\n    'Set',\n    'String',\n    'Symbol',\n    'SyntaxError',\n    'TypeError',\n    'URIError',\n    'Uint16Array',\n    'Uint32Array',\n    'Uint8Array',\n    'Uint8ClampedArray',\n    'WeakMap',\n    'WeakSet',\n    'constructor',\n    'decodeURI',\n    'decodeURIComponent',\n    'encodeURI',\n    'encodeURIComponent',\n    'escape',\n    'eval',\n    'hasOwnProperty',\n    'isFinite',\n    'isNaN',\n    'isPrototypeOf',\n    'parseFloat',\n    'parseInt',\n    'propertyIsEnumerable',\n    'toLocaleString',\n    'toString',\n    'unescape',\n    'valueOf',\n  ],\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Window\n  // https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model\n  browser: [\n    'addEventListener',\n    'alert',\n    'AnalyserNode',\n    'Animation',\n    'AnimationEffectReadOnly',\n    'AnimationEffectTiming',\n    'AnimationEffectTimingReadOnly',\n    'AnimationEvent',\n    'AnimationPlaybackEvent',\n    'AnimationTimeline',\n    'applicationCache',\n    'ApplicationCache',\n    'ApplicationCacheErrorEvent',\n    'atob',\n    'Attr',\n    'Audio',\n    'AudioBuffer',\n    'AudioBufferSourceNode',\n    'AudioContext',\n    'AudioDestinationNode',\n    'AudioListener',\n    'AudioNode',\n    'AudioParam',\n    'AudioProcessingEvent',\n    'AutocompleteErrorEvent',\n    'BarProp',\n    'BatteryManager',\n    'BeforeUnloadEvent',\n    'BiquadFilterNode',\n    'Blob',\n    'blur',\n    'btoa',\n    'Cache',\n    'caches',\n    'CacheStorage',\n    'cancelAnimationFrame',\n    'CanvasGradient',\n    'CanvasPattern',\n    'CanvasRenderingContext2D',\n    'CDATASection',\n    'ChannelMergerNode',\n    'ChannelSplitterNode',\n    'CharacterData',\n    'clearInterval',\n    'clearTimeout',\n    'clientInformation',\n    'ClientRect',\n    'ClientRectList',\n    'ClipboardEvent',\n    'close',\n    'closed',\n    'CloseEvent',\n    'Comment',\n    'CompositionEvent',\n    'confirm',\n    'console',\n    'ConvolverNode',\n    'Credential',\n    'CredentialsContainer',\n    'crypto',\n    'Crypto',\n    'CryptoKey',\n    'CSS',\n    'CSSAnimation',\n    'CSSFontFaceRule',\n    'CSSImportRule',\n    'CSSKeyframeRule',\n    'CSSKeyframesRule',\n    'CSSMediaRule',\n    'CSSPageRule',\n    'CSSRule',\n    'CSSRuleList',\n    'CSSStyleDeclaration',\n    'CSSStyleRule',\n    'CSSStyleSheet',\n    'CSSSupportsRule',\n    'CSSTransition',\n    'CSSUnknownRule',\n    'CSSViewportRule',\n    'customElements',\n    'CustomEvent',\n    'DataTransfer',\n    'DataTransferItem',\n    'DataTransferItemList',\n    'Debug',\n    'defaultStatus',\n    'defaultstatus',\n    'DelayNode',\n    'DeviceMotionEvent',\n    'DeviceOrientationEvent',\n    'devicePixelRatio',\n    'dispatchEvent',\n    'document',\n    'Document',\n    'DocumentFragment',\n    'DocumentTimeline',\n    'DocumentType',\n    'DOMError',\n    'DOMException',\n    'DOMImplementation',\n    'DOMParser',\n    'DOMSettableTokenList',\n    'DOMStringList',\n    'DOMStringMap',\n    'DOMTokenList',\n    'DragEvent',\n    'DynamicsCompressorNode',\n    'Element',\n    'ElementTimeControl',\n    'ErrorEvent',\n    'event',\n    'Event',\n    'EventSource',\n    'EventTarget',\n    'external',\n    'FederatedCredential',\n    'fetch',\n    'File',\n    'FileError',\n    'FileList',\n    'FileReader',\n    'find',\n    'focus',\n    'FocusEvent',\n    'FontFace',\n    'FormData',\n    'frameElement',\n    'frames',\n    'GainNode',\n    'Gamepad',\n    'GamepadButton',\n    'GamepadEvent',\n    'getComputedStyle',\n    'getSelection',\n    'HashChangeEvent',\n    'Headers',\n    'history',\n    'History',\n    'HTMLAllCollection',\n    'HTMLAnchorElement',\n    'HTMLAppletElement',\n    'HTMLAreaElement',\n    'HTMLAudioElement',\n    'HTMLBaseElement',\n    'HTMLBlockquoteElement',\n    'HTMLBodyElement',\n    'HTMLBRElement',\n    'HTMLButtonElement',\n    'HTMLCanvasElement',\n    'HTMLCollection',\n    'HTMLContentElement',\n    'HTMLDataListElement',\n    'HTMLDetailsElement',\n    'HTMLDialogElement',\n    'HTMLDirectoryElement',\n    'HTMLDivElement',\n    'HTMLDListElement',\n    'HTMLDocument',\n    'HTMLElement',\n    'HTMLEmbedElement',\n    'HTMLFieldSetElement',\n    'HTMLFontElement',\n    'HTMLFormControlsCollection',\n    'HTMLFormElement',\n    'HTMLFrameElement',\n    'HTMLFrameSetElement',\n    'HTMLHeadElement',\n    'HTMLHeadingElement',\n    'HTMLHRElement',\n    'HTMLHtmlElement',\n    'HTMLIFrameElement',\n    'HTMLImageElement',\n    'HTMLInputElement',\n    'HTMLIsIndexElement',\n    'HTMLKeygenElement',\n    'HTMLLabelElement',\n    'HTMLLayerElement',\n    'HTMLLegendElement',\n    'HTMLLIElement',\n    'HTMLLinkElement',\n    'HTMLMapElement',\n    'HTMLMarqueeElement',\n    'HTMLMediaElement',\n    'HTMLMenuElement',\n    'HTMLMetaElement',\n    'HTMLMeterElement',\n    'HTMLModElement',\n    'HTMLObjectElement',\n    'HTMLOListElement',\n    'HTMLOptGroupElement',\n    'HTMLOptionElement',\n    'HTMLOptionsCollection',\n    'HTMLOutputElement',\n    'HTMLParagraphElement',\n    'HTMLParamElement',\n    'HTMLPictureElement',\n    'HTMLPreElement',\n    'HTMLProgressElement',\n    'HTMLQuoteElement',\n    'HTMLScriptElement',\n    'HTMLSelectElement',\n    'HTMLShadowElement',\n    'HTMLSourceElement',\n    'HTMLSpanElement',\n    'HTMLStyleElement',\n    'HTMLTableCaptionElement',\n    'HTMLTableCellElement',\n    'HTMLTableColElement',\n    'HTMLTableElement',\n    'HTMLTableRowElement',\n    'HTMLTableSectionElement',\n    'HTMLTemplateElement',\n    'HTMLTextAreaElement',\n    'HTMLTitleElement',\n    'HTMLTrackElement',\n    'HTMLUListElement',\n    'HTMLUnknownElement',\n    'HTMLVideoElement',\n    'IDBCursor',\n    'IDBCursorWithValue',\n    'IDBDatabase',\n    'IDBEnvironment',\n    'IDBFactory',\n    'IDBIndex',\n    'IDBKeyRange',\n    'IDBObjectStore',\n    'IDBOpenDBRequest',\n    'IDBRequest',\n    'IDBTransaction',\n    'IDBVersionChangeEvent',\n    'Image',\n    'ImageBitmap',\n    'ImageData',\n    'indexedDB',\n    'innerHeight',\n    'innerWidth',\n    'InputEvent',\n    'InputMethodContext',\n    'IntersectionObserver',\n    'IntersectionObserverEntry',\n    'Intl',\n    'KeyboardEvent',\n    'KeyframeEffect',\n    'KeyframeEffectReadOnly',\n    'length',\n    'localStorage',\n    'location',\n    'Location',\n    'locationbar',\n    'matchMedia',\n    'MediaElementAudioSourceNode',\n    'MediaEncryptedEvent',\n    'MediaError',\n    'MediaKeyError',\n    'MediaKeyEvent',\n    'MediaKeyMessageEvent',\n    'MediaKeys',\n    'MediaKeySession',\n    'MediaKeyStatusMap',\n    'MediaKeySystemAccess',\n    'MediaList',\n    'MediaQueryList',\n    'MediaQueryListEvent',\n    'MediaSource',\n    'MediaStream',\n    'MediaStreamAudioDestinationNode',\n    'MediaStreamAudioSourceNode',\n    'MediaStreamEvent',\n    'MediaStreamTrack',\n    'menubar',\n    'MessageChannel',\n    'MessageEvent',\n    'MessagePort',\n    'MIDIAccess',\n    'MIDIConnectionEvent',\n    'MIDIInput',\n    'MIDIInputMap',\n    'MIDIMessageEvent',\n    'MIDIOutput',\n    'MIDIOutputMap',\n    'MIDIPort',\n    'MimeType',\n    'MimeTypeArray',\n    'MouseEvent',\n    'moveBy',\n    'moveTo',\n    'MutationEvent',\n    'MutationObserver',\n    'MutationRecord',\n    'name',\n    'NamedNodeMap',\n    'navigator',\n    'Navigator',\n    'Node',\n    'NodeFilter',\n    'NodeIterator',\n    'NodeList',\n    'Notification',\n    'OfflineAudioCompletionEvent',\n    'OfflineAudioContext',\n    'offscreenBuffering',\n    'onbeforeunload',\n    'onblur',\n    'onerror',\n    'onfocus',\n    'onload',\n    'onresize',\n    'onunload',\n    'open',\n    'openDatabase',\n    'opener',\n    'opera',\n    'Option',\n    'OscillatorNode',\n    'outerHeight',\n    'outerWidth',\n    'PageTransitionEvent',\n    'pageXOffset',\n    'pageYOffset',\n    'parent',\n    'PasswordCredential',\n    'Path2D',\n    'performance',\n    'Performance',\n    'PerformanceEntry',\n    'PerformanceMark',\n    'PerformanceMeasure',\n    'PerformanceNavigation',\n    'PerformanceResourceTiming',\n    'PerformanceTiming',\n    'PeriodicWave',\n    'Permissions',\n    'PermissionStatus',\n    'personalbar',\n    'Plugin',\n    'PluginArray',\n    'PopStateEvent',\n    'postMessage',\n    'print',\n    'ProcessingInstruction',\n    'ProgressEvent',\n    'PromiseRejectionEvent',\n    'prompt',\n    'PushManager',\n    'PushSubscription',\n    'RadioNodeList',\n    'Range',\n    'ReadableByteStream',\n    'ReadableStream',\n    'removeEventListener',\n    'Request',\n    'requestAnimationFrame',\n    'requestIdleCallback',\n    'resizeBy',\n    'resizeTo',\n    'Response',\n    'RTCIceCandidate',\n    'RTCSessionDescription',\n    'RTCPeerConnection',\n    'screen',\n    'Screen',\n    'screenLeft',\n    'ScreenOrientation',\n    'screenTop',\n    'screenX',\n    'screenY',\n    'ScriptProcessorNode',\n    'scroll',\n    'scrollbars',\n    'scrollBy',\n    'scrollTo',\n    'scrollX',\n    'scrollY',\n    'SecurityPolicyViolationEvent',\n    'Selection',\n    'self',\n    'ServiceWorker',\n    'ServiceWorkerContainer',\n    'ServiceWorkerRegistration',\n    'sessionStorage',\n    'setInterval',\n    'setTimeout',\n    'ShadowRoot',\n    'SharedKeyframeList',\n    'SharedWorker',\n    'showModalDialog',\n    'SiteBoundCredential',\n    'speechSynthesis',\n    'SpeechSynthesisEvent',\n    'SpeechSynthesisUtterance',\n    'status',\n    'statusbar',\n    'stop',\n    'Storage',\n    'StorageEvent',\n    'styleMedia',\n    'StyleSheet',\n    'StyleSheetList',\n    'SubtleCrypto',\n    'SVGAElement',\n    'SVGAltGlyphDefElement',\n    'SVGAltGlyphElement',\n    'SVGAltGlyphItemElement',\n    'SVGAngle',\n    'SVGAnimateColorElement',\n    'SVGAnimatedAngle',\n    'SVGAnimatedBoolean',\n    'SVGAnimatedEnumeration',\n    'SVGAnimatedInteger',\n    'SVGAnimatedLength',\n    'SVGAnimatedLengthList',\n    'SVGAnimatedNumber',\n    'SVGAnimatedNumberList',\n    'SVGAnimatedPathData',\n    'SVGAnimatedPoints',\n    'SVGAnimatedPreserveAspectRatio',\n    'SVGAnimatedRect',\n    'SVGAnimatedString',\n    'SVGAnimatedTransformList',\n    'SVGAnimateElement',\n    'SVGAnimateMotionElement',\n    'SVGAnimateTransformElement',\n    'SVGAnimationElement',\n    'SVGCircleElement',\n    'SVGClipPathElement',\n    'SVGColor',\n    'SVGColorProfileElement',\n    'SVGColorProfileRule',\n    'SVGComponentTransferFunctionElement',\n    'SVGCSSRule',\n    'SVGCursorElement',\n    'SVGDefsElement',\n    'SVGDescElement',\n    'SVGDiscardElement',\n    'SVGDocument',\n    'SVGElement',\n    'SVGElementInstance',\n    'SVGElementInstanceList',\n    'SVGEllipseElement',\n    'SVGEvent',\n    'SVGExternalResourcesRequired',\n    'SVGFEBlendElement',\n    'SVGFEColorMatrixElement',\n    'SVGFEComponentTransferElement',\n    'SVGFECompositeElement',\n    'SVGFEConvolveMatrixElement',\n    'SVGFEDiffuseLightingElement',\n    'SVGFEDisplacementMapElement',\n    'SVGFEDistantLightElement',\n    'SVGFEDropShadowElement',\n    'SVGFEFloodElement',\n    'SVGFEFuncAElement',\n    'SVGFEFuncBElement',\n    'SVGFEFuncGElement',\n    'SVGFEFuncRElement',\n    'SVGFEGaussianBlurElement',\n    'SVGFEImageElement',\n    'SVGFEMergeElement',\n    'SVGFEMergeNodeElement',\n    'SVGFEMorphologyElement',\n    'SVGFEOffsetElement',\n    'SVGFEPointLightElement',\n    'SVGFESpecularLightingElement',\n    'SVGFESpotLightElement',\n    'SVGFETileElement',\n    'SVGFETurbulenceElement',\n    'SVGFilterElement',\n    'SVGFilterPrimitiveStandardAttributes',\n    'SVGFitToViewBox',\n    'SVGFontElement',\n    'SVGFontFaceElement',\n    'SVGFontFaceFormatElement',\n    'SVGFontFaceNameElement',\n    'SVGFontFaceSrcElement',\n    'SVGFontFaceUriElement',\n    'SVGForeignObjectElement',\n    'SVGGElement',\n    'SVGGeometryElement',\n    'SVGGlyphElement',\n    'SVGGlyphRefElement',\n    'SVGGradientElement',\n    'SVGGraphicsElement',\n    'SVGHKernElement',\n    'SVGICCColor',\n    'SVGImageElement',\n    'SVGLangSpace',\n    'SVGLength',\n    'SVGLengthList',\n    'SVGLinearGradientElement',\n    'SVGLineElement',\n    'SVGLocatable',\n    'SVGMarkerElement',\n    'SVGMaskElement',\n    'SVGMatrix',\n    'SVGMetadataElement',\n    'SVGMissingGlyphElement',\n    'SVGMPathElement',\n    'SVGNumber',\n    'SVGNumberList',\n    'SVGPaint',\n    'SVGPathElement',\n    'SVGPathSeg',\n    'SVGPathSegArcAbs',\n    'SVGPathSegArcRel',\n    'SVGPathSegClosePath',\n    'SVGPathSegCurvetoCubicAbs',\n    'SVGPathSegCurvetoCubicRel',\n    'SVGPathSegCurvetoCubicSmoothAbs',\n    'SVGPathSegCurvetoCubicSmoothRel',\n    'SVGPathSegCurvetoQuadraticAbs',\n    'SVGPathSegCurvetoQuadraticRel',\n    'SVGPathSegCurvetoQuadraticSmoothAbs',\n    'SVGPathSegCurvetoQuadraticSmoothRel',\n    'SVGPathSegLinetoAbs',\n    'SVGPathSegLinetoHorizontalAbs',\n    'SVGPathSegLinetoHorizontalRel',\n    'SVGPathSegLinetoRel',\n    'SVGPathSegLinetoVerticalAbs',\n    'SVGPathSegLinetoVerticalRel',\n    'SVGPathSegList',\n    'SVGPathSegMovetoAbs',\n    'SVGPathSegMovetoRel',\n    'SVGPatternElement',\n    'SVGPoint',\n    'SVGPointList',\n    'SVGPolygonElement',\n    'SVGPolylineElement',\n    'SVGPreserveAspectRatio',\n    'SVGRadialGradientElement',\n    'SVGRect',\n    'SVGRectElement',\n    'SVGRenderingIntent',\n    'SVGScriptElement',\n    'SVGSetElement',\n    'SVGStopElement',\n    'SVGStringList',\n    'SVGStylable',\n    'SVGStyleElement',\n    'SVGSVGElement',\n    'SVGSwitchElement',\n    'SVGSymbolElement',\n    'SVGTests',\n    'SVGTextContentElement',\n    'SVGTextElement',\n    'SVGTextPathElement',\n    'SVGTextPositioningElement',\n    'SVGTitleElement',\n    'SVGTransform',\n    'SVGTransformable',\n    'SVGTransformList',\n    'SVGTRefElement',\n    'SVGTSpanElement',\n    'SVGUnitTypes',\n    'SVGURIReference',\n    'SVGUseElement',\n    'SVGViewElement',\n    'SVGViewSpec',\n    'SVGVKernElement',\n    'SVGZoomAndPan',\n    'SVGZoomEvent',\n    'Text',\n    'TextDecoder',\n    'TextEncoder',\n    'TextEvent',\n    'TextMetrics',\n    'TextTrack',\n    'TextTrackCue',\n    'TextTrackCueList',\n    'TextTrackList',\n    'TimeEvent',\n    'TimeRanges',\n    'toolbar',\n    'top',\n    'Touch',\n    'TouchEvent',\n    'TouchList',\n    'TrackEvent',\n    'TransitionEvent',\n    'TreeWalker',\n    'UIEvent',\n    'URL',\n    'URLSearchParams',\n    'ValidityState',\n    'VTTCue',\n    'WaveShaperNode',\n    'WebGLActiveInfo',\n    'WebGLBuffer',\n    'WebGLContextEvent',\n    'WebGLFramebuffer',\n    'WebGLProgram',\n    'WebGLRenderbuffer',\n    'WebGLRenderingContext',\n    'WebGLShader',\n    'WebGLShaderPrecisionFormat',\n    'WebGLTexture',\n    'WebGLUniformLocation',\n    'WebSocket',\n    'WheelEvent',\n    'window',\n    'Window',\n    'Worker',\n    'XDomainRequest',\n    'XMLDocument',\n    'XMLHttpRequest',\n    'XMLHttpRequestEventTarget',\n    'XMLHttpRequestProgressEvent',\n    'XMLHttpRequestUpload',\n    'XMLSerializer',\n    'XPathEvaluator',\n    'XPathException',\n    'XPathExpression',\n    'XPathNamespace',\n    'XPathNSResolver',\n    'XPathResult',\n    'XSLTProcessor',\n  ],\n  worker: [\n    'applicationCache',\n    'atob',\n    'Blob',\n    'BroadcastChannel',\n    'btoa',\n    'Cache',\n    'caches',\n    'clearInterval',\n    'clearTimeout',\n    'close',\n    'console',\n    'fetch',\n    'FileReaderSync',\n    'FormData',\n    'Headers',\n    'IDBCursor',\n    'IDBCursorWithValue',\n    'IDBDatabase',\n    'IDBFactory',\n    'IDBIndex',\n    'IDBKeyRange',\n    'IDBObjectStore',\n    'IDBOpenDBRequest',\n    'IDBRequest',\n    'IDBTransaction',\n    'IDBVersionChangeEvent',\n    'ImageData',\n    'importScripts',\n    'indexedDB',\n    'location',\n    'MessageChannel',\n    'MessagePort',\n    'name',\n    'navigator',\n    'Notification',\n    'onclose',\n    'onconnect',\n    'onerror',\n    'onlanguagechange',\n    'onmessage',\n    'onoffline',\n    'ononline',\n    'onrejectionhandled',\n    'onunhandledrejection',\n    'performance',\n    'Performance',\n    'PerformanceEntry',\n    'PerformanceMark',\n    'PerformanceMeasure',\n    'PerformanceNavigation',\n    'PerformanceResourceTiming',\n    'PerformanceTiming',\n    'postMessage',\n    'Promise',\n    'Request',\n    'Response',\n    'self',\n    'ServiceWorkerRegistration',\n    'setInterval',\n    'setTimeout',\n    'TextDecoder',\n    'TextEncoder',\n    'URL',\n    'URLSearchParams',\n    'WebSocket',\n    'Worker',\n    'XMLHttpRequest',\n  ],\n\n  // https://nodejs.org/api/globals.html\n  node: [\n    '__dirname',\n    '__filename',\n    'Buffer',\n    'clearImmediate',\n    'clearInterval',\n    'clearTimeout',\n    'console',\n    'exports',\n    'global',\n    'module',\n    'process',\n    'require',\n    'setImmediate',\n    'setInterval',\n    'setTimeout',\n  ],\n  commonjs: ['exports', 'module', 'require', 'global'],\n  amd: ['define', 'require'],\n\n  // https://mochajs.org/\n  mocha: [\n    'after',\n    'afterEach',\n    'before',\n    'beforeEach',\n    'context',\n    'describe',\n    'it',\n    'mocha',\n    'run',\n    'setup',\n    'specify',\n    'suite',\n    'suiteSetup',\n    'suiteTeardown',\n    'teardown',\n    'test',\n    'xcontext',\n    'xdescribe',\n    'xit',\n    'xspecify',\n  ],\n\n  // https://jasmine.github.io/2.0/introduction.html\n  jasmine: [\n    'afterAll',\n    'afterEach',\n    'beforeAll',\n    'beforeEach',\n    'describe',\n    'expect',\n    'fail',\n    'fdescribe',\n    'fit',\n    'it',\n    'jasmine',\n    'pending',\n    'runs',\n    'spyOn',\n    'waits',\n    'waitsFor',\n    'xdescribe',\n    'xit',\n  ],\n  jest: [\n    'afterAll',\n    'afterEach',\n    'beforeAll',\n    'beforeEach',\n    'check',\n    'describe',\n    'expect',\n    'gen',\n    'it',\n    'fit',\n    'jest',\n    'pit',\n    'require',\n    'test',\n    'xdescribe',\n    'xit',\n    'xtest',\n  ],\n  qunit: [\n    'asyncTest',\n    'deepEqual',\n    'equal',\n    'expect',\n    'module',\n    'notDeepEqual',\n    'notEqual',\n    'notOk',\n    'notPropEqual',\n    'notStrictEqual',\n    'ok',\n    'propEqual',\n    'QUnit',\n    'raises',\n    'start',\n    'stop',\n    'strictEqual',\n    'test',\n    'throws',\n  ],\n  phantomjs: ['console', 'exports', 'phantom', 'require', 'WebPage'],\n  couch: [\n    'emit',\n    'exports',\n    'getRow',\n    'log',\n    'module',\n    'provides',\n    'require',\n    'respond',\n    'send',\n    'start',\n    'sum',\n  ],\n  rhino: [\n    'defineClass',\n    'deserialize',\n    'gc',\n    'help',\n    'importClass',\n    'importPackage',\n    'java',\n    'load',\n    'loadClass',\n    'Packages',\n    'print',\n    'quit',\n    'readFile',\n    'readUrl',\n    'runCommand',\n    'seal',\n    'serialize',\n    'spawn',\n    'sync',\n    'toint32',\n    'version',\n  ],\n  nashorn: [\n    '__DIR__',\n    '__FILE__',\n    '__LINE__',\n    'com',\n    'edu',\n    'exit',\n    'Java',\n    'java',\n    'javafx',\n    'JavaImporter',\n    'javax',\n    'JSAdapter',\n    'load',\n    'loadWithNewGlobal',\n    'org',\n    'Packages',\n    'print',\n    'quit',\n  ],\n  wsh: [\n    'ActiveXObject',\n    'Enumerator',\n    'GetObject',\n    'ScriptEngine',\n    'ScriptEngineBuildVersion',\n    'ScriptEngineMajorVersion',\n    'ScriptEngineMinorVersion',\n    'VBArray',\n    'WScript',\n    'WSH',\n    'XDomainRequest',\n  ],\n  jquery: ['$', 'jQuery'],\n  yui: ['Y', 'YUI', 'YUI_config'],\n  shelljs: [\n    'cat',\n    'cd',\n    'chmod',\n    'config',\n    'cp',\n    'dirs',\n    'echo',\n    'env',\n    'error',\n    'exec',\n    'exit',\n    'find',\n    'grep',\n    'ls',\n    'ln',\n    'mkdir',\n    'mv',\n    'popd',\n    'pushd',\n    'pwd',\n    'rm',\n    'sed',\n    'set',\n    'target',\n    'tempdir',\n    'test',\n    'touch',\n    'which',\n  ],\n  prototypejs: [\n    '$',\n    '$$',\n    '$A',\n    '$break',\n    '$continue',\n    '$F',\n    '$H',\n    '$R',\n    '$w',\n    'Abstract',\n    'Ajax',\n    'Autocompleter',\n    'Builder',\n    'Class',\n    'Control',\n    'Draggable',\n    'Draggables',\n    'Droppables',\n    'Effect',\n    'Element',\n    'Enumerable',\n    'Event',\n    'Field',\n    'Form',\n    'Hash',\n    'Insertion',\n    'ObjectRange',\n    'PeriodicalExecuter',\n    'Position',\n    'Prototype',\n    'Scriptaculous',\n    'Selector',\n    'Sortable',\n    'SortableObserver',\n    'Sound',\n    'Template',\n    'Toggle',\n    'Try',\n  ],\n  meteor: [\n    '$',\n    '_',\n    'Accounts',\n    'AccountsClient',\n    'AccountsServer',\n    'AccountsCommon',\n    'App',\n    'Assets',\n    'Blaze',\n    'check',\n    'Cordova',\n    'DDP',\n    'DDPServer',\n    'DDPRateLimiter',\n    'Deps',\n    'EJSON',\n    'Email',\n    'HTTP',\n    'Log',\n    'Match',\n    'Meteor',\n    'Mongo',\n    'MongoInternals',\n    'Npm',\n    'Package',\n    'Plugin',\n    'process',\n    'Random',\n    'ReactiveDict',\n    'ReactiveVar',\n    'Router',\n    'ServiceConfiguration',\n    'Session',\n    'share',\n    'Spacebars',\n    'Template',\n    'Tinytest',\n    'Tracker',\n    'UI',\n    'Utils',\n    'WebApp',\n    'WebAppInternals',\n  ],\n  mongo: [\n    '_isWindows',\n    '_rand',\n    'BulkWriteResult',\n    'cat',\n    'cd',\n    'connect',\n    'db',\n    'getHostName',\n    'getMemInfo',\n    'hostname',\n    'ISODate',\n    'listFiles',\n    'load',\n    'ls',\n    'md5sumFile',\n    'mkdir',\n    'Mongo',\n    'NumberInt',\n    'NumberLong',\n    'ObjectId',\n    'PlanCache',\n    'print',\n    'printjson',\n    'pwd',\n    'quit',\n    'removeFile',\n    'rs',\n    'sh',\n    'UUID',\n    'version',\n    'WriteResult',\n  ],\n  applescript: [\n    '$',\n    'Application',\n    'Automation',\n    'console',\n    'delay',\n    'Library',\n    'ObjC',\n    'ObjectSpecifier',\n    'Path',\n    'Progress',\n    'Ref',\n  ],\n  serviceworker: [\n    'caches',\n    'Cache',\n    'CacheStorage',\n    'Client',\n    'clients',\n    'Clients',\n    'ExtendableEvent',\n    'ExtendableMessageEvent',\n    'FetchEvent',\n    'importScripts',\n    'registration',\n    'self',\n    'ServiceWorker',\n    'ServiceWorkerContainer',\n    'ServiceWorkerGlobalScope',\n    'ServiceWorkerMessageEvent',\n    'ServiceWorkerRegistration',\n    'skipWaiting',\n    'WindowClient',\n  ],\n  atomtest: [\n    'advanceClock',\n    'fakeClearInterval',\n    'fakeClearTimeout',\n    'fakeSetInterval',\n    'fakeSetTimeout',\n    'resetTimeouts',\n    'waitsForPromise',\n  ],\n\n  // https://guides.emberjs.com/v1.10.0/testing/test-helpers/\n  embertest: [\n    'andThen',\n    'click',\n    'currentPath',\n    'currentRouteName',\n    'currentURL',\n    'fillIn',\n    'find',\n    'findWithAssert',\n    'keyEvent',\n    'pauseTest',\n    'triggerEvent',\n    'visit',\n  ],\n  protractor: ['$', '$$', 'browser', 'By', 'by', 'DartObject', 'element', 'protractor'],\n  'shared-node-browser': ['clearInterval', 'clearTimeout', 'console', 'setInterval', 'setTimeout'],\n  webextensions: ['browser', 'chrome', 'opr'],\n  greasemonkey: [\n    'GM_addStyle',\n    'GM_deleteValue',\n    'GM_getResourceText',\n    'GM_getResourceURL',\n    'GM_getValue',\n    'GM_info',\n    'GM_listValues',\n    'GM_log',\n    'GM_openInTab',\n    'GM_registerMenuCommand',\n    'GM_setClipboard',\n    'GM_setValue',\n    'GM_xmlhttpRequest',\n    'unsafeWindow',\n  ],\n  flow: [\n    'boolean',\n    'number',\n    'string',\n    'null',\n    'void',\n    'mixed',\n    'any',\n    'empty',\n    'Array',\n    'Class',\n    '$Call',\n    '$TupleMap',\n    '$ObjMap',\n    '$ElementType',\n    '$PropertyType',\n    '$Rest',\n    '$Diff',\n    '$Exact',\n    '$ReadOnly',\n    '$ReadOnlyArray',\n    '$Values',\n    '$Keys',\n    '$SuperType',\n    '$Subtype',\n    'RegExp$flags',\n    'stream$Writable',\n    'stream$Readable',\n    'tty$WriteStream',\n    'tty$ReadStream',\n  ],\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as estree from 'estree';\nimport { AST } from 'eslint';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { EncodedMessage, IssueLocation } from 'eslint-plugin-sonarjs/lib/src/utils/locations';\n\nexport type LocationHolder = AST.Token | TSESTree.Node | estree.Node | { loc: AST.SourceLocation };\n\n/**\n * Encodes an ESLint descriptor message with secondary locations\n *\n * The encoding consists in stringifying a JavaScript object with\n * `JSON.stringify` that includes the ESLint's descriptor message\n * along with second location information: message and location.\n *\n * This encoded message is eventually decoded by the linter wrapper\n * on the condition that the rule definition of the flagged problem\n * defines the internal `sonar-runtime` parameter in its schema.\n *\n * @param message the ESLint descriptor message\n * @param secondaryLocationsHolder the secondary locations\n * @param secondaryMessages the messages for each secondary location\n * @param cost the optional cost to fix\n * @returns the encoded message with secondary locations\n */\nexport function toEncodedMessage(\n  message: string,\n  secondaryLocationsHolder: Array<LocationHolder> = [],\n  secondaryMessages?: (string | undefined)[],\n  cost?: number,\n): string {\n  const encodedMessage: EncodedMessage = {\n    message,\n    cost,\n    secondaryLocations: secondaryLocationsHolder.map((locationHolder, index) =>\n      toSecondaryLocation(\n        locationHolder,\n        !!secondaryMessages ? secondaryMessages[index] : undefined,\n      ),\n    ),\n  };\n  return JSON.stringify(encodedMessage);\n}\n\nfunction toSecondaryLocation(locationHolder: LocationHolder, message?: string): IssueLocation {\n  if (!locationHolder.loc) {\n    throw new Error('Invalid secondary location');\n  }\n  return {\n    message,\n    column: locationHolder.loc.start.column,\n    line: locationHolder.loc.start.line,\n    endColumn: locationHolder.loc.end.column,\n    endLine: locationHolder.loc.end.line,\n  };\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule, Scope } from 'eslint';\nimport Variable = Scope.Variable;\nimport CodePathSegment = Rule.CodePathSegment;\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\n\nexport function lva(liveVariablesMap: Map<string, LiveVariables>) {\n  const worklist = Array.from(liveVariablesMap.values(), lva => lva.segment);\n  while (worklist.length > 0) {\n    const current = worklist.pop()!;\n    const liveVariables = liveVariablesMap.get(current.id)!;\n    const liveInHasChanged = liveVariables.propagate(liveVariablesMap);\n    if (liveInHasChanged) {\n      current.prevSegments.forEach(prev => worklist.push(prev));\n    }\n  }\n}\n\nexport interface ReferenceLike {\n  identifier: estree.Identifier | TSESTree.JSXIdentifier;\n  from: Scope.Scope;\n  resolved: Scope.Variable | null;\n  writeExpr: estree.Node | null;\n  init: boolean;\n\n  isWrite(): boolean;\n\n  isRead(): boolean;\n\n  isWriteOnly(): boolean;\n\n  isReadOnly(): boolean;\n\n  isReadWrite(): boolean;\n}\n\nexport class LiveVariables {\n  constructor(segment: Rule.CodePathSegment) {\n    this.segment = segment;\n  }\n\n  segment: CodePathSegment;\n\n  /**\n   * variables that are being read in the block\n   */\n  gen = new Set<Variable>();\n  /**\n   * variables that are being written in the block\n   */\n  kill = new Set<Variable>();\n  /**\n   * variables needed by this or a successor block and are not killed in this block\n   */\n  in = new Set<Variable>();\n  /**\n   * variables needed by successors\n   */\n  out: Variable[] = [];\n\n  /**\n   * collects references in order they are evaluated, set in JS maintains insertion order\n   */\n  references = new Set<ReferenceLike>();\n\n  add(ref: ReferenceLike) {\n    const variable = ref.resolved;\n    if (variable) {\n      if (ref.isRead()) {\n        this.gen.add(variable);\n      }\n      if (ref.isWrite()) {\n        this.kill.add(variable);\n      }\n      this.references.add(ref);\n    }\n  }\n\n  propagate(liveVariablesMap: Map<string, LiveVariables>) {\n    const out: Variable[] = [];\n    this.segment.nextSegments.forEach(next => {\n      out.push(...liveVariablesMap.get(next.id)!.in);\n    });\n    const diff = difference(out, this.kill);\n    this.out = out;\n    if (shouldUpdate(this.in, this.gen, diff)) {\n      this.in = new Set([...this.gen, ...diff]);\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nfunction difference<T>(a: T[], b: Set<T>): T[] {\n  if (b.size === 0) {\n    return a;\n  }\n  const diff = [];\n  for (const e of a) {\n    if (!b.has(e)) {\n      diff.push(e);\n    }\n  }\n  return diff;\n}\n\nfunction shouldUpdate(inSet: Set<Variable>, gen: Set<Variable>, diff: Variable[]): boolean {\n  for (const e of gen) {\n    if (!inSet.has(e)) {\n      return true;\n    }\n  }\n  for (const e of diff) {\n    if (!inSet.has(e)) {\n      return true;\n    }\n  }\n  return false;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as estree from 'estree';\nimport { FUNCTION_NODES, isIdentifier } from '.';\n\nexport namespace Mocha {\n  const TEST_CONSTRUCTS = [\n    'describe',\n    'context',\n    'it',\n    'specify',\n    'before',\n    'after',\n    'beforeEach',\n    'afterEach',\n  ];\n\n  export interface TestCase {\n    node: estree.Node;\n    callback: estree.Function;\n  }\n\n  export function isTestConstruct(\n    node: estree.Node,\n    constructs: string[] = TEST_CONSTRUCTS,\n  ): boolean {\n    return constructs.some(construct => {\n      return (\n        node.type === 'CallExpression' &&\n        (isIdentifier(node.callee, construct) ||\n          (node.callee.type === 'MemberExpression' &&\n            isIdentifier(node.callee.object, construct) &&\n            isIdentifier(node.callee.property, 'only', 'skip')))\n      );\n    });\n  }\n\n  export function extractTestCase(node: estree.Node): TestCase | null {\n    if (isTestCase(node)) {\n      const callExpr = node as estree.CallExpression;\n      const [, callback] = callExpr.arguments;\n      if (callback && FUNCTION_NODES.includes(callback.type)) {\n        return { node: callExpr.callee, callback: callback as estree.Function };\n      }\n    }\n    return null;\n  }\n\n  /**\n   * returns true if the node is a test case\n   *\n   * @param node\n   * @returns\n   */\n  export function isTestCase(node: estree.Node): boolean {\n    return isTestConstruct(node, ['it', 'specify']);\n  }\n\n  /**\n   * returns true if the node is a describe block\n   *\n   * @param node\n   * @returns\n   */\n  export function isDescribeCase(node: estree.Node): boolean {\n    return isTestConstruct(node, ['describe']);\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { Node, isIdentifier, getVariableFromScope, getUniqueWriteReference } from './ast';\nimport Variable = Scope.Variable;\n\nexport function getImportDeclarations(context: Rule.RuleContext) {\n  const program = context.sourceCode.ast;\n  if (program.sourceType === 'module') {\n    return program.body.filter(\n      node => node.type === 'ImportDeclaration',\n    ) as estree.ImportDeclaration[];\n  }\n  return [];\n}\n\nexport function getRequireCalls(context: Rule.RuleContext) {\n  const required: estree.CallExpression[] = [];\n  const { scopeManager } = context.sourceCode;\n  scopeManager.scopes.forEach(scope =>\n    scope.variables.forEach(variable =>\n      variable.defs.forEach(def => {\n        if (def.type === 'Variable' && def.node.init) {\n          if (isRequire(def.node.init)) {\n            required.push(def.node.init as estree.CallExpression);\n          } else if (def.node.init.type === 'MemberExpression' && isRequire(def.node.init.object)) {\n            required.push(def.node.init.object as estree.CallExpression);\n          }\n        }\n      }),\n    ),\n  );\n  return required;\n}\n\nfunction isRequire(node: Node) {\n  return (\n    node.type === 'CallExpression' &&\n    node.callee.type === 'Identifier' &&\n    node.callee.name === 'require' &&\n    node.arguments.length === 1\n  );\n}\n\n/**\n * Returns 'module' if `node` is a `require('module')` CallExpression\n *\n * For usage inside rules, prefer getFullyQualifiedName()\n *\n * @param node\n * @returns the module name or undefined\n */\nfunction getModuleNameFromRequire(node: Node): estree.Literal | undefined {\n  if (isRequire(node)) {\n    const moduleName = (node as estree.CallExpression).arguments[0];\n    if (moduleName.type === 'Literal') {\n      return moduleName;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Returns the fully qualified name of ESLint node\n *\n * This function filters out the `node:` prefix\n *\n * A fully qualified name here denotes a value that is accessed through an imported\n * symbol, e.g., `foo.bar.baz` where `foo` was imported either from a require call\n * or an import statement:\n *\n * ```\n * const foo = require('lib');\n * foo.bar.baz.qux; // matches the fully qualified name 'lib.bar.baz.qux' (not 'foo.bar.baz.qux')\n * const foo2 = require('lib').bar;\n * foo2.baz.qux; // matches the fully qualified name 'lib.bar.baz.qux'\n * ```\n *\n * Returns null when an FQN could not be found.\n *\n * @param context the rule context\n * @param node the node\n * @param fqn the already traversed FQN (for recursive calls)\n * @param scope scope to look for the variable definition, used in recursion not to\n *              loop over same variable always in the lower scope\n */\nexport function getFullyQualifiedName(\n  context: Rule.RuleContext,\n  node: estree.Node,\n  fqn: string[] = [],\n  scope?: Scope.Scope,\n): string | null {\n  return removeNodePrefixIfExists(getFullyQualifiedNameRaw(context, node, fqn, scope));\n}\n\n/**\n * Just like getFullyQualifiedName(), but does not filter out the `node:` prefix.\n *\n * To be used for rules that need to work with the `node:` prefix.\n */\nexport function getFullyQualifiedNameRaw(\n  context: Rule.RuleContext,\n  node: estree.Node,\n  fqn: string[],\n  scope?: Scope.Scope,\n  visitedVars: Variable[] = [],\n): string | null {\n  const nodeToCheck = reduceToIdentifier(node, fqn);\n\n  if (!isIdentifier(nodeToCheck)) {\n    // require chaining, e.g. `require('lib')()` or `require('lib').prop()`\n    if (node.type === 'CallExpression') {\n      const qualifiers: string[] = [];\n      const maybeRequire = reduceTo('CallExpression', node.callee, qualifiers);\n      const module = getModuleNameFromRequire(maybeRequire);\n      if (typeof module?.value === 'string') {\n        qualifiers.unshift(module.value);\n        return qualifiers.join('.');\n      }\n    }\n    return null;\n  }\n\n  const variable = getVariableFromScope(\n    scope ?? context.sourceCode.getScope(node),\n    nodeToCheck.name,\n  );\n\n  if (!variable || variable.defs.length > 1) {\n    return null;\n  }\n\n  // built-in variable\n  // ESLint marks built-in global variables with an undocumented hidden `writeable` property that should equal `false`.\n  // @see https://github.com/eslint/eslint/blob/6380c87c563be5dc78ce0ddd5c7409aaf71692bb/lib/linter/linter.js#L207\n  // @see https://github.com/eslint/eslint/blob/6380c87c563be5dc78ce0ddd5c7409aaf71692bb/lib/rules/no-global-assign.js#L81\n  if ((variable as any).writeable === false || visitedVars.includes(variable)) {\n    fqn.unshift(nodeToCheck.name);\n    return fqn.join('.');\n  }\n\n  const definition = variable.defs.find(({ type }) => ['ImportBinding', 'Variable'].includes(type));\n\n  if (!definition) {\n    return null;\n  }\n\n  // imports\n  const fqnFromImport = checkFqnFromImport(variable, definition, context, fqn, visitedVars);\n  if (fqnFromImport !== null) {\n    return fqnFromImport;\n  }\n\n  // requires\n  const fqnFromRequire = checkFqnFromRequire(variable, definition, context, fqn, visitedVars);\n  if (fqnFromRequire !== null) {\n    return fqnFromRequire;\n  }\n\n  return null;\n}\n\nfunction checkFqnFromImport(\n  variable: Scope.Variable,\n  definition: Scope.Definition,\n  context: Rule.RuleContext,\n  fqn: string[],\n  visitedVars: Variable[],\n) {\n  if (definition.type === 'ImportBinding') {\n    const specifier = definition.node;\n    const importDeclaration = definition.parent;\n    // import {default as cdk} from 'aws-cdk-lib';\n    // vs.\n    // import { aws_s3 as s3 } from 'aws-cdk-lib';\n    if (specifier.type === 'ImportSpecifier' && specifier.imported?.name !== 'default') {\n      fqn.unshift(specifier.imported?.name);\n    }\n    if (typeof importDeclaration.source?.value === 'string') {\n      const importedQualifiers = importDeclaration.source.value.split('/');\n      fqn.unshift(...importedQualifiers);\n      return fqn.join('.');\n    }\n    // import s3 = require('aws-cdk-lib/aws-s3');\n    if ((importDeclaration as TSESTree.Node).type === 'TSImportEqualsDeclaration') {\n      const importedModule = (importDeclaration as unknown as TSESTree.TSImportEqualsDeclaration)\n        .moduleReference;\n      if (\n        importedModule.type === 'TSExternalModuleReference' &&\n        importedModule.expression.type === 'Literal' &&\n        typeof importedModule.expression.value === 'string'\n      ) {\n        const importedQualifiers = importedModule.expression.value.split('/');\n        fqn.unshift(...importedQualifiers);\n        return fqn.join('.');\n      }\n      //import s3 = cdk.aws_s3;\n      if (importedModule.type === 'TSQualifiedName') {\n        visitedVars.push(variable);\n        return getFullyQualifiedNameRaw(\n          context,\n          importedModule as unknown as estree.Node,\n          fqn,\n          variable.scope,\n          visitedVars,\n        );\n      }\n    }\n  }\n  return null;\n}\n\nfunction checkFqnFromRequire(\n  variable: Scope.Variable,\n  definition: Scope.Definition,\n  context: Rule.RuleContext,\n  fqn: string[],\n  visitedVars: Variable[],\n) {\n  const value = getUniqueWriteReference(variable);\n  // requires\n  if (definition.type === 'Variable' && value) {\n    // case for `const {Bucket} = require('aws-cdk-lib/aws-s3');`\n    // case for `const {Bucket: foo} = require('aws-cdk-lib/aws-s3');`\n    if (definition.node.id.type === 'ObjectPattern') {\n      for (const property of definition.node.id.properties) {\n        if ((property as estree.Property).value === definition.name) {\n          fqn.unshift(((property as estree.Property).key as estree.Identifier).name);\n        }\n      }\n    }\n    const nodeToCheck = reduceTo('CallExpression', value, fqn);\n    const module = getModuleNameFromRequire(nodeToCheck)?.value;\n    if (typeof module === 'string') {\n      const importedQualifiers = module.split('/');\n      fqn.unshift(...importedQualifiers);\n      return fqn.join('.');\n    } else {\n      visitedVars.push(variable);\n      return getFullyQualifiedNameRaw(context, nodeToCheck, fqn, variable.scope, visitedVars);\n    }\n  }\n  return null;\n}\n\n/**\n * Removes `node:` prefix if such exists\n *\n * Node.js builtin modules can be referenced with a `node:` prefix (eg.: node:fs/promises)\n *\n * https://nodejs.org/api/esm.html#node-imports\n *\n * @param fqn Fully Qualified Name (ex.: `node:https.request`)\n * @returns `fqn` sanitized from `node:` prefix (ex.: `https.request`)\n */\nfunction removeNodePrefixIfExists(fqn: string | null) {\n  if (fqn === null) {\n    return null;\n  }\n  const NODE_NAMESPACE = 'node:';\n  if (fqn.startsWith(NODE_NAMESPACE)) {\n    return fqn.substring(NODE_NAMESPACE.length);\n  }\n  return fqn;\n}\n\n/**\n * Helper function for getFullyQualifiedName to handle Member expressions\n * filling in the FQN array with the accessed properties.\n * @param node the Node to traverse\n * @param fqn the array with the qualifiers\n */\nexport function reduceToIdentifier(node: estree.Node, fqn: string[] = []): estree.Node {\n  return reduceTo('Identifier', node, fqn);\n}\n\n/**\n * Reduce a given node through its ancestors until a given node type is found\n * filling in the FQN array with the accessed properties.\n * @param type the type of node you are looking for to be returned. Returned node still needs to be\n *             checked as its type it's not guaranteed to match the passed type.\n * @param node the Node to traverse\n * @param fqn the array with the qualifiers\n */\nexport function reduceTo<T extends estree.Node['type']>(\n  type: T,\n  node: estree.Node,\n  fqn: string[] = [],\n): estree.Node {\n  let nodeToCheck: estree.Node = node;\n\n  while (nodeToCheck.type !== type) {\n    if (nodeToCheck.type === 'MemberExpression') {\n      const { property } = nodeToCheck;\n      if (property.type === 'Literal' && typeof property.value === 'string') {\n        fqn.unshift(property.value);\n      } else if (property.type === 'Identifier') {\n        fqn.unshift(property.name);\n      }\n      nodeToCheck = nodeToCheck.object;\n    } else if (nodeToCheck.type === 'CallExpression' && !getModuleNameFromRequire(nodeToCheck)) {\n      nodeToCheck = nodeToCheck.callee;\n    } else if (nodeToCheck.type === 'NewExpression') {\n      nodeToCheck = nodeToCheck.callee;\n    } else if (nodeToCheck.type === 'ChainExpression') {\n      nodeToCheck = nodeToCheck.expression;\n    } else if ((nodeToCheck as TSESTree.Node).type === 'TSNonNullExpression') {\n      // we should migrate to use only TSESTree types everywhere to avoid casting\n      nodeToCheck = (nodeToCheck as unknown as TSESTree.TSNonNullExpression)\n        .expression as estree.Expression;\n    } else if ((nodeToCheck as TSESTree.Node).type === 'TSQualifiedName') {\n      const qualified = nodeToCheck as unknown as TSESTree.TSQualifiedName;\n      fqn.unshift(qualified.right.name);\n      nodeToCheck = qualified.left as estree.Node;\n    } else {\n      break;\n    }\n  }\n\n  return nodeToCheck;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as estree from 'estree';\nimport { Rule } from 'eslint';\n\nexport function removeNodeWithLeadingWhitespaces(\n  context: Rule.RuleContext,\n  node: estree.Node,\n  fixer: Rule.RuleFixer,\n  removeUntil?: number,\n) {\n  const previousComments = context.sourceCode.getCommentsBefore(node);\n  let start = 0;\n  if (previousComments.length === 0) {\n    const previousToken = context.sourceCode.getTokenBefore(node);\n    if (previousToken) {\n      start = previousToken.range[1];\n    }\n  } else {\n    start = previousComments[previousComments.length - 1].range![1];\n  }\n\n  const end = removeUntil ?? node.range![1];\n  return fixer.removeRange([start, end]);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport Variable = Scope.Variable;\nimport CodePathSegment = Rule.CodePathSegment;\nimport Reference = Scope.Reference;\n\ntype LiteralValue = string;\n\nclass AssignedValues extends Set<LiteralValue> {\n  type = 'AssignedValues' as const;\n}\n\nconst assignedValues = (val: LiteralValue) => new AssignedValues([val]);\ninterface UnknownValue {\n  type: 'UnknownValue';\n}\nexport const unknownValue: UnknownValue = {\n  type: 'UnknownValue',\n};\n\nexport type Values = AssignedValues | UnknownValue;\n\nexport function reachingDefinitions(reachingDefinitionsMap: Map<string, ReachingDefinitions>) {\n  const worklist = Array.from(reachingDefinitionsMap.values(), defs => defs.segment);\n\n  while (worklist.length > 0) {\n    const current = worklist.pop()!;\n    const reachingDefs = reachingDefinitionsMap.get(current.id)!;\n    const outHasChanged = reachingDefs.propagate(reachingDefinitionsMap);\n    if (outHasChanged) {\n      current.nextSegments.forEach(next => worklist.push(next));\n    }\n  }\n}\n\nexport class ReachingDefinitions {\n  constructor(segment: Rule.CodePathSegment) {\n    this.segment = segment;\n  }\n\n  segment: CodePathSegment;\n\n  in = new Map<Variable, Values>();\n\n  out = new Map<Variable, Values>();\n\n  /**\n   * collects references in order they are evaluated, set in JS maintains insertion order\n   */\n  references = new Set<Reference>();\n\n  add(ref: Reference) {\n    const variable = ref.resolved;\n    if (variable) {\n      this.references.add(ref);\n    }\n  }\n\n  propagate(reachingDefinitionsMap: Map<string, ReachingDefinitions>) {\n    this.in.clear();\n    this.segment.prevSegments.forEach(prev => {\n      this.join(reachingDefinitionsMap.get(prev.id)!.out);\n    });\n    const newOut = new Map<Variable, Values>(this.in);\n    this.references.forEach(ref => this.updateProgramState(ref, newOut));\n    if (!equals(this.out, newOut)) {\n      this.out = newOut;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  updateProgramState(ref: Reference, programState: Map<Variable, Values>) {\n    const variable = ref.resolved;\n    if (!variable || !ref.isWrite()) {\n      return;\n    }\n    if (!ref.writeExpr) {\n      programState.set(variable, unknownValue);\n      return;\n    }\n    const rhsValues = resolveAssignedValues(variable, ref.writeExpr, programState, ref.from);\n    programState.set(variable, rhsValues);\n  }\n\n  join(previousOut: Map<Variable, Values>) {\n    for (const [key, values] of previousOut.entries()) {\n      const inValues = this.in.get(key) ?? new AssignedValues();\n      if (inValues.type === 'AssignedValues' && values.type === 'AssignedValues') {\n        values.forEach(val => inValues.add(val));\n        this.in.set(key, inValues);\n      } else {\n        this.in.set(key, unknownValue);\n      }\n    }\n  }\n}\n\nexport function resolveAssignedValues(\n  lhsVariable: Variable,\n  writeExpr: estree.Node | null,\n  assignedValuesMap: Map<Variable, Values>,\n  scope: Scope.Scope,\n): Values {\n  if (!writeExpr) {\n    return unknownValue;\n  }\n  switch (writeExpr.type) {\n    case 'Literal':\n      return writeExpr.raw ? assignedValues(writeExpr.raw) : unknownValue;\n    case 'Identifier': {\n      const resolvedVar = getVariableFromIdentifier(writeExpr, scope);\n      if (resolvedVar && resolvedVar !== lhsVariable) {\n        const resolvedAssignedValues = assignedValuesMap.get(resolvedVar);\n        return resolvedAssignedValues ?? unknownValue;\n      }\n      return unknownValue;\n    }\n    default:\n      return unknownValue;\n  }\n}\n\nfunction equals(ps1: Map<Variable, Values>, ps2: Map<Variable, Values>) {\n  if (ps1.size !== ps2.size) {\n    return false;\n  }\n  for (const [variable, values1] of ps1) {\n    const values2 = ps2.get(variable);\n    if (!values2 || !valuesEquals(values2, values1)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction valuesEquals(a: Values, b: Values) {\n  if (a.type === 'AssignedValues' && b.type === 'AssignedValues') {\n    return setEquals(a, b);\n  }\n  return a === b;\n}\n\nfunction setEquals<T>(a: Set<T>, b: Set<T>): boolean {\n  return a.size === b.size && [...a].every(e => b.has(e));\n}\n\nexport function getVariableFromIdentifier(identifier: estree.Identifier, scope: Scope.Scope) {\n  let variable = scope.variables.find(value => value.name === identifier.name);\n  if (!variable && scope.upper) {\n    variable = scope.upper.variables.find(value => value.name === identifier.name);\n  }\n  return variable;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport { Node } from 'estree';\n\nconst detectReactSelector = [\n  ':matches(',\n  [\n    'CallExpression[callee.name=\"require\"][arguments.0.value=\"react\"]',\n    'CallExpression[callee.name=\"require\"][arguments.0.value=\"create-react-class\"]',\n    'ImportDeclaration[source.value=\"react\"]',\n  ].join(','),\n  ')',\n].join('');\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      reactDetected: 'React detected',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      [detectReactSelector](node: Node) {\n        context.report({\n          messageId: 'reactDetected',\n          node,\n        });\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getFullyQualifiedName, getImportDeclarations, getRequireCalls } from '.';\n\nexport namespace Sinon {\n  export function isImported(context: Rule.RuleContext): boolean {\n    return (\n      getRequireCalls(context).some(\n        r => r.arguments[0].type === 'Literal' && r.arguments[0].value === 'sinon',\n      ) || getImportDeclarations(context).some(i => i.source.value === 'sinon')\n    );\n  }\n\n  export function isAssertion(context: Rule.RuleContext, node: estree.Node): boolean {\n    return isAssertUsage(context, node);\n  }\n\n  function isAssertUsage(context: Rule.RuleContext, node: estree.Node) {\n    // assert.<expr>(), sinon.assert.<expr>()\n    const fqn = extractFQNforCallExpression(context, node);\n    if (!fqn) {\n      return false;\n    }\n    const names = fqn.split('.');\n    return names.length === 3 && names[0] === 'sinon' && names[1] === 'assert';\n  }\n\n  function extractFQNforCallExpression(context: Rule.RuleContext, node: estree.Node) {\n    if (node.type !== 'CallExpression') {\n      return undefined;\n    }\n    return getFullyQualifiedName(context, node);\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as estree from 'estree';\nimport ts from 'typescript';\nimport { TSESLint, TSESTree } from '@typescript-eslint/utils';\nimport { RequiredParserServices } from '../helpers';\nimport { getVariableFromScope } from './ast';\nimport { Rule } from 'eslint';\n\nexport type RuleContext = TSESLint.RuleContext<string, string[]>;\n\nexport function isArray(node: estree.Node, services: RequiredParserServices) {\n  const type = getTypeFromTreeNode(node, services);\n  return type.symbol?.name === 'Array';\n}\n\n/**\n * TypeScript provides a set of utility types to facilitate type transformations.\n * @see https://www.typescriptlang.org/docs/handbook/utility-types.html\n */\nexport const UTILITY_TYPES = new Set([\n  'Awaited',\n  'Partial',\n  'Required',\n  'Readonly',\n  'Record',\n  'Pick',\n  'Omit',\n  'Exclude',\n  'Extract',\n  'NonNullable',\n  'Parameters',\n  'ConstructorParameters',\n  'ReturnType',\n  'InstanceType',\n  'ThisParameterType',\n  'OmitThisParameter',\n  'ThisType',\n  'Uppercase',\n  'Lowercase',\n  'Capitalize',\n  'Uncapitalize',\n]);\n\n/**\n * JavaScript typed arrays\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Typed_arrays\n */\nexport const TYPED_ARRAY_TYPES = [\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array',\n];\n\n/**\n * Checks if the provided node is a JS typed array like \"BigInt64Array\". See TYPED_ARRAY_TYPES\n *\n * @param node\n * @param services\n * @returns\n */\nexport function isTypedArray(node: estree.Node, services: RequiredParserServices) {\n  const type = getTypeFromTreeNode(node, services);\n  return TYPED_ARRAY_TYPES.includes(type.symbol?.name);\n}\n\nexport function isString(node: estree.Node, services: RequiredParserServices) {\n  const checker = services.program.getTypeChecker();\n  const typ = checker.getTypeAtLocation(services.esTreeNodeToTSNodeMap.get(node as TSESTree.Node));\n  return (typ.getFlags() & ts.TypeFlags.StringLike) !== 0;\n}\n\nexport function isNumber(node: estree.Node, services: RequiredParserServices) {\n  const checker = services.program.getTypeChecker();\n  const typ = checker.getTypeAtLocation(services.esTreeNodeToTSNodeMap.get(node as TSESTree.Node));\n  return (typ.getFlags() & ts.TypeFlags.NumberLike) !== 0;\n}\n\nexport function isBigIntType(type: ts.Type) {\n  return (type.getFlags() & ts.TypeFlags.BigIntLike) !== 0;\n}\n\nexport function isNumberType(type: ts.Type) {\n  return (type.getFlags() & ts.TypeFlags.NumberLike) !== 0;\n}\n\nexport function isStringType(type: ts.Type) {\n  return (type.flags & ts.TypeFlags.StringLike) > 0 || type.symbol?.name === 'String';\n}\n\nexport function isFunction(node: estree.Node, services: RequiredParserServices) {\n  const checker = services.program.getTypeChecker();\n  const type = checker.getTypeAtLocation(services.esTreeNodeToTSNodeMap.get(node as TSESTree.Node));\n  return type.symbol && (type.symbol.flags & ts.SymbolFlags.Function) !== 0;\n}\n\nexport function isUnion(node: estree.Node, services: RequiredParserServices) {\n  const checker = services.program.getTypeChecker();\n  const type = checker.getTypeAtLocation(services.esTreeNodeToTSNodeMap.get(node as TSESTree.Node));\n  return type.isUnion();\n}\n\n/**\n * Returns an array of the union types if the provided type is a union.\n * Otherwise, returns an array containing the provided type as its unique element.\n * @param type A TypeScript type.\n * @return An array of types. It's never empty.\n */\nexport function getUnionTypes(type: ts.Type): ts.Type[] {\n  return type.isUnion() ? type.types : [type];\n}\n\nexport function isUndefinedOrNull(node: estree.Node, services: RequiredParserServices) {\n  const checker = services.program.getTypeChecker();\n  const typ = checker.getTypeAtLocation(services.esTreeNodeToTSNodeMap.get(node as TSESTree.Node));\n  return (\n    (typ.getFlags() & ts.TypeFlags.Undefined) !== 0 || (typ.getFlags() & ts.TypeFlags.Null) !== 0\n  );\n}\n\nexport function isThenable(node: estree.Node, services: RequiredParserServices) {\n  const mapped = services.esTreeNodeToTSNodeMap.get(node as TSESTree.Node);\n  const tp = services.program.getTypeChecker().getTypeAtLocation(mapped);\n  const thenProperty = tp.getProperty('then');\n  return Boolean(thenProperty && thenProperty.flags & ts.SymbolFlags.Method);\n}\n\nexport function isAny(type: ts.Type) {\n  return type.flags === ts.TypeFlags.Any;\n}\n\n/**\n * Checks if a node has a generic type like:\n *\n * function foo<T> (bar: T) {\n *    bar // is generic\n * }\n *\n * @param node TSESTree.Node\n * @param services RuleContext.parserServices\n * @returns\n */\nexport function isGenericType(node: TSESTree.Node, services: RequiredParserServices) {\n  const type = getTypeFromTreeNode(node as estree.Node, services);\n  return type.isTypeParameter();\n}\n\nexport function getTypeFromTreeNode(node: estree.Node, services: RequiredParserServices) {\n  const checker = services.program.getTypeChecker();\n  return checker.getTypeAtLocation(services.esTreeNodeToTSNodeMap.get(node as TSESTree.Node));\n}\n\nexport function getTypeAsString(node: estree.Node, services: RequiredParserServices) {\n  const { typeToString, getBaseTypeOfLiteralType } = services.program.getTypeChecker();\n  return typeToString(getBaseTypeOfLiteralType(getTypeFromTreeNode(node, services)));\n}\n\nexport function getSymbolAtLocation(node: estree.Node, services: RequiredParserServices) {\n  const checker = services.program.getTypeChecker();\n  return checker.getSymbolAtLocation(services.esTreeNodeToTSNodeMap.get(node as TSESTree.Node));\n}\n\nexport function getSignatureFromCallee(node: estree.Node, services: RequiredParserServices) {\n  const checker = services.program.getTypeChecker();\n  return checker.getResolvedSignature(\n    services.esTreeNodeToTSNodeMap.get(node as TSESTree.Node) as ts.CallLikeExpression,\n  );\n}\n\n/**\n * This function checks if a type may correspond to an array type. Beyond simple array types, it will also\n * consider the union of array types and generic types extending an array type.\n * @param type A type to check\n * @param services The services used to get access to the TypeScript type checker\n */\nexport function isArrayLikeType(type: ts.Type, services: RequiredParserServices) {\n  const checker = services.program.getTypeChecker();\n  const constrained = checker.getBaseConstraintOfType(type);\n  return isArrayOrUnionOfArrayType(constrained ?? type, services);\n}\n\nfunction isArrayOrUnionOfArrayType(type: ts.Type, services: RequiredParserServices): boolean {\n  for (const part of getUnionTypes(type)) {\n    if (!isArrayType(part, services)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Test if the provided type is an array of strings.\n * @param type A TypeScript type.\n * @param services The services used to get access to the TypeScript type checker\n */\nexport function isStringArray(type: ts.Type, services: RequiredParserServices) {\n  return isArrayElementTypeMatching(type, services, isStringType);\n}\n\n/**\n * Test if the provided type is an array of numbers.\n * @param type A TypeScript type.\n * @param services The services used to get access to the TypeScript type checker\n */\nexport function isNumberArray(type: ts.Type, services: RequiredParserServices) {\n  return isArrayElementTypeMatching(type, services, isNumberType);\n}\n\n/**\n * Test if the provided type is an array of big integers.\n * @param type A TypeScript type.\n * @param services The services used to get access to the TypeScript type checker\n */\nexport function isBigIntArray(type: ts.Type, services: RequiredParserServices) {\n  return isArrayElementTypeMatching(type, services, isBigIntType);\n}\n\nfunction isArrayElementTypeMatching(\n  type: ts.Type,\n  services: RequiredParserServices,\n  predicate: (type: ts.Type) => boolean,\n) {\n  const checker = services.program.getTypeChecker();\n  if (!isArrayType(type, services)) {\n    return false;\n  }\n  const [elementType] = checker.getTypeArguments(type);\n  return elementType && predicate(elementType);\n}\n\n// Internal TS API\nfunction isArrayType(type: ts.Type, services: RequiredParserServices): type is ts.TypeReference {\n  const checker = services.program.getTypeChecker();\n  return (\n    'isArrayType' in checker &&\n    typeof checker.isArrayType === 'function' &&\n    checker.isArrayType(type)\n  );\n}\n\n/**\n * Checks whether a TypeScript type node denotes a type alias.\n * @param node a type node to check\n * @param context the rule context\n */\nexport function isTypeAlias(node: TSESTree.TypeNode, context: Rule.RuleContext) {\n  if (\n    node.type !== 'TSTypeReference' ||\n    node.typeName.type !== 'Identifier' ||\n    node.typeArguments\n  ) {\n    return false;\n  }\n  const scope = context.sourceCode.getScope(node as unknown as estree.Node);\n  const variable = getVariableFromScope(scope, node.typeName.name);\n  return variable?.defs.some(def => def.node.type === 'TSTypeAliasDeclaration');\n}\n\nexport function isBooleanLiteralType(type: ts.Type): type is ts.Type & {\n  intrinsicName: 'true' | 'false';\n} {\n  return type.flags === ts.TypeFlags.BooleanLiteral;\n}\n\nexport function isBooleanTrueType(type: ts.Type) {\n  return isBooleanLiteralType(type) && type.intrinsicName === 'true';\n}\n\nexport function isBooleanType({ flags }: ts.Type) {\n  return flags & ts.TypeFlags.BooleanLike;\n}\n\nexport function isNullOrUndefinedType({ flags }: ts.Type) {\n  return flags & ts.TypeFlags.Null || flags & ts.TypeFlags.Undefined;\n}\n\nexport function isObjectType({ flags }: ts.Type) {\n  return flags & ts.TypeFlags.Object;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getFullyQualifiedName, getImportDeclarations, getRequireCalls } from '.';\n\nexport namespace Vitest {\n  export function isImported(context: Rule.RuleContext): boolean {\n    return (\n      getRequireCalls(context).some(\n        r => r.arguments[0].type === 'Literal' && r.arguments[0].value === 'vitest',\n      ) || getImportDeclarations(context).some(i => i.source.value === 'vitest')\n    );\n  }\n\n  export function isAssertion(context: Rule.RuleContext, node: estree.Node): boolean {\n    return isExpectUsage(context, node);\n  }\n\n  function isExpectUsage(context: Rule.RuleContext, node: estree.Node) {\n    // expect(), vitest.expect()\n    return extractFQNforCallExpression(context, node) === 'vitest.expect';\n  }\n\n  function extractFQNforCallExpression(context: Rule.RuleContext, node: estree.Node) {\n    if (node.type !== 'CallExpression') {\n      return undefined;\n    }\n    return getFullyQualifiedName(context, node);\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { AST } from 'vue-eslint-parser';\n\ntype VChildElement = AST.VElement | AST.VText | AST.VExpressionContainer | AST.VStyleElement;\n\nfunction isVueSetupScript(element: VChildElement): boolean {\n  return (\n    element.type === 'VElement' &&\n    element.name === 'script' &&\n    !!element.startTag.attributes.find(attr => attr.key.name === 'setup')\n  );\n}\n\nexport function isInsideVueSetupScript(node: estree.Node, ctx: Rule.RuleContext): boolean {\n  const doc: AST.VDocumentFragment = ctx.sourceCode.parserServices?.getDocumentFragment?.();\n  const setupScript = doc?.children.find(isVueSetupScript);\n  return (\n    !!setupScript &&\n    !!node.range &&\n    setupScript.range[0] <= node.range[0] &&\n    setupScript.range[1] >= node.range[1]\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport type { ParserServices, ParserServicesWithTypeInformation } from '@typescript-eslint/utils';\n\nexport type RequiredParserServices = ParserServicesWithTypeInformation;\n\nexport function isRequiredParserServices(\n  services: ParserServices | undefined,\n): services is RequiredParserServices {\n  // see https://github.com/typescript-eslint/typescript-eslint/issues/7124\n  return !!services?.program;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { interceptReport } from '../helpers';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, reportExempting(isDecoratedSetterWithAngularInput));\n}\n\nfunction reportExempting(\n  exemptionCondition: (def: TSESTree.MethodDefinition) => boolean,\n): (context: Rule.RuleContext, reportDescriptor: Rule.ReportDescriptor) => void {\n  return (context, reportDescriptor) => {\n    if ('node' in reportDescriptor) {\n      const def = reportDescriptor['node'] as TSESTree.MethodDefinition;\n      if (!exemptionCondition(def)) {\n        context.report(reportDescriptor);\n      }\n    }\n  };\n}\n\nfunction isDecoratedSetterWithAngularInput(def: TSESTree.MethodDefinition) {\n  const { kind, decorators } = def;\n  return (\n    kind === 'set' &&\n    decorators !== undefined &&\n    decorators.some(\n      decorator =>\n        decorator.expression.type === 'CallExpression' &&\n        decorator.expression.callee.type === 'Identifier' &&\n        decorator.expression.callee.name === 'Input',\n    )\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { eslintRules } from '../core';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(eslintRules['accessor-pairs']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1077/javascript\n\nimport { Rule } from 'eslint';\nimport { Node } from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { interceptReport } from '../helpers';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, (context, descriptor) => {\n    const { node } = descriptor as unknown as { node: TSESTree.JSXOpeningElement };\n    const name = node.name as unknown as Node;\n    context.report({ ...descriptor, node: name });\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport jsxA11y from 'eslint-plugin-jsx-a11y';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(jsxA11y.rules['alt-text']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport { interceptReport } from '../helpers';\nimport jsxAstUtils from 'jsx-ast-utils';\nimport { TSESTree } from '@typescript-eslint/utils';\n\n/**\n * This fix was introduced in eslint-plugin-jsx-a11y e6bfd5cb7c,\n * but the last release is almost a year old, so it doesn't include this.\n * When we update the dependency, we can remove this decorator.\n *\n * This will include the removal of:\n * - the `jsx-ast-utils` dependency\n * - its type definition `typings/jsx-ast-utils/index.d.ts`\n * - all files in the `rules/S6827/` directory\n */\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.hasSuggestions = true;\n  return interceptReport(rule, (context, reportDescriptor) => {\n    const node = (reportDescriptor as any).node as TSESTree.JSXOpeningElement;\n\n    if (jsxAstUtils.hasAnyProp(node.attributes, ['title', 'aria-label'])) {\n      return;\n    }\n    context.report({ ...reportDescriptor });\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6727/javascript\n\nimport jsxA11y from 'eslint-plugin-jsx-a11y';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(jsxA11y.rules['anchor-has-content']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6844/javascript\n\nimport jsxA11y from 'eslint-plugin-jsx-a11y';\nimport { interceptReport } from '../helpers';\n\nconst anchorIsValid = jsxA11y.rules['anchor-is-valid'];\n\nexport const rule = interceptReport(anchorIsValid, (context, reportDescriptor) => {\n  const descriptor = reportDescriptor as any;\n  const { message } = descriptor;\n  descriptor.message = message.substring(0, message.indexOf(' Learn'));\n  context.report(descriptor);\n});\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as estree from 'estree';\nimport { isIdentifier, isString, RequiredParserServices } from '../';\n\nexport function isRegExpConstructor(node: estree.Node): node is estree.CallExpression {\n  return (\n    ((node.type === 'CallExpression' || node.type === 'NewExpression') &&\n      node.callee.type === 'Identifier' &&\n      node.callee.name === 'RegExp' &&\n      node.arguments.length > 0) ||\n    isRegExpWithGlobalThis(node)\n  );\n}\n\nexport function isStringReplaceCall(call: estree.CallExpression, services: RequiredParserServices) {\n  return (\n    call.callee.type === 'MemberExpression' &&\n    call.callee.property.type === 'Identifier' &&\n    !call.callee.computed &&\n    ['replace', 'replaceAll'].includes(call.callee.property.name) &&\n    call.arguments.length > 1 &&\n    isString(call.callee.object, services)\n  );\n}\n\nexport function isStringRegexMethodCall(\n  call: estree.CallExpression,\n  services: RequiredParserServices,\n) {\n  return (\n    call.callee.type === 'MemberExpression' &&\n    call.callee.property.type === 'Identifier' &&\n    !call.callee.computed &&\n    ['match', 'matchAll', 'search'].includes(call.callee.property.name) &&\n    call.arguments.length > 0 &&\n    isString(call.callee.object, services) &&\n    isString(call.arguments[0], services)\n  );\n}\n\nfunction isRegExpWithGlobalThis(node: estree.Node) {\n  return (\n    node.type === 'NewExpression' &&\n    node.callee.type === 'MemberExpression' &&\n    isIdentifier(node.callee.object, 'globalThis') &&\n    isIdentifier(node.callee.property, 'RegExp') &&\n    node.arguments.length > 0\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as estree from 'estree';\nimport { Rule } from 'eslint';\nimport { getVariableFromIdentifier } from '../reaching-definitions';\nimport {\n  getUniqueWriteReference,\n  getSimpleRawStringValue,\n  isSimpleRawString,\n  isStaticTemplateLiteral,\n  isStringLiteral,\n} from '../ast';\n\nexport function getFlags(\n  callExpr: estree.CallExpression,\n  context?: Rule.RuleContext,\n): string | null {\n  if (callExpr.arguments.length < 2) {\n    return '';\n  }\n\n  const flags = callExpr.arguments[1];\n  // Matches flags in: new RegExp(pattern, 'u')\n  if (isStringLiteral(flags)) {\n    return flags.value;\n  }\n  if (flags.type === 'Identifier' && context !== undefined) {\n    // it's a variable, so we try to extract its value, but only if it's written once (const)\n    const variable = getVariableFromIdentifier(flags, context.sourceCode.getScope(callExpr));\n    const ref = getUniqueWriteReference(variable);\n    if (ref !== undefined && isStringLiteral(ref)) {\n      return ref.value;\n    }\n  }\n  // Matches flags with basic template literals as in: new RegExp(pattern, `u`)\n  // but not: new RegExp(pattern, `${flag}`)\n  // The cooked value should always be non-null in this case.\n  if (isStaticTemplateLiteral(flags) && flags.quasis[0].value.cooked != null) {\n    return flags.quasis[0].value.cooked;\n  }\n  // Matches flags with simple raw strings as in: new RegExp(pattern, String.raw`u`)\n  // but not: new RegExp(pattern, String.raw`${flag}`)\n  if (isSimpleRawString(flags)) {\n    return getSimpleRawStringValue(flags);\n  }\n  return null;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as estree from 'estree';\nimport * as regexpp from '@eslint-community/regexpp';\nimport { Rule } from 'eslint';\nimport {\n  getSimpleRawStringValue,\n  getUniqueWriteUsage,\n  isBinaryPlus,\n  isIdentifier,\n  isRegexLiteral,\n  isSimpleRawString,\n  isStaticTemplateLiteral,\n  isStringLiteral,\n} from '../';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { isRegExpConstructor } from './ast';\nimport { getFlags } from './flags';\n\nexport function getParsedRegex(\n  node: estree.Node,\n  context: Rule.RuleContext,\n): regexpp.AST.RegExpLiteral | null {\n  const patternAndFlags = getPatternFromNode(node, context);\n  if (patternAndFlags) {\n    try {\n      return regexpp.parseRegExpLiteral(new RegExp(patternAndFlags.pattern, patternAndFlags.flags));\n    } catch {\n      // do nothing for invalid regex\n    }\n  }\n\n  return null;\n}\n\nexport function getPatternFromNode(\n  node: estree.Node,\n  context: Rule.RuleContext,\n): { pattern: string; flags: string } | null {\n  if (isRegExpConstructor(node)) {\n    const patternOnly = getPatternFromNode(node.arguments[0], context);\n    const flags = getFlags(node, context);\n    if (patternOnly && flags !== null) {\n      // if we can't extract flags correctly, we skip this\n      // to avoid FPs\n      return { pattern: patternOnly.pattern, flags };\n    }\n  } else if (isRegexLiteral(node)) {\n    return node.regex;\n  } else if (isStringLiteral(node)) {\n    return { pattern: node.value as string, flags: '' };\n  } else if (isStaticTemplateLiteral(node)) {\n    return { pattern: node.quasis[0].value.raw, flags: '' };\n  } else if (isSimpleRawString(node)) {\n    return { pattern: getSimpleRawStringValue(node), flags: '' };\n  } else if (isIdentifier(node)) {\n    const assignedExpression = getUniqueWriteUsage(context, node.name, node);\n    if (\n      assignedExpression &&\n      (assignedExpression as TSESTree.Node).parent?.type === 'VariableDeclarator'\n    ) {\n      return getPatternFromNode(assignedExpression, context);\n    }\n  } else if (isBinaryPlus(node)) {\n    const left = getPatternFromNode(node.left, context);\n    const right = getPatternFromNode(node.right, context);\n    if (left && right) {\n      return { pattern: left.pattern + right.pattern, flags: '' };\n    }\n  }\n\n  return null;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as estree from 'estree';\nimport { isStringLiteral } from '../';\n\nexport interface GroupReference {\n  raw: string;\n  value: string;\n}\n\nexport function extractReferences(node: estree.Node) {\n  const references: GroupReference[] = [];\n  if (isStringLiteral(node)) {\n    const str = node.value as string;\n    const reg = /\\$(\\d+)|\\$<([a-zA-Z]\\w*)>/g;\n    let match: RegExpExecArray | null;\n    while ((match = reg.exec(str)) !== null) {\n      const [raw, index, name] = match;\n      const value = index || name;\n      references.push({ raw, value });\n    }\n  }\n  return references;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport interface StringLiteralToken {\n  value: string;\n  range: [number, number];\n}\n\nconst UNICODE_ESCAPE_LENGTH = 4;\nconst HEX_ESCAPE_LENGTH = 2;\n\nconst CP_BACK_SLASH = cp('\\\\');\nconst CP_FORWARD_SLASH = cp('/');\nconst CP_CR = cp('\\r');\nconst CP_LF = cp('\\n');\nconst CP_n = cp('n');\nconst CP_r = cp('r');\nconst CP_t = cp('t');\nconst CP_b = cp('b');\nconst CP_v = cp('v');\nconst CP_f = cp('f');\nconst CP_u = cp('u');\nconst CP_x = cp('x');\n\n/**\n * Parse 's' and return array of tokens with range. We assume 's' is correctly terminated because it was already parsed\n * into AST.\n *\n * Inspired by https://github.com/ota-meshi/eslint-plugin-regexp/blob/61ae9424e0f3bde62569718b597cdc036fec9f71/lib/utils/string-literal-parser/tokenizer.ts\n */\nexport function tokenizeString(s: string): StringLiteralToken[] {\n  const tokens: StringLiteralToken[] = [];\n  let pos = 0;\n\n  function next() {\n    const c = cp(s, pos);\n    pos = inc(pos, c);\n    return c;\n  }\n\n  function readEscape(): string {\n    const c = next();\n    switch (c) {\n      case CP_n:\n        return '\\n';\n      case CP_r:\n        return '\\r';\n      case CP_t:\n        return '\\t';\n      case CP_b:\n        return '\\b';\n      case CP_v:\n        return '\\v';\n      case CP_f:\n        return '\\f';\n      case CP_BACK_SLASH:\n        return '\\\\';\n      case CP_CR:\n        if (cp(s, pos) === CP_LF) {\n          pos++; // \\r\\n\n        }\n        return '';\n      case CP_LF:\n        return '';\n      case CP_u:\n        return String.fromCodePoint(readUnicode());\n      case CP_x:\n        return String.fromCodePoint(readHex());\n      default:\n        if (isOctalDigit(c)) {\n          return readOctal(c);\n        }\n        return String.fromCodePoint(c);\n    }\n  }\n\n  /**\n   * read unicode escape like \\u0061 or \\u{61}\n   */\n  function readUnicode(): number {\n    let u;\n    if (s.charAt(pos) === '{') {\n      pos++;\n      const close = s.indexOf('}', pos);\n      u = s.substring(pos, close);\n      pos = close + 1;\n    } else {\n      u = s.substring(pos, pos + UNICODE_ESCAPE_LENGTH);\n      pos += UNICODE_ESCAPE_LENGTH;\n    }\n    return Number.parseInt(u, 16);\n  }\n\n  /**\n   * read hex escape like \\xA9\n   */\n  function readHex(): number {\n    const x = Number.parseInt(s.substring(pos, pos + HEX_ESCAPE_LENGTH), 16);\n    pos += HEX_ESCAPE_LENGTH;\n    return x;\n  }\n\n  /**\n   * read octal escapes like \\251. Octal escape sequences can have 1 - 3 digits\n   * and can be padded with 0\n   *\n   * @param firstDigit digit on the current 'pos' position\n   */\n  function readOctal(firstDigit: number): string {\n    let octal = String.fromCodePoint(firstDigit);\n    let i = pos;\n    while (isOctalDigit(cp(s, i)) && i - pos < 2) {\n      octal += s.charAt(i);\n      i++;\n    }\n    const res = Number.parseInt(octal, 8);\n    pos = i;\n    return String.fromCodePoint(res);\n  }\n\n  while (pos < s.length) {\n    const start = pos;\n    const c = next();\n    if (c === CP_BACK_SLASH) {\n      const value = readEscape();\n      if (value !== '') {\n        tokens.push({ value, range: [start, pos] });\n      }\n    } else if (c === CP_FORWARD_SLASH) {\n      const forwardSlash: StringLiteralToken = {\n        value: String.fromCodePoint(c),\n        range: [start, pos],\n      };\n      tokens.push(forwardSlash);\n      tokens.push(forwardSlash);\n    } else {\n      tokens.push({ value: String.fromCodePoint(c), range: [start, pos] });\n    }\n  }\n  return tokens;\n}\n\nfunction inc(pos: number, c: number): number {\n  // account for UTF-16 low surrogate\n  return pos + (c >= 0x10000 ? 2 : 1);\n}\n\nfunction isOctalDigit(c: number | undefined): boolean {\n  return c !== undefined && cp('0') <= c && c <= cp('7');\n}\n\nfunction cp(s: string, i = 0): number {\n  return s.codePointAt(i)!;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { AST } from 'eslint';\nimport * as estree from 'estree';\nimport * as regexpp from '@eslint-community/regexpp';\nimport { last, isRegexLiteral, isStringLiteral } from '../';\nimport { tokenizeString } from './tokenizer';\n\n/**\n * Returns the location of regexpNode relative to the node, which is regexp string or literal. If the computation\n * of location fails, it returns the range of the whole node.\n */\nexport function getRegexpRange(node: estree.Node, regexpNode: regexpp.AST.Node): AST.Range {\n  if (isRegexLiteral(node)) {\n    return [regexpNode.start, regexpNode.end];\n  }\n  if (isStringLiteral(node)) {\n    if (node.value === '') {\n      return [0, 2];\n    }\n    const s = node.raw!;\n    const tokens = tokenizeString(unquote(s));\n    if (regexpNode.start === regexpNode.end) {\n      // this happens in case of empty alternative node like '|'\n      if (regexpNode.start - 1 < tokens.length) {\n        // '|' first empty alternative will have start = 1, end = 1\n        // +1 is to account for string quote\n        return [\n          tokens[regexpNode.start - 1].range[0] + 1,\n          tokens[regexpNode.start - 1].range[0] + 1,\n        ];\n      } else {\n        // '|' second empty alternative regex node will have start = 2, end = 2\n        // +1 is to account for string quote\n        return [last(tokens).range[1] + 1, last(tokens).range[1] + 1];\n      }\n    }\n    // regexpNode positions are 1 - based, we need to -1 to report as 0 - based\n    // it's possible for node start to be outside of range, e.g. `a` in new RegExp('//a')\n    const startToken = regexpNode.start - 1;\n    if (tokens[startToken] === undefined) {\n      // fallback when something is broken\n      return nodeRange(node);\n    }\n    const start = tokens[startToken].range[0];\n    // it's possible for node end to be outside of range, e.g. new RegExp('\\n(|)')\n    const endToken = Math.min(regexpNode.end - 2, tokens.length - 1);\n    if (tokens[endToken] === undefined) {\n      // fallback when something is broken\n      return nodeRange(node);\n    }\n    const end = tokens[endToken].range[1];\n    // +1 is needed to account for string quotes\n    return [start + 1, end + 1];\n  }\n  if (node.type === 'TemplateLiteral') {\n    // we don't support these properly\n    return nodeRange(node);\n  }\n  throw new Error(`Expected regexp or string literal, got ${node.type}`);\n}\n\nfunction nodeRange(node: estree.Node): [number, number] {\n  return [0, node.range![1] - node.range![0]];\n}\n\nfunction unquote(s: string): string {\n  if (!s.startsWith(\"'\") && !s.startsWith('\"')) {\n    throw new Error(`invalid string to unquote: ${s}`);\n  }\n  return s.substring(1, s.length - 1);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { AST, Rule } from 'eslint';\nimport * as estree from 'estree';\nimport * as regexpp from '@eslint-community/regexpp';\nimport { isRegexLiteral, isStringLiteral } from '../';\nimport { getRegexpRange } from './range';\n\n/**\n * Gets the regexp node location in the ESLint referential\n * @param node the ESLint regex node\n * @param regexpNode the regexp regex node\n * @param context the rule context\n * @param offset an offset to apply on the location\n * @returns the regexp node location in the ESLint referential\n */\nexport function getRegexpLocation(\n  node: estree.Node,\n  regexpNode: regexpp.AST.Node,\n  context: Rule.RuleContext,\n  offset = [0, 0],\n): AST.SourceLocation | null {\n  let loc: AST.SourceLocation;\n  if (isRegexLiteral(node) || isStringLiteral(node)) {\n    const source = context.sourceCode;\n    const [start] = node.range!;\n    const [reStart, reEnd] = getRegexpRange(node, regexpNode);\n    const locationStart = start + reStart + offset[0];\n    const locationEnd = start + reEnd + offset[1];\n    if (locationStart === locationEnd) {\n      return null;\n    } else {\n      loc = {\n        start: source.getLocFromIndex(locationStart),\n        end: source.getLocFromIndex(locationEnd),\n      };\n    }\n  } else {\n    loc = node.loc!;\n  }\n  return loc;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport * as regexpp from '@eslint-community/regexpp';\nimport type { RegExpVisitor } from '@eslint-community/regexpp/visitor';\nimport { isStringRegexMethodCall } from './ast';\nimport { getParsedRegex } from './extract';\nimport { getRegexpLocation } from './location';\nimport { isRequiredParserServices } from '..';\n\n/**\n * Rule context for regex rules that also includes the original ESLint node\n * denoting the regular expression (string) literal.\n */\nexport type RegexRuleContext = Rule.RuleContext & {\n  node: estree.Node;\n  reportRegExpNode: (descriptor: RegexReportDescriptor) => void;\n};\n\ntype RegexReportMessage = Rule.ReportDescriptorMessage;\ntype RegexReportData = {\n  regexpNode: regexpp.AST.Node;\n  node: estree.Node;\n  offset?: [number, number];\n};\ntype RegexReportOptions = Rule.ReportDescriptorOptions;\ntype RegexReportDescriptor = RegexReportData & RegexReportMessage & RegexReportOptions;\n\n/**\n * Rule template to create regex rules.\n * @param handlers - the regexpp node handlers\n * @param meta - the (optional) rule metadata\n * @returns the resulting rule module\n */\nexport function createRegExpRule(\n  handlers: (context: RegexRuleContext) => RegExpVisitor.Handlers,\n  metadata: { meta: Rule.RuleMetaData } = { meta: {} },\n): Rule.RuleModule {\n  return {\n    ...metadata,\n    create(context: Rule.RuleContext) {\n      const services = isRequiredParserServices(context.sourceCode.parserServices)\n        ? context.sourceCode.parserServices\n        : null;\n\n      function checkRegex(node: estree.Node, regExpAST: regexpp.AST.Node | null) {\n        if (!regExpAST) {\n          return;\n        }\n        const ctx = Object.create(context) as RegexRuleContext;\n        ctx.node = node;\n        ctx.reportRegExpNode = reportRegExpNode;\n        regexpp.visitRegExpAST(regExpAST, handlers(ctx));\n      }\n\n      function reportRegExpNode(descriptor: RegexReportDescriptor) {\n        const { node, regexpNode, offset = [0, 0], ...rest } = descriptor;\n        const loc = getRegexpLocation(node, regexpNode, context, offset);\n        if (loc) {\n          context.report({ ...rest, loc });\n        }\n      }\n\n      function checkLiteral(literal: estree.Literal) {\n        checkRegex(literal, getParsedRegex(literal, context));\n      }\n\n      function checkCallExpression(callExpr: estree.CallExpression) {\n        let parsedRegex = getParsedRegex(callExpr, context);\n        if (!parsedRegex && services && isStringRegexMethodCall(callExpr, services)) {\n          const [implicitRegex] = callExpr.arguments;\n          parsedRegex = getParsedRegex(implicitRegex, context);\n        }\n        checkRegex(callExpr.arguments[0], parsedRegex);\n      }\n\n      return {\n        'Literal[regex]': checkLiteral,\n        NewExpression: checkCallExpression,\n        CallExpression: checkCallExpression,\n      };\n    },\n  };\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport {\n  Character,\n  CharacterClassElement,\n  CharacterClassRange,\n  CharacterSet,\n  Flags,\n  Node,\n} from '@eslint-community/regexpp/ast';\nimport * as regexpp from '@eslint-community/regexpp';\nimport createTree from 'functional-red-black-tree';\n\nconst MAX_CODE_POINT = 0x10ffff;\n\nexport class SimplifiedRegexCharacterClass {\n  /**\n   * This map defines the contents of the character class in the following way:<br>\n   * For any entry {@code codepoint -> tree}, all the codepoints from {@code codepoint} up to (and excluding) the next\n   * entry are in the character class and belong to the given tree.<br>\n   * For any entry {@code codepoint -> null}, all the codepoints from {@code codepoint} up to (and excluding) the next\n   * entry are not part of the character class.<br>\n   * So a codepoint is contained in this class if and only if {@code contents.le(codePoint).value} is\n   * non-null and the tree returned by {@code value} will be the element of the character class which matches that\n   * code point.\n   */\n  private contents = createTree<number, Node | undefined>();\n\n  constructor(\n    private readonly flags: Flags,\n    element?: CharacterClassElement,\n  ) {\n    if (element) {\n      this.add(element);\n    }\n  }\n\n  public add(element: CharacterClassElement) {\n    new SimplifiedRegexCharacterClass.Builder(this).visit(element);\n  }\n\n  public findIntersections(that: SimplifiedRegexCharacterClass) {\n    const iter = that.contents.begin;\n    const intersections: Node[] = [];\n    if (iter.key === undefined) {\n      return intersections;\n    }\n    while (iter.hasNext) {\n      const { key, value } = iter;\n      iter.next();\n      const to = iter.value ? iter.key : iter.key - 1;\n      if (value && this.hasEntryBetween(key, to)) {\n        intersections.push(value);\n      }\n    }\n    if (iter.value && this.hasEntryBetween(iter.key, MAX_CODE_POINT)) {\n      intersections.push(iter.value);\n    }\n    return intersections;\n  }\n\n  hasEntryBetween(from: number, to: number) {\n    const before = this.contents.le(from);\n    return (before.key !== undefined && before.value) || !this.isRangeEmpty(from + 1, to + 1);\n  }\n\n  isRangeEmpty(from: number, to: number) {\n    let isEmpty = true;\n    this.contents.forEach(() => (isEmpty = false), from, to);\n    return isEmpty;\n  }\n\n  addRange(from: number, to: number, element: CharacterClassElement) {\n    const oldEntry = this.contents.le(to);\n    const oldEnd = oldEntry.key === undefined ? undefined : this.contents.gt(oldEntry.key).key;\n    this.contents = this.put(from, element, this.contents);\n    const iterator = this.contents.begin;\n    while (iterator.key !== undefined) {\n      if (iterator.key > from && iterator.key <= to && iterator.value === undefined) {\n        this.contents = iterator.update(element);\n      }\n      iterator.next();\n    }\n    const next = to + 1;\n    if (next <= MAX_CODE_POINT) {\n      if (oldEntry.key !== undefined && oldEntry.value && (oldEnd === undefined || oldEnd > next)) {\n        this.contents = this.put(next, oldEntry.value, this.contents);\n      } else if (this.contents.find(next).key === undefined) {\n        this.contents = this.put(next, undefined, this.contents);\n      }\n    }\n  }\n\n  put(\n    key: number,\n    value: Node | undefined,\n    tree: createTree.Tree<number, regexpp.AST.Node | undefined>,\n  ) {\n    const entry = tree.find(key);\n    if (entry.valid) {\n      return entry.update(value);\n    }\n    return tree.insert(key, value);\n  }\n\n  private static readonly Builder = class {\n    constructor(private readonly characters: SimplifiedRegexCharacterClass) {}\n\n    public visit(element: CharacterClassElement) {\n      switch (element.type) {\n        case 'Character':\n          this.visitCharacter(element);\n          break;\n        case 'CharacterClassRange':\n          this.visitCharacterClassRange(element);\n          break;\n        case 'CharacterSet':\n          this.visitCharacterSet(element);\n          break;\n      }\n    }\n\n    visitCharacter(character: Character) {\n      this.addRange(character.value, character.value, character);\n    }\n\n    visitCharacterClassRange(characterRange: CharacterClassRange) {\n      this.addRange(characterRange.min.value, characterRange.max.value, characterRange);\n    }\n\n    visitCharacterSet(characterSet: CharacterSet) {\n      switch (characterSet.kind) {\n        case 'digit':\n          if (characterSet.negate) {\n            this.characters.addRange(0x00, this.codePoint('0') - 1, characterSet);\n            if (this.characters.flags.unicode) {\n              this.characters.addRange(this.codePoint('9') + 1, 0xff, characterSet);\n            } else {\n              this.characters.addRange(this.codePoint('9') + 1, MAX_CODE_POINT, characterSet);\n            }\n          } else {\n            this.characters.addRange(this.codePoint('0'), this.codePoint('9'), characterSet);\n          }\n          break;\n        case 'space':\n          if (characterSet.negate) {\n            this.characters.addRange(0x00, this.codePoint('\\t') - 1, characterSet);\n            this.characters.addRange(\n              this.codePoint('\\r') + 1,\n              this.codePoint(' ') - 1,\n              characterSet,\n            );\n            if (this.characters.flags.unicode) {\n              this.characters.addRange(this.codePoint(' ') + 1, 0x84, characterSet);\n              this.characters.addRange(0x86, 0x9f, characterSet);\n              this.characters.addRange(0xa1, 0x167f, characterSet);\n              this.characters.addRange(0x1681, 0x1fff, characterSet);\n              this.characters.addRange(0x200b, 0x2027, characterSet);\n              this.characters.addRange(0x202a, 0x202e, characterSet);\n              this.characters.addRange(0x2030, 0x205e, characterSet);\n              this.characters.addRange(0x2060, 0x2fff, characterSet);\n              this.characters.addRange(0x3001, MAX_CODE_POINT, characterSet);\n            } else {\n              this.characters.addRange(this.codePoint(' ') + 1, MAX_CODE_POINT, characterSet);\n            }\n          } else {\n            this.characters.addRange(this.codePoint('\\t'), this.codePoint('\\r'), characterSet);\n            this.characters.addRange(this.codePoint(' '), this.codePoint(' '), characterSet);\n            if (this.characters.flags.unicode) {\n              this.characters.addRange(0x85, 0x85, characterSet);\n              this.characters.addRange(0xa0, 0xa0, characterSet);\n              this.characters.addRange(0x1680, 0x1680, characterSet);\n              this.characters.addRange(0x2000, 0x200a, characterSet);\n              this.characters.addRange(0x2028, 0x2029, characterSet);\n              this.characters.addRange(0x202f, 0x202f, characterSet);\n              this.characters.addRange(0x205f, 0x205f, characterSet);\n              this.characters.addRange(0x3000, 0x3000, characterSet);\n            }\n          }\n          break;\n        case 'word':\n          if (characterSet.negate) {\n            this.characters.addRange(0x00, this.codePoint('0') - 1, characterSet);\n            this.characters.addRange(\n              this.codePoint('9') + 1,\n              this.codePoint('A') - 1,\n              characterSet,\n            );\n            this.characters.addRange(\n              this.codePoint('Z') + 1,\n              this.codePoint('_') - 1,\n              characterSet,\n            );\n            this.characters.addRange(this.codePoint('`'), this.codePoint('`'), characterSet);\n            if (this.characters.flags.unicode) {\n              this.characters.addRange(\n                this.codePoint('z') + 1,\n                this.codePoint('µ') - 1,\n                characterSet,\n              );\n            } else {\n              this.characters.addRange(this.codePoint('z') + 1, MAX_CODE_POINT, characterSet);\n            }\n          } else {\n            this.characters.addRange(this.codePoint('0'), this.codePoint('9'), characterSet);\n            this.characters.addRange(this.codePoint('A'), this.codePoint('Z'), characterSet);\n            this.characters.addRange(this.codePoint('_'), this.codePoint('_'), characterSet);\n            this.characters.addRange(this.codePoint('a'), this.codePoint('z'), characterSet);\n          }\n          break;\n      }\n    }\n\n    addRange(from: number, to: number, element: CharacterClassElement) {\n      const upperCaseFrom = this.codePoint(String.fromCodePoint(from).toUpperCase());\n      const upperCaseTo = this.codePoint(String.fromCodePoint(to).toUpperCase());\n      const lowerCaseFrom = this.codePoint(String.fromCodePoint(upperCaseFrom).toLowerCase());\n      const lowerCaseTo = this.codePoint(String.fromCodePoint(upperCaseTo).toLowerCase());\n      if (\n        this.characters.flags.ignoreCase &&\n        lowerCaseFrom !== upperCaseFrom &&\n        lowerCaseTo !== upperCaseTo &&\n        ((this.isAscii(from) && this.isAscii(to)) || this.characters.flags.unicode)\n      ) {\n        this.characters.addRange(upperCaseFrom, upperCaseTo, element);\n        this.characters.addRange(lowerCaseFrom, lowerCaseTo, element);\n      } else {\n        this.characters.addRange(from, to, element);\n      }\n    }\n\n    isAscii(c: number) {\n      return c < 128;\n    }\n\n    codePoint(c: string) {\n      const cp = c.codePointAt(0);\n      if (cp === undefined) {\n        throw new Error(`failed to compute code point for: ${c}`);\n      }\n      return cp;\n    }\n  };\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5850/javascript\n\nimport { Rule } from 'eslint';\nimport { AST } from '@eslint-community/regexpp';\nimport { createRegExpRule } from '../helpers/regex';\n\nenum Position {\n  BEGINNING,\n  END,\n}\n\nexport const rule: Rule.RuleModule = createRegExpRule(context => {\n  return {\n    onPatternEnter: (pattern: AST.Pattern) => {\n      const { alternatives } = pattern;\n      if (\n        alternatives.length > 1 &&\n        (anchoredAt(alternatives, Position.BEGINNING) || anchoredAt(alternatives, Position.END)) &&\n        notAnchoredElseWhere(alternatives)\n      ) {\n        context.reportRegExpNode({\n          message:\n            'Group parts of the regex together to make the intended operator precedence explicit.',\n          node: context.node,\n          regexpNode: pattern,\n        });\n      }\n    },\n  };\n});\n\nfunction anchoredAt(alternatives: AST.Alternative[], position: Position): boolean {\n  const itemIndex = position === Position.BEGINNING ? 0 : alternatives.length - 1;\n  const firstOrLast = alternatives[itemIndex];\n  return isAnchored(firstOrLast, position);\n}\n\nfunction notAnchoredElseWhere(alternatives: AST.Alternative[]): boolean {\n  if (\n    isAnchored(alternatives[0], Position.END) ||\n    isAnchored(alternatives[alternatives.length - 1], Position.BEGINNING)\n  ) {\n    return false;\n  }\n  for (const alternative of alternatives.slice(1, alternatives.length - 1)) {\n    if (isAnchored(alternative, Position.BEGINNING) || isAnchored(alternative, Position.END)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isAnchored(alternative: AST.Alternative, position: Position): boolean {\n  const { elements } = alternative;\n  if (elements.length === 0) {\n    return false;\n  }\n  const index = position === Position.BEGINNING ? 0 : elements.length - 1;\n  const firstOrLast = elements[index];\n  return isAnchor(firstOrLast);\n}\n\nfunction isAnchor(element: AST.Element) {\n  return element.type === 'Assertion' && (element.kind === 'start' || element.kind === 'end');\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3782/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getTypeFromTreeNode, isRequiredParserServices } from '../helpers';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport ts from 'typescript';\n\nexport const rule: Rule.RuleModule = {\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n    const tc = services.program.getTypeChecker();\n\n    function isBuiltInMethod(symbol: ts.Symbol) {\n      const parent = symbol.valueDeclaration?.parent;\n      if (!parent || parent.kind !== ts.SyntaxKind.InterfaceDeclaration) {\n        return false;\n      }\n      const parentSymbol = tc.getSymbolAtLocation((parent as ts.InterfaceDeclaration).name);\n      if (!parentSymbol) {\n        return false;\n      }\n      const fqn = tc.getFullyQualifiedName(parentSymbol);\n      // some of the built-in objects are deliberately excluded, because they generate many FPs\n      // and no relevant TP, e.g. RegExp, Function\n      return ['String', 'Math', 'Array', 'Number', 'Date'].includes(fqn);\n    }\n\n    function isVarArg(param: ts.ParameterDeclaration) {\n      return !!param.dotDotDotToken;\n    }\n\n    function isTypeParameter(type: ts.Type) {\n      return type.getFlags() & ts.TypeFlags.TypeParameter;\n    }\n\n    function declarationMismatch(\n      declaration: ts.SignatureDeclaration,\n      callExpression: estree.CallExpression,\n    ) {\n      const parameters = declaration.parameters;\n      for (let i = 0; i < Math.min(parameters.length, callExpression.arguments.length); i++) {\n        const parameterType = parameters[i].type;\n        if (!parameterType) {\n          return null;\n        }\n        const declaredType = tc.getTypeFromTypeNode(parameterType);\n        const actualType = getTypeFromTreeNode(callExpression.arguments[i], services);\n        if (\n          // @ts-ignore private API, see https://github.com/microsoft/TypeScript/issues/9879\n          !tc.isTypeAssignableTo(actualType, declaredType) &&\n          !isTypeParameter(declaredType) &&\n          !ts.isFunctionTypeNode(parameterType) &&\n          !isVarArg(parameters[i])\n        ) {\n          return { actualType, declaredType, node: callExpression.arguments[i] };\n        }\n      }\n      return null;\n    }\n\n    function typeToString(type: ts.Type) {\n      return tc.typeToString(tc.getBaseTypeOfLiteralType(type));\n    }\n\n    return {\n      CallExpression: (node: estree.Node) => {\n        const callExpression = node as estree.CallExpression;\n        const tsCallExpr = services.esTreeNodeToTSNodeMap.get(\n          callExpression.callee as TSESTree.Node,\n        );\n        const symbol = tc.getSymbolAtLocation(tsCallExpr);\n\n        if (symbol?.declarations && isBuiltInMethod(symbol)) {\n          let mismatch: {\n            actualType: ts.Type;\n            declaredType: ts.Type;\n            node: estree.Node;\n          } | null = null;\n          for (const declaration of symbol.declarations) {\n            mismatch = declarationMismatch(declaration as ts.SignatureDeclaration, callExpression);\n            if (!mismatch) {\n              return;\n            }\n          }\n          if (mismatch) {\n            context.report({\n              node: mismatch.node,\n              message: `Verify that argument is of correct type: expected '${typeToString(\n                mismatch.declaredType,\n              )}' instead of '${typeToString(mismatch.actualType)}'.`,\n            });\n          }\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2234/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { EncodedMessage } from 'eslint-plugin-sonarjs/lib/src/utils/locations';\nimport {\n  FunctionNodeType,\n  isRequiredParserServices,\n  isFunctionNode,\n  resolveFromFunctionReference,\n  getSignatureFromCallee,\n  getTypeAsString,\n  resolveIdentifiers,\n} from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\ninterface FunctionSignature {\n  params: Array<string | undefined>;\n  declaration?: FunctionNodeType;\n}\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    const canResolveType = isRequiredParserServices(services);\n\n    function checkArguments(functionCall: estree.CallExpression) {\n      const resolvedFunction = resolveFunctionDeclaration(functionCall);\n      if (!resolvedFunction) {\n        return;\n      }\n\n      const { params: functionParameters, declaration: functionDeclaration } = resolvedFunction;\n      const argumentNames = functionCall.arguments.map(arg => {\n        const argument = arg as TSESTree.Node;\n        return argument.type === 'Identifier' ? argument.name : undefined;\n      });\n\n      for (let argumentIndex = 0; argumentIndex < argumentNames.length; argumentIndex++) {\n        const argumentName = argumentNames[argumentIndex];\n        if (argumentName) {\n          const swappedArgumentName = getSwappedArgumentName(\n            argumentNames,\n            functionParameters,\n            argumentName,\n            argumentIndex,\n            functionCall,\n          );\n          if (\n            swappedArgumentName &&\n            !areComparedArguments([argumentName, swappedArgumentName], functionCall)\n          ) {\n            raiseIssue(argumentName, swappedArgumentName, functionDeclaration, functionCall);\n            return;\n          }\n        }\n      }\n    }\n\n    function areComparedArguments(argumentNames: string[], node: estree.Node): boolean {\n      function getName(node: estree.Node): string | undefined {\n        switch (node.type) {\n          case 'Identifier':\n            return node.name;\n          case 'CallExpression':\n            return getName(node.callee);\n          case 'MemberExpression':\n            return getName(node.object);\n          default:\n            return undefined;\n        }\n      }\n      function checkComparedArguments(lhs: estree.Node, rhs: estree.Node): boolean {\n        return (\n          [lhs, rhs].map(getName).filter(name => name && argumentNames.includes(name)).length ===\n          argumentNames.length\n        );\n      }\n      const maybeIfStmt = context.sourceCode\n        .getAncestors(node)\n        .reverse()\n        .find(ancestor => ancestor.type === 'IfStatement');\n      if (maybeIfStmt) {\n        const { test } = maybeIfStmt as estree.IfStatement;\n        switch (test.type) {\n          case 'BinaryExpression': {\n            const binExpr = test;\n            if (['==', '!=', '===', '!==', '<', '<=', '>', '>='].includes(binExpr.operator)) {\n              const { left: lhs, right: rhs } = binExpr;\n              return checkComparedArguments(lhs, rhs);\n            }\n            break;\n          }\n\n          case 'CallExpression': {\n            const callExpr = test;\n            if (callExpr.arguments.length === 1 && callExpr.callee.type === 'MemberExpression') {\n              const [lhs, rhs] = [callExpr.callee.object, callExpr.arguments[0]];\n              return checkComparedArguments(lhs, rhs);\n            }\n            break;\n          }\n        }\n      }\n      return false;\n    }\n\n    function resolveFunctionDeclaration(node: estree.CallExpression): FunctionSignature | null {\n      if (canResolveType) {\n        return resolveFromTSSignature(node);\n      }\n\n      let functionDeclaration: FunctionNodeType | null = null;\n\n      if (isFunctionNode(node.callee)) {\n        functionDeclaration = node.callee;\n      } else if (node.callee.type === 'Identifier') {\n        functionDeclaration = resolveFromFunctionReference(context, node.callee);\n      }\n\n      if (!functionDeclaration) {\n        return null;\n      }\n\n      return {\n        params: extractFunctionParameters(functionDeclaration),\n        declaration: functionDeclaration,\n      };\n    }\n\n    function resolveFromTSSignature(node: estree.CallExpression) {\n      const signature = getSignatureFromCallee(node, services);\n      if (signature?.declaration) {\n        return {\n          params: signature.parameters.map(param => param.name),\n          declaration: services.tsNodeToESTreeNodeMap.get(signature.declaration),\n        };\n      }\n      return null;\n    }\n\n    function getSwappedArgumentName(\n      argumentNames: Array<string | undefined>,\n      functionParameters: Array<string | undefined>,\n      argumentName: string,\n      argumentIndex: number,\n      node: estree.CallExpression,\n    ) {\n      const indexInFunctionDeclaration = functionParameters.findIndex(\n        functionParameterName => functionParameterName === argumentName,\n      );\n      if (indexInFunctionDeclaration >= 0 && indexInFunctionDeclaration !== argumentIndex) {\n        const potentiallySwappedArgument = argumentNames[indexInFunctionDeclaration];\n        if (\n          potentiallySwappedArgument &&\n          potentiallySwappedArgument === functionParameters[argumentIndex] &&\n          haveCompatibleTypes(\n            node.arguments[argumentIndex],\n            node.arguments[indexInFunctionDeclaration],\n          )\n        ) {\n          return potentiallySwappedArgument;\n        }\n      }\n      return null;\n    }\n\n    function haveCompatibleTypes(arg1: estree.Node, arg2: estree.Node) {\n      if (canResolveType) {\n        const type1 = normalizeType(getTypeAsString(arg1, services));\n        const type2 = normalizeType(getTypeAsString(arg2, services));\n        return type1 === type2;\n      }\n      return true;\n    }\n\n    function raiseIssue(\n      arg1: string,\n      arg2: string,\n      functionDeclaration: FunctionNodeType | undefined,\n      node: estree.CallExpression,\n    ) {\n      const primaryMessage = `Arguments '${arg1}' and '${arg2}' have the same names but not the same order as the function parameters.`;\n      const encodedMessage: EncodedMessage = {\n        message: primaryMessage,\n        secondaryLocations: getSecondaryLocations(functionDeclaration),\n      };\n\n      context.report({\n        message: JSON.stringify(encodedMessage),\n        loc: getParametersClauseLocation(node.arguments),\n      });\n    }\n\n    return {\n      NewExpression: (node: estree.Node) => {\n        checkArguments(node as estree.NewExpression);\n      },\n      CallExpression: (node: estree.Node) => {\n        checkArguments(node as estree.CallExpression);\n      },\n    };\n  },\n};\n\nfunction extractFunctionParameters(functionDeclaration: FunctionNodeType) {\n  return functionDeclaration.params.map(param => {\n    const identifiers = resolveIdentifiers(param as TSESTree.Node);\n    if (identifiers.length === 1 && identifiers[0]) {\n      return identifiers[0].name;\n    }\n    return undefined;\n  });\n}\n\nfunction getSecondaryLocations(functionDeclaration: FunctionNodeType | undefined) {\n  if (functionDeclaration?.params && functionDeclaration.params.length > 0) {\n    const { start, end } = getParametersClauseLocation(functionDeclaration.params);\n    return [\n      {\n        message: 'Formal parameters',\n        line: start.line,\n        column: start.column,\n        endLine: end.line,\n        endColumn: end.column,\n      },\n    ];\n  }\n  return [];\n}\n\nfunction getParametersClauseLocation(parameters: Array<estree.Node>) {\n  const firstParam = parameters[0] as TSESTree.Node;\n  const lastParam = parameters[parameters.length - 1] as TSESTree.Node;\n  return { start: firstParam.loc.start, end: lastParam.loc.end };\n}\n\nfunction normalizeType(typeAsString: string) {\n  switch (typeAsString) {\n    case 'String':\n      return 'string';\n    case 'Boolean':\n      return 'boolean';\n    case 'Number':\n      return 'number';\n    default:\n      return typeAsString;\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3513/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\nimport estree from 'estree';\n\nconst MESSAGE = \"Use the rest syntax to declare this function's arguments.\";\nconst SECONDARY_MESSAGE = 'Replace this reference to \"arguments\".';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      // Ignore root scope containing global variables\n      'Program:exit': (node: estree.Node) =>\n        context.sourceCode\n          .getScope(node)\n          .childScopes.forEach(child => checkArgumentsUsageInScopeRecursively(context, child)),\n    };\n  },\n};\n\nfunction checkArgumentsUsageInScopeRecursively(\n  context: Rule.RuleContext,\n  scope: Scope.Scope,\n): void {\n  scope.variables\n    .filter(variable => variable.name === 'arguments')\n    .forEach(variable => checkArgumentsVariableWithoutDefinition(context, variable));\n  scope.childScopes.forEach(child => checkArgumentsUsageInScopeRecursively(context, child));\n}\n\nfunction checkArgumentsVariableWithoutDefinition(\n  context: Rule.RuleContext,\n  variable: Scope.Variable,\n): void {\n  // if variable is a parameter, variable.defs contains one ParameterDefinition with a type: 'Parameter'\n  // if variable is a local variable, variable.defs contains one Definition with a type: 'Variable'\n  // but if variable is the function arguments, variable.defs is just empty without other hint\n  const isLocalVariableOrParameter = variable.defs.length > 0;\n  const references = variable.references.filter(ref => !isFollowedByLengthProperty(ref));\n  if (!isLocalVariableOrParameter && references.length > 0) {\n    const firstReference = references[0];\n    const secondaryLocations = references.slice(1).map(ref => ref.identifier) as TSESTree.Node[];\n    context.report({\n      node: firstReference.identifier,\n      message: toEncodedMessage(\n        MESSAGE,\n        secondaryLocations,\n        Array(secondaryLocations.length).fill(SECONDARY_MESSAGE),\n      ),\n    });\n  }\n}\n\nfunction isFollowedByLengthProperty(reference: Scope.Reference): boolean {\n  const parent = (reference.identifier as TSESTree.Node).parent;\n  return (\n    !!parent &&\n    parent.type === 'MemberExpression' &&\n    parent.property.type === 'Identifier' &&\n    parent.property.name === 'length'\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3796/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { getMainFunctionTokenLocation } from 'eslint-plugin-sonarjs/lib/src/utils/locations';\nimport {\n  isArray,\n  isTypedArray,\n  RequiredParserServices,\n  isRequiredParserServices,\n  isMemberExpression,\n  RuleContext,\n  isIndexNotation,\n  isDotNotation,\n} from '../helpers';\n\nconst message = `Add a \"return\" statement to this callback.`;\n\nconst methodsWithCallback = [\n  'every',\n  'filter',\n  'find',\n  'findLast',\n  'findIndex',\n  'findLastIndex',\n  'map',\n  'flatMap',\n  'reduce',\n  'reduceRight',\n  'some',\n  'sort',\n  'toSorted',\n];\n\nfunction hasCallBackWithoutReturn(argument: estree.Node, services: RequiredParserServices) {\n  const checker = services.program.getTypeChecker();\n  const type = checker.getTypeAtLocation(\n    services.esTreeNodeToTSNodeMap.get(argument as TSESTree.Node),\n  );\n  const signatures = type.getCallSignatures();\n  return (\n    signatures.length > 0 &&\n    signatures.every(sig => checker.typeToString(sig.getReturnType()) === 'void')\n  );\n}\n\nexport const rule: Rule.RuleModule = {\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n\n    return {\n      'CallExpression[callee.type=\"MemberExpression\"]'(node: estree.Node) {\n        const callExpression = node as estree.CallExpression;\n        const args = callExpression.arguments;\n        const memberExpression = callExpression.callee as estree.MemberExpression;\n        const { object } = memberExpression;\n        const propName = extractPropName(memberExpression);\n        if (propName === null || args.length === 0) {\n          return;\n        }\n\n        if (\n          methodsWithCallback.includes(propName) &&\n          (isArray(object, services) || isTypedArray(object, services)) &&\n          hasCallBackWithoutReturn(args[0], services)\n        ) {\n          context.report({\n            message,\n            ...getNodeToReport(args[0], node, context),\n          });\n        } else if (\n          isMemberExpression(callExpression.callee, 'Array', 'from') &&\n          args.length > 1 &&\n          hasCallBackWithoutReturn(args[1], services)\n        ) {\n          context.report({\n            message,\n            ...getNodeToReport(args[1], node, context),\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction extractPropName(memberExpression: estree.MemberExpression) {\n  if (isDotNotation(memberExpression)) {\n    return memberExpression.property.name;\n  } else if (isIndexNotation(memberExpression)) {\n    return memberExpression.property.value;\n  } else {\n    return null;\n  }\n}\n\nfunction getNodeToReport(node: estree.Node, parent: estree.Node, context: Rule.RuleContext) {\n  if (\n    node.type === 'FunctionDeclaration' ||\n    node.type === 'FunctionExpression' ||\n    node.type === 'ArrowFunctionExpression'\n  ) {\n    return {\n      loc: getMainFunctionTokenLocation(\n        node as TSESTree.FunctionLike,\n        parent as TSESTree.Node,\n        context as unknown as RuleContext,\n      ),\n    };\n  }\n  return {\n    node,\n  };\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1528/javascript\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n  },\n  create(context: Rule.RuleContext) {\n    function checkNewExpression(node: estree.Node) {\n      const newExpression = node as estree.NewExpression;\n      if (newExpression.callee.type === 'Identifier' && newExpression.callee.name === 'Array') {\n        let message = 'Use either a literal or \"Array.from()\" instead of the \"Array\" constructor.';\n        let suggest: Rule.SuggestionReportDescriptor[] = [\n          {\n            desc: 'Replace with a literal',\n            fix: replaceWithLiteralFix(newExpression, context),\n          },\n        ];\n        if (\n          newExpression.arguments.length === 1 &&\n          newExpression.arguments[0].type === 'Literal' &&\n          typeof newExpression.arguments[0].value === 'number'\n        ) {\n          message = 'Use \"Array.from()\" instead of the \"Array\" constructor.';\n        }\n        if (newExpression.arguments.length === 1) {\n          suggest = [\n            {\n              desc: 'Replace with \"Array.from()\"',\n              fix: replaceWithArrayFromFix(newExpression, context),\n            },\n          ];\n        }\n        context.report({ node, message, suggest });\n      }\n    }\n\n    return {\n      NewExpression: checkNewExpression,\n    };\n  },\n};\n\nfunction replaceWithLiteralFix(\n  newExpression: estree.NewExpression,\n  context: Rule.RuleContext,\n): Rule.ReportFixer {\n  const argText = newExpression.arguments\n    .map((arg: estree.Node) => context.sourceCode.getText(arg))\n    .join(', ');\n  return fixer => fixer.replaceText(newExpression, `[${argText}]`);\n}\n\nfunction replaceWithArrayFromFix(\n  newExpression: estree.NewExpression,\n  context: Rule.RuleContext,\n): Rule.ReportFixer {\n  const argText = context.sourceCode.getText(newExpression.arguments[0]);\n  return fixer => fixer.replaceText(newExpression, `Array.from({length: ${argText}})`);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3524/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nconst MESSAGE_ADD_PARAMETER = 'Add parentheses around the parameter of this arrow function.';\nconst MESSAGE_REMOVE_PARAMETER = 'Remove parentheses around the parameter of this arrow function.';\nconst MESSAGE_ADD_BODY = 'Add curly braces and \"return\" to this arrow function body.';\nconst MESSAGE_REMOVE_BODY = 'Remove curly braces and \"return\" from this arrow function body.';\n\nexport type Options = [\n  {\n    requireParameterParentheses: boolean;\n    requireBodyBraces: boolean;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          requireParameterParentheses: {\n            type: 'boolean',\n          },\n          requireBodyBraces: {\n            type: 'boolean',\n          },\n        },\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const options = context.options[0] || {};\n    const requireParameterParentheses = !!options.requireParameterParentheses;\n    const requireBodyBraces = !!options.requireBodyBraces;\n    return {\n      ArrowFunctionExpression(node: estree.Node) {\n        const arrowFunction = node as estree.ArrowFunctionExpression;\n        checkParameters(context, requireParameterParentheses, arrowFunction);\n        checkBody(context, requireBodyBraces, arrowFunction);\n      },\n    };\n  },\n};\n\nfunction checkParameters(\n  context: Rule.RuleContext,\n  requireParameterParentheses: boolean,\n  arrowFunction: estree.ArrowFunctionExpression,\n) {\n  if (arrowFunction.params.length !== 1) {\n    return;\n  }\n  const parameter = arrowFunction.params[0];\n  // Looking at the closing parenthesis after the parameter to avoid problems with cases like\n  // `functionTakingCallbacks(x => {...})` where the opening parenthesis before `x` isn't part\n  // of the function literal\n  const tokenAfterParameter = context.sourceCode.getTokenAfter(parameter);\n  const hasParameterParentheses = tokenAfterParameter && tokenAfterParameter.value === ')';\n\n  if (requireParameterParentheses && !hasParameterParentheses) {\n    context.report({ node: parameter, message: MESSAGE_ADD_PARAMETER });\n  } else if (\n    !requireParameterParentheses &&\n    !hasGeneric(context, arrowFunction) &&\n    hasParameterParentheses\n  ) {\n    const arrowFunctionComments = context.sourceCode.getCommentsInside(arrowFunction);\n    const arrowFunctionBodyComments = context.sourceCode.getCommentsInside(arrowFunction.body);\n    // parameters comments inside parentheses are not available, so use the following subtraction:\n    const hasArrowFunctionParamsComments =\n      arrowFunctionComments.filter(comment => !arrowFunctionBodyComments.includes(comment)).length >\n      0;\n    if (\n      parameter.type === 'Identifier' &&\n      !hasArrowFunctionParamsComments &&\n      !(parameter as TSESTree.Identifier).typeAnnotation &&\n      !(arrowFunction as TSESTree.ArrowFunctionExpression).returnType\n    ) {\n      context.report({ node: parameter, message: MESSAGE_REMOVE_PARAMETER });\n    }\n  }\n}\n\nfunction hasGeneric(context: Rule.RuleContext, arrowFunction: estree.ArrowFunctionExpression) {\n  const offset = arrowFunction.async ? 1 : 0;\n  const firstTokenIgnoreAsync = context.sourceCode.getFirstToken(arrowFunction, offset);\n  return firstTokenIgnoreAsync && firstTokenIgnoreAsync.value === '<';\n}\n\nfunction checkBody(\n  context: Rule.RuleContext,\n  requireBodyBraces: boolean,\n  arrowFunction: estree.ArrowFunctionExpression,\n) {\n  const hasBodyBraces = arrowFunction.body.type === 'BlockStatement';\n  if (requireBodyBraces && !hasBodyBraces) {\n    context.report({ node: arrowFunction.body, message: MESSAGE_ADD_BODY });\n  } else if (!requireBodyBraces && hasBodyBraces) {\n    const statements = (arrowFunction.body as estree.BlockStatement).body;\n    if (statements.length === 1) {\n      const statement = statements[0];\n      if (isRemovableReturn(statement)) {\n        context.report({ node: arrowFunction.body, message: MESSAGE_REMOVE_BODY });\n      }\n    }\n  }\n}\n\nfunction isRemovableReturn(statement: estree.Statement) {\n  if (statement.type === 'ReturnStatement') {\n    const returnStatement = statement;\n    const returnExpression = returnStatement.argument;\n    if (returnExpression && returnExpression.type !== 'ObjectExpression') {\n      const location = returnExpression.loc;\n      return location && location.start.line === location.end.line;\n    }\n  }\n  return false;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport sonarjs from 'eslint-plugin-sonarjs';\nimport { CustomRule } from './custom-rule';\nimport { Rule } from 'eslint';\n\n/**\n * The internal _cognitive complexity_ custom rule\n *\n * The rule computes file-level cognitive complexity.\n */\nexport const rule: CustomRule = {\n  ruleId: 'internal-cognitive-complexity',\n  ruleModule: sonarjs.rules['cognitive-complexity'] as unknown as Rule.RuleModule,\n  ruleConfig: ['metric'],\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as estree from 'estree';\nimport { SourceCode } from 'eslint';\n\n/**\n * Visits the abstract syntax tree of an ESLint source code\n * @param sourceCode the source code to visit\n * @param callback a callback function invoked at each node visit\n */\nexport function visit(sourceCode: SourceCode, callback: (node: estree.Node) => void): void {\n  const stack: estree.Node[] = [sourceCode.ast];\n  while (stack.length) {\n    const node = stack.pop() as estree.Node;\n    callback(node);\n    stack.push(...childrenOf(node, sourceCode.visitorKeys).reverse());\n  }\n}\n\n/**\n * Returns the direct children of a node\n * @param node the node to get the children\n * @param visitorKeys the visitor keys provided by the source code\n * @returns the node children\n */\nexport function childrenOf(node: estree.Node, visitorKeys: SourceCode.VisitorKeys): estree.Node[] {\n  const keys = visitorKeys[node.type];\n  const children = [];\n  if (keys) {\n    for (const key of keys) {\n      /**\n       * A node's child may be a node or an array of nodes, e.g., `body` in `estree.Program`.\n       * If it's an array, we extract all the nodes from it; if not, we just add the node.\n       */\n      const child = (node as any)[key];\n      if (Array.isArray(child)) {\n        children.push(...child);\n      } else {\n        children.push(child);\n      }\n    }\n  }\n  return children.filter(Boolean);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport { isRequiredParserServices } from '../helpers';\n\n/**\n * Sanitizes a TypeScript ESLint rule\n *\n * TypeScript ESLint rules that relies on TypeScript's type system unconditionally assumes\n * that the type checker is always available. Linting a source code with such rules could\n * lead to a runtime error if that assumption turned out to be wrong for whatever reason.\n *\n * Aa TypeScript ESLint rule needs, therefore, to be sanitized in case its implementation\n * relies on type checking. The metadata of such a rule sets the `requiresTypeChecking`\n * property to `true`.\n *\n * The sanitization of a rule is nothing more than a decoration of its implementation. It\n * determines whether the rule uses type checking and checks whether type information is\n * available at runtime. If so, the execution of the rule proceeds; otherwise, it stops.\n *\n * @param rule a TypeScript ESLint rule to sanitize\n * @returns the sanitized rule\n */\nexport function sanitize(rule: Rule.RuleModule): Rule.RuleModule {\n  return {\n    ...(!!rule.meta && { meta: rule.meta }),\n    create(context: Rule.RuleContext) {\n      /**\n       * Overrides the rule behaviour if it requires TypeScript's type checker\n       * but type information is missing.\n       */\n      if (\n        rule.meta?.docs &&\n        (rule.meta.docs as any).requiresTypeChecking === true &&\n        !isRequiredParserServices(context.sourceCode.parserServices)\n      ) {\n        return {};\n      }\n      return rule.create(context);\n    },\n  };\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport tsEslint from '@typescript-eslint/eslint-plugin';\nimport { sanitize } from './sanitize';\n\n/**\n * TypeScript ESLint rules that rely on type information fail at runtime because\n * they unconditionally assume that TypeScript's type checker is available.\n */\nconst sanitized: Record<string, Rule.RuleModule> = {};\nfor (const ruleKey of Object.keys(tsEslint.rules)) {\n  sanitized[ruleKey] = sanitize(tsEslint.rules[ruleKey]);\n}\n\n/**\n * TypeScript ESLint rules.\n */\nexport const tsEslintRules = sanitized;\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport { getFullyQualifiedName, getImportDeclarations, getRequireCalls } from '.';\nimport * as estree from 'estree';\n\nexport namespace Supertest {\n  export function isImported(context: Rule.RuleContext): boolean {\n    return (\n      getRequireCalls(context).some(\n        r => r.arguments[0].type === 'Literal' && r.arguments[0].value === 'supertest',\n      ) || getImportDeclarations(context).some(i => i.source.value === 'supertest')\n    );\n  }\n\n  export function isAssertion(context: Rule.RuleContext, node: estree.Node) {\n    const fqn = extractFQNForCallExpression(context, node);\n\n    if (!fqn) {\n      return false;\n    }\n\n    const names = fqn.split('.');\n\n    /**\n     * supertest assertions look like `[supertest instance](...).[HTTP verb](...).expect(...)`, typically:\n     * `supertest(application).get('/foo').expect(200)`\n     * hence only the first and third values matter, the second one being an HTTP verb irrelevant for assertion detection\n     */\n    return names.length >= 3 && names[0] === 'supertest' && names[2] === 'expect';\n  }\n\n  function extractFQNForCallExpression(context: Rule.RuleContext, node: estree.Node) {\n    if (node.type !== 'CallExpression') {\n      return undefined;\n    }\n\n    return getFullyQualifiedName(context, node);\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2699/javascript\nimport { Rule, SourceCode } from 'eslint';\nimport * as estree from 'estree';\nimport { childrenOf } from '../../linter';\nimport { Chai, isFunctionCall, Mocha, resolveFunction, Sinon, Vitest } from '../helpers';\nimport { Supertest } from '../helpers/supertest';\n\n/**\n * We assume that the user is using a single assertion library per file,\n * this is why we are not saving if an assertion has been performed for\n * libX and the imported library was libY.\n */\nexport const rule: Rule.RuleModule = {\n  create(context: Rule.RuleContext) {\n    const visitedNodes: Set<estree.Node> = new Set();\n    const potentialIssues: Rule.ReportDescriptor[] = [];\n    return {\n      'CallExpression:exit': (node: estree.Node) => {\n        const testCase = Mocha.extractTestCase(node);\n        if (testCase !== null) {\n          checkAssertions(testCase, context, potentialIssues, visitedNodes);\n        }\n      },\n      'Program:exit': () => {\n        if (\n          Chai.isImported(context) ||\n          Sinon.isImported(context) ||\n          Vitest.isImported(context) ||\n          Supertest.isImported(context)\n        ) {\n          potentialIssues.forEach(issue => {\n            context.report(issue);\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction checkAssertions(\n  testCase: Mocha.TestCase,\n  context: Rule.RuleContext,\n  potentialIssues: Rule.ReportDescriptor[],\n  visitedNodes: Set<estree.Node>,\n) {\n  const { node, callback } = testCase;\n  const visitor = new TestCaseAssertionVisitor(context);\n  visitor.visit(context, callback.body, visitedNodes);\n  if (visitor.missingAssertions()) {\n    potentialIssues.push({ node, message: 'Add at least one assertion to this test case.' });\n  }\n}\n\nclass TestCaseAssertionVisitor {\n  private readonly visitorKeys: SourceCode.VisitorKeys;\n  private hasAssertions: boolean;\n\n  constructor(private readonly context: Rule.RuleContext) {\n    this.visitorKeys = context.sourceCode.visitorKeys;\n    this.hasAssertions = false;\n  }\n\n  visit(context: Rule.RuleContext, node: estree.Node, visitedNodes: Set<estree.Node>) {\n    if (visitedNodes.has(node)) {\n      return;\n    }\n    visitedNodes.add(node);\n    if (this.hasAssertions) {\n      return;\n    }\n    if (\n      Chai.isAssertion(context, node) ||\n      Sinon.isAssertion(context, node) ||\n      Vitest.isAssertion(context, node) ||\n      Supertest.isAssertion(context, node)\n    ) {\n      this.hasAssertions = true;\n      return;\n    }\n    if (isFunctionCall(node)) {\n      const { callee } = node;\n\n      if (callee.name === 'expect') {\n        this.hasAssertions = true;\n        return;\n      }\n\n      const functionDef = resolveFunction(this.context, callee);\n      if (functionDef) {\n        this.visit(context, functionDef.body, visitedNodes);\n      }\n    }\n    for (const child of childrenOf(node, this.visitorKeys)) {\n      this.visit(context, child, visitedNodes);\n    }\n  }\n\n  missingAssertions() {\n    return !this.hasAssertions;\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getFullyQualifiedName } from '../module';\nimport {\n  getProperty,\n  getUniqueWriteUsage,\n  getUniqueWriteUsageOrNode,\n  isIdentifier,\n  isLiteral,\n  isUndefined,\n  isUnresolved,\n  getValueOfExpression,\n} from '../ast';\n\nconst AWS_OPTIONS_ARGUMENT_POSITION = 2;\n\n/**\n * A symbol fully qualified name, e.g. `aws-cdk-lib.aws_sns.Topic`.\n */\nexport type FullyQualifiedName = string;\nexport type AwsCdkCallback = {\n  functionName?: string;\n  methods?: string[];\n  callExpression(expr: estree.CallExpression, ctx: Rule.RuleContext, fqn?: string): void;\n  newExpression?(expr: estree.NewExpression, ctx: Rule.RuleContext): void;\n};\nexport type AwsCdkConsumer =\n  | ((expr: estree.NewExpression, ctx: Rule.RuleContext) => void)\n  | AwsCdkCallback;\ntype AwsCdkNode = estree.NewExpression | estree.CallExpression;\n\ntype Values = { invalid?: any[]; valid?: any[]; case_insensitive?: boolean };\ntype ValuesByType = {\n  primitives?: Values;\n  fqns?: Values;\n  customChecker?: (ctx: Rule.RuleContext, node: estree.Node) => boolean;\n};\ntype NodeAndReport = {\n  node: estree.Node;\n  nodeToReport: estree.Node;\n};\n\nexport type AwsCdkConsumerMap = { [key: FullyQualifiedName]: AwsCdkConsumer };\n\n/**\n * A rule template for AWS CDK resources\n *\n * @param mapOrFactory callbacks to invoke when a new expression or a call expression matches a fully qualified name\n * @param metadata the rule metadata\n * @returns the instantiated rule module\n */\nexport function AwsCdkTemplate(\n  mapOrFactory: AwsCdkConsumerMap | ((ctx: Rule.RuleContext) => AwsCdkConsumerMap),\n  metadata: { meta: Rule.RuleMetaData } = { meta: {} },\n): Rule.RuleModule {\n  return {\n    ...metadata,\n    create(ctx: Rule.RuleContext) {\n      const consumers = typeof mapOrFactory === 'function' ? mapOrFactory(ctx) : mapOrFactory;\n      return {\n        'NewExpression, CallExpression'(node: AwsCdkNode) {\n          if (node.arguments.some(arg => arg.type === 'SpreadElement')) {\n            return;\n          }\n          for (const fqn in consumers) {\n            const normalizedExpectedFQN = normalizeFQN(fqn);\n            const callback = consumers[fqn];\n            if (typeof callback === 'object' || node.type === 'CallExpression') {\n              executeIfMatching(node, normalizedExpectedFQN!, callback);\n              continue;\n            }\n            const normalizedActualFQN = normalizeFQN(getFullyQualifiedName(ctx, node.callee));\n            if (normalizedActualFQN === normalizedExpectedFQN) {\n              callback(node, ctx);\n            }\n          }\n        },\n      };\n\n      function executeIfMatching(node: AwsCdkNode, expected: string, callback: AwsCdkConsumer) {\n        if (typeof callback === 'function') {\n          return;\n        }\n\n        const fqn = normalizeFQN(getFullyQualifiedName(ctx, node.callee));\n        if (node.type === 'NewExpression' && fqn === expected) {\n          callback.newExpression?.(node, ctx);\n        } else if (isMethodCall(callback, fqn, expected)) {\n          callback.callExpression(node, ctx, fqn);\n        }\n      }\n\n      function isMethodCall(callback: AwsCdkCallback, fqn: string | undefined, expected: string) {\n        if (callback.functionName) {\n          return fqn === `${expected}.${callback.functionName}`;\n        } else if (callback.methods && fqn?.startsWith(expected)) {\n          const methodNames = fqn.substring(expected.length).split('.');\n          const methods = callback.methods;\n          return methodNames.every(name => name === '' || methods.includes(name));\n        } else {\n          return fqn === expected;\n        }\n      }\n    },\n  };\n}\n\n/**\n * Get the messageId at the given position from an array. If a string is used\n * instead of an array, return it\n * @param messageId Array of messageIds or single string if only one messageId is used\n * @param pos\n */\nfunction getMessageAtPos(messageId: string | string[], pos = 0): string {\n  if (typeof messageId === 'string') {\n    return messageId;\n  }\n  return messageId[pos];\n}\n\n/**\n * Function to analyse arguments in a function and check for correct values. It will report if the\n * conditions are not met unless `silent = true`, in which case it will return boolean `true`\n * indicating conditions are not met.\n *\n * @param messageId Array of messageIds or single string if only one messageId is used. When an array is passed,\n *                  first messageId is used for omitted values and second for invalid values.\n * @param needsProps whether default (undefined) values are allowed or if it must be set\n * @param propertyName property name to search in the object (Array of strings for nested props)\n * @param values allowed or disallowed values\n * @param silent whether the function must report or just return conflicting Node when conditions are not met\n * @param position position of the argument to be analysed (3rd argument by default)\n */\nexport function AwsCdkCheckArguments(\n  messageId: string | string[],\n  needsProps: boolean,\n  propertyName: string | string[],\n  values?: ValuesByType,\n  silent = false,\n  position = AWS_OPTIONS_ARGUMENT_POSITION,\n) {\n  return (expr: estree.NewExpression, ctx: Rule.RuleContext): estree.Node | undefined => {\n    const argument = expr.arguments[position];\n\n    // Argument not found or undefined\n    if (!argument || isUndefined(argument)) {\n      if (needsProps) {\n        if (silent) {\n          return expr.callee;\n        }\n        ctx.report({ messageId: getMessageAtPos(messageId, 0), node: expr.callee });\n      }\n      return;\n    }\n\n    const properties = traverseProperties(\n      { node: argument, nodeToReport: argument },\n      typeof propertyName === 'string' ? [propertyName] : propertyName,\n      ctx,\n      getMessageAtPos(messageId, 0),\n      needsProps,\n      silent,\n    );\n\n    if (!Array.isArray(properties)) {\n      return properties;\n    }\n\n    if (!properties?.length) {\n      return;\n    }\n\n    for (const property of properties) {\n      const propertyValue = getUniqueWriteUsageOrNode(\n        ctx,\n        (property.node as estree.Property).value,\n        true,\n      );\n\n      if (isUnresolved(propertyValue, ctx)) {\n        continue;\n      }\n\n      /* Property is undefined or an empty array, which is the undefined equivalent\n         for properties with an array-form where we expect multiple nested values */\n      if (\n        isUndefined(propertyValue) ||\n        (propertyValue.type === 'ArrayExpression' && !propertyValue.elements.length)\n      ) {\n        if (needsProps) {\n          if (silent) {\n            return getNodeToReport(property);\n          }\n          ctx.report({ messageId: getMessageAtPos(messageId, 0), node: getNodeToReport(property) });\n        }\n        continue;\n      }\n\n      // Value is expected to be a primitive (string, number)\n      if (values?.primitives && disallowedValue(ctx, propertyValue, values.primitives)) {\n        if (silent) {\n          return getNodeToReport(property);\n        }\n        ctx.report({ messageId: getMessageAtPos(messageId, 1), node: getNodeToReport(property) });\n      }\n      // Value is expected to be an Identifier following a specific FQN\n      if (values?.fqns && disallowedFQNs(ctx, propertyValue, values.fqns)) {\n        if (silent) {\n          return getNodeToReport(property);\n        }\n        ctx.report({ messageId: getMessageAtPos(messageId, 1), node: getNodeToReport(property) });\n      }\n      // The value needs to be validated with a customized function\n      if (values?.customChecker && values.customChecker(ctx, propertyValue)) {\n        if (silent) {\n          return getNodeToReport(property);\n        }\n        ctx.report({ messageId: getMessageAtPos(messageId, 1), node: getNodeToReport(property) });\n      }\n    }\n  };\n}\n\nfunction getNodeToReport(property: NodeAndReport): estree.Node {\n  if (property.nodeToReport.type === 'Property') {\n    return property.nodeToReport.value;\n  }\n  return property.nodeToReport;\n}\n\n/**\n * Given an object expression, check for [nested] attributes. If at some level an\n * array is found, the search for next level properties will be performed on each element\n * of the array.\n *\n * @returns an array of Nodes which have the given property path.\n *\n * @param node node to look for the next property.\n * @param propertyPath pending property paths to traverse\n * @param ctx rule context\n * @param messageId messageId to report when path cannot be met and silent = `false`\n * @param needsProp whether missing (undefined) values are allowed or if it must be set\n * @param silent whether the function must report or just return conflicting Node when conditions are not met\n */\n\nfunction traverseProperties(\n  node: NodeAndReport,\n  propertyPath: string[],\n  ctx: Rule.RuleContext,\n  messageId: string,\n  needsProp: boolean,\n  silent: boolean,\n): NodeAndReport[] | estree.Node {\n  const [propertyName, ...nextElements] = propertyPath;\n  const properties: NodeAndReport[] = [];\n  const children: NodeAndReport[] = [];\n\n  if (isUnresolved(node.node, ctx)) {\n    return [];\n  }\n\n  const objExpr = getValueOfExpression(ctx, node.node, 'ObjectExpression', true);\n\n  if (objExpr === undefined) {\n    const arrayExpr = getValueOfExpression(ctx, node.node, 'ArrayExpression', true);\n\n    if (arrayExpr === undefined || !arrayExpr.elements.length) {\n      if (needsProp) {\n        if (silent) {\n          return node.nodeToReport;\n        }\n        ctx.report({ messageId, node: node.nodeToReport });\n      }\n      return [];\n    }\n\n    for (const element of arrayExpr.elements) {\n      const elemObjExpr = getValueOfExpression(ctx, element, 'ObjectExpression', true);\n      if (elemObjExpr && element) {\n        children.push({ node: elemObjExpr, nodeToReport: element });\n      }\n    }\n  } else {\n    children.push({ node: objExpr, nodeToReport: node.nodeToReport });\n  }\n\n  for (const child of children) {\n    const property = getProperty(child.node as estree.ObjectExpression, propertyName, ctx);\n    if (property === undefined) {\n      continue;\n    }\n\n    if (!property) {\n      if (needsProp) {\n        if (silent) {\n          return node.nodeToReport;\n        }\n        ctx.report({ messageId, node: node.nodeToReport });\n      }\n      continue;\n    }\n\n    if (nextElements.length) {\n      if (\n        child.node === child.nodeToReport &&\n        (child.node as estree.ObjectExpression).properties.includes(property)\n      ) {\n        child.nodeToReport = property.value;\n      }\n      child.node = property.value;\n      const nextElementChildren = traverseProperties(\n        child,\n        nextElements,\n        ctx,\n        messageId,\n        needsProp,\n        silent,\n      );\n      if (!Array.isArray(nextElementChildren)) {\n        return nextElementChildren;\n      }\n      properties.push(...nextElementChildren);\n    } else {\n      if (\n        child.node === child.nodeToReport &&\n        (child.node as estree.ObjectExpression).properties.includes(property)\n      ) {\n        child.nodeToReport = property;\n      }\n      child.node = property;\n      properties.push(child);\n    }\n  }\n  return properties;\n}\n\nfunction disallowedValue(ctx: Rule.RuleContext, node: estree.Node, values: Values): boolean {\n  const literal = getLiteralValue(ctx, node);\n  if (literal) {\n    if (values.valid?.length) {\n      const found = values.valid.some(value => {\n        if (values.case_insensitive && typeof literal.value === 'string') {\n          return value.toLowerCase() === literal.value.toLowerCase();\n        }\n        return value === literal.value;\n      });\n      if (!found) {\n        return true;\n      }\n    }\n    if (values.invalid?.length) {\n      const found = values.invalid.some(value => {\n        if (values.case_insensitive && typeof literal.value === 'string') {\n          return value.toLowerCase() === literal.value.toLowerCase();\n        }\n        return value === literal.value;\n      });\n      if (found) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function getLiteralValue(\n  ctx: Rule.RuleContext,\n  node: estree.Node,\n): estree.Literal | undefined {\n  if (isLiteral(node)) {\n    return node;\n  } else if (isIdentifier(node)) {\n    const usage = getUniqueWriteUsage(ctx, node.name, node);\n    if (usage) {\n      return getLiteralValue(ctx, usage);\n    }\n  }\n  return undefined;\n}\n\nfunction disallowedFQNs(ctx: Rule.RuleContext, node: estree.Node, values: Values) {\n  const normalizedFQN = normalizeFQN(getFullyQualifiedName(ctx, node));\n\n  if (\n    values.valid?.length &&\n    (!normalizedFQN || !values.valid.map(normalizeFQN).includes(normalizedFQN))\n  ) {\n    return true;\n  }\n  return normalizedFQN && values.invalid?.map(normalizeFQN).includes(normalizedFQN);\n}\n\nexport function normalizeFQN(fqn?: string | null) {\n  return fqn?.replace(/-/g, '_');\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Node } from 'estree';\nimport {\n  getProperty,\n  getUniqueWriteUsageOrNode,\n  isArrayExpression,\n  isBooleanLiteral,\n  isStringLiteral,\n  isUndefined,\n  StringLiteral,\n} from './ast';\nimport { Rule } from 'eslint';\n\nexport class Result {\n  constructor(\n    readonly ctx: Rule.RuleContext,\n    readonly node: Node,\n    readonly status: 'missing' | 'unknown' | 'found',\n  ) {}\n\n  get isFound() {\n    return this.status === 'found';\n  }\n\n  get isMissing() {\n    return this.status === 'missing';\n  }\n\n  get isTrue() {\n    return this.isFound && isBooleanLiteral(this.node) && this.node.value;\n  }\n\n  ofType(type: Node['type']) {\n    return this.isFound && this.node.type === type;\n  }\n\n  getArgument(position: number): Result {\n    if (!this.isFound) {\n      return this;\n    } else if (this.node.type !== 'NewExpression' && this.node.type !== 'CallExpression') {\n      return unknown(this.ctx, this.node);\n    }\n\n    const argument = this.node.arguments[position];\n    if (argument == null) {\n      return missing(this.ctx, this.node);\n    } else {\n      return getResultOfExpression(this.ctx, argument);\n    }\n  }\n\n  getProperty(propertyName: string): Result {\n    if (!this.isFound) {\n      return this;\n    } else if (this.node.type !== 'ObjectExpression') {\n      return unknown(this.ctx, this.node);\n    }\n\n    const property = getProperty(this.node, propertyName, this.ctx);\n    if (property === undefined) {\n      return unknown(this.ctx, this.node);\n    } else if (property === null) {\n      return missing(this.ctx, this.node);\n    } else {\n      return getResultOfExpression(this.ctx, property.value);\n    }\n  }\n\n  getMemberObject(): Result {\n    if (!this.isFound) {\n      return this;\n    } else if (this.node.type !== 'MemberExpression') {\n      return unknown(this.ctx, this.node);\n    } else {\n      return getResultOfExpression(this.ctx, this.node.object).filter(n => n.type !== 'Super');\n    }\n  }\n\n  findInArray(closure: (item: Result) => Result | null | undefined) {\n    if (!this.isFound) {\n      return this;\n    } else if (!isArrayExpression(this.node)) {\n      return unknown(this.ctx, this.node);\n    }\n\n    let isMissing = true;\n\n    for (const element of this.node.elements) {\n      const result = element != null ? closure(getResultOfExpression(this.ctx, element)) : null;\n      if (result?.isFound) {\n        return result;\n      }\n      isMissing &&= result?.isMissing ?? true;\n    }\n\n    return isMissing ? missing(this.ctx, this.node) : unknown(this.ctx, this.node);\n  }\n\n  everyStringLiteral(closure: (item: StringLiteral) => boolean) {\n    if (!this.isFound) {\n      return false;\n    } else if (isStringLiteral(this.node)) {\n      return closure(this.node);\n    } else if (!isArrayExpression(this.node)) {\n      return false;\n    }\n\n    for (const element of this.node.elements) {\n      const child = element == null ? null : getResultOfExpression(this.ctx, element);\n      if (!child?.isFound || !isStringLiteral(child.node) || !closure(child.node)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  asStringLiterals() {\n    if (!this.isFound) {\n      return [];\n    }\n\n    const values: StringLiteral[] = [];\n\n    if (isArrayExpression(this.node)) {\n      for (const arg of this.node.elements) {\n        const result = arg == null ? null : getResultOfExpression(this.ctx, arg);\n        if (result?.isFound && isStringLiteral(result.node)) {\n          values.push(result.node);\n        }\n      }\n    } else if (isStringLiteral(this.node)) {\n      values.push(this.node);\n    }\n\n    return values;\n  }\n\n  map<N extends Node, V>(closure: (node: N) => V | null): V | null {\n    return !this.isFound ? null : closure(this.node as N);\n  }\n\n  filter<N extends Node>(closure: (node: N, ctx: Rule.RuleContext) => boolean): Result {\n    if (!this.isFound) {\n      return this;\n    }\n    return !closure(this.node as N, this.ctx) ? unknown(this.ctx, this.node) : this;\n  }\n}\n\nfunction unknown(ctx: Rule.RuleContext, node: Node): Result {\n  return new Result(ctx, node, 'unknown');\n}\n\nfunction missing(ctx: Rule.RuleContext, node: Node): Result {\n  return new Result(ctx, node, 'missing');\n}\n\nfunction found(ctx: Rule.RuleContext, node: Node): Result {\n  return new Result(ctx, node, 'found');\n}\n\nexport function getResultOfExpression(ctx: Rule.RuleContext, node: Node): Result {\n  const value = getUniqueWriteUsageOrNode(ctx, node, true);\n  return isUndefined(value) ? missing(ctx, value) : found(ctx, value);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6333/javascript\n\nimport { Rule } from 'eslint';\nimport { AwsCdkCheckArguments, AwsCdkTemplate, normalizeFQN } from '../helpers/aws/cdk';\nimport { CallExpression, MemberExpression, NewExpression, Node } from 'estree';\nimport { getResultOfExpression } from '../helpers/result';\nimport {\n  getFullyQualifiedName,\n  getUniqueWriteUsageOrNode,\n  isMemberWithProperty,\n  isMethodCall,\n} from '../helpers';\n\nconst REST_API_PROPERTIES_POSITION = 2;\nconst RESOURCE_ADD_RESOURCE_PROPERTIES_POSITION = 1;\nconst RESOURCE_ADD_METHOD_POSITION = 2;\n\nconst REST_API_ROOT_PROPERTY = 'root';\n\nconst DEFAULT_METHOD_OPTIONS = 'defaultMethodOptions';\n\nconst AUTHORIZATION_TYPE = 'authorizationType';\nconst NONE_AUTHORIZATION_TYPE = 'aws_cdk_lib.aws_apigateway.AuthorizationType.NONE';\n\nconst ADD_METHOD = 'addMethod';\nconst ADD_RESOURCE = 'addResource';\nconst GET_RESOURCE = 'getResource';\nconst PARENT_RESOURCE = 'parentResource';\n\nconst messages = {\n  publicApi: 'Make sure that creating public APIs is safe here.',\n  omittedAuthorizationType:\n    'Omitting \"authorizationType\" disables authentication. Make sure it is safe here.',\n};\n\nconst apigatewayChecker = AwsCdkCheckArguments(\n  ['omittedAuthorizationType', 'publicApi'],\n  true,\n  AUTHORIZATION_TYPE,\n  { primitives: { invalid: ['NONE'] } },\n);\n\nfunction consumersFactory(ctx: Rule.RuleContext) {\n  const defaultAuthorizationTypes = new Map<Node, Node>();\n  const restApiDefaultCollector = defaultsCollector(REST_API_PROPERTIES_POSITION);\n  const resourceDefaultCollector = defaultsCollector(RESOURCE_ADD_RESOURCE_PROPERTIES_POSITION);\n\n  return {\n    'aws_cdk_lib.aws_apigateway.CfnMethod': apigatewayChecker,\n    'aws_cdk_lib.aws_apigatewayv2.CfnRoute': apigatewayChecker,\n    'aws_cdk_lib.aws_apigateway.RestApi': restApiDefaultCollector,\n    'aws_cdk_lib.aws_apigateway.RestApi.root': {\n      methods: [ADD_METHOD, ADD_RESOURCE, GET_RESOURCE, PARENT_RESOURCE],\n\n      callExpression: (expr: CallExpression, _ctx: Rule.RuleContext, fqn: string) => {\n        if (fqn.endsWith(ADD_METHOD)) {\n          checkResourceMethod(expr);\n        } else if (fqn.endsWith(ADD_RESOURCE)) {\n          resourceDefaultCollector(expr);\n        }\n      },\n    },\n  };\n\n  function checkResourceMethod(expr: CallExpression) {\n    const properties = getResultOfExpression(ctx, expr).getArgument(RESOURCE_ADD_METHOD_POSITION);\n    const authorizationType = properties.getProperty(AUTHORIZATION_TYPE);\n    if (authorizationType.isFound && isSensitiveAuthorizationType(authorizationType.node)) {\n      ctx.report({\n        messageId: 'publicApi',\n        node: authorizationType.node,\n      });\n    } else if (authorizationType.isMissing) {\n      const defaultAuthorizationType = getDefaultAuthorizationType(expr.callee);\n      if (defaultAuthorizationType == null) {\n        ctx.report({\n          messageId: 'omittedAuthorizationType',\n          node: authorizationType.node,\n        });\n      } else if (isSensitiveAuthorizationType(defaultAuthorizationType)) {\n        ctx.report({\n          messageId: 'publicApi',\n          node: expr,\n        });\n      }\n    }\n  }\n\n  function getDefaultAuthorizationType(node: Node): Node | undefined {\n    const resource = getUniqueWriteUsageOrNode(ctx, node);\n    if (defaultAuthorizationTypes.has(resource)) {\n      return defaultAuthorizationTypes.get(resource);\n    } else if (isDefaultFromCallee(resource)) {\n      return getDefaultAuthorizationType(resource.callee);\n    } else if (isDefaultFromObject(resource, ADD_METHOD, ADD_RESOURCE, REST_API_ROOT_PROPERTY)) {\n      return getDefaultAuthorizationType(resource.object);\n    } else {\n      return undefined;\n    }\n  }\n\n  function defaultsCollector(position: number) {\n    return (expr: NewExpression | CallExpression) => {\n      const properties = getResultOfExpression(ctx, expr).getArgument(position);\n      const defaultMethodOptions = properties.getProperty(DEFAULT_METHOD_OPTIONS);\n      const authorizationType = defaultMethodOptions.getProperty(AUTHORIZATION_TYPE);\n      if (authorizationType.isFound) {\n        defaultAuthorizationTypes.set(expr, authorizationType.node);\n      }\n    };\n  }\n\n  function isSensitiveAuthorizationType(node: Node) {\n    const fqn = normalizeFQN(getFullyQualifiedName(ctx, node));\n    return fqn === NONE_AUTHORIZATION_TYPE;\n  }\n}\n\nfunction isDefaultFromObject(node: Node, ...names: string[]): node is MemberExpression {\n  return node.type === 'MemberExpression' && names.some(name => isMemberWithProperty(node, name));\n}\n\nfunction isDefaultFromCallee(node: Node): node is CallExpression {\n  return node.type === 'CallExpression' && isMethodCall(node);\n}\n\nexport const rule: Rule.RuleModule = AwsCdkTemplate(consumersFactory, { meta: { messages } });\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6329/javascript\n\nimport { AwsCdkCheckArguments, AwsCdkTemplate } from '../helpers/aws/cdk';\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { Node } from 'estree';\nimport { getResultOfExpression, Result } from '../helpers/result';\nimport { getFullyQualifiedName, isCallingMethod } from '../helpers';\n\nconst PROPERTIES_POSITION = 2;\n\nconst PRIVATE_SUBNETS = [\n  'aws_cdk_lib.aws_ec2.SubnetType.PRIVATE_ISOLATED',\n  'aws_cdk_lib.aws_ec2.SubnetType.PRIVATE_WITH_EGRESS',\n  'aws_cdk_lib.aws_ec2.SubnetType.PRIVATE_WITH_NAT',\n];\n\nconst PUBLIC_SUBNET = 'aws_cdk_lib.aws_ec2.SubnetType.PUBLIC';\n\nexport const rule: Rule.RuleModule = AwsCdkTemplate(\n  {\n    'aws-cdk-lib.aws-ec2.Instance': AwsCdkCheckArguments(\n      'publicNetwork',\n      false,\n      ['vpcSubnets', 'subnetType'],\n      { fqns: { invalid: [PUBLIC_SUBNET] } },\n    ),\n    'aws-cdk-lib.aws-ec2.CfnInstance': checkCfnInstance,\n    'aws-cdk-lib.aws_rds.DatabaseInstance': checkDatabaseInstance,\n    'aws-cdk-lib.aws_rds.CfnDBInstance': AwsCdkCheckArguments(\n      'publicNetwork',\n      false,\n      'publiclyAccessible',\n      { primitives: { invalid: [true] } },\n    ),\n    'aws-cdk-lib.aws_dms.CfnReplicationInstance': AwsCdkCheckArguments(\n      'publicNetwork',\n      true,\n      'publiclyAccessible',\n      { primitives: { invalid: [true] } },\n    ),\n  },\n  {\n    meta: {\n      messages: {\n        publicNetwork: 'Make sure allowing public network access is safe here.',\n      },\n    },\n  },\n);\n\nfunction checkCfnInstance(expr: estree.NewExpression, ctx: Rule.RuleContext) {\n  const properties = getResultOfExpression(ctx, expr).getArgument(PROPERTIES_POSITION);\n  const networkInterfaces = properties.getProperty('networkInterfaces');\n  const sensitiveNetworkInterface = networkInterfaces.findInArray(result =>\n    getSensitiveNetworkInterface(result, ctx),\n  );\n\n  if (sensitiveNetworkInterface.isFound) {\n    ctx.report({\n      messageId: 'publicNetwork',\n      node: sensitiveNetworkInterface.node,\n    });\n  }\n}\n\nfunction getSensitiveNetworkInterface(networkInterface: Result, ctx: Rule.RuleContext) {\n  const associatePublicIpAddress = networkInterface.getProperty('associatePublicIpAddress');\n  if (associatePublicIpAddress.isTrue && !isFoundPrivateSubnet(networkInterface, ctx)) {\n    return associatePublicIpAddress;\n  } else {\n    return null;\n  }\n}\n\nfunction isFoundPrivateSubnet(networkInterface: Result, ctx: Rule.RuleContext) {\n  const subnetId = networkInterface.getProperty('subnetId');\n  const selectSubnetsCall = getSelectSubnetsCall(subnetId);\n  const argument = selectSubnetsCall.getArgument(0);\n  const subnetType = argument.getProperty('subnetType');\n  return subnetType.isFound && isPrivateSubnet(subnetType.node, ctx);\n}\n\nfunction getSelectSubnetsCall(subnetId: Result) {\n  let current = subnetId;\n  while (current.ofType('MemberExpression')) {\n    current = current.getMemberObject();\n  }\n  return current.filter(n => n.type === 'CallExpression' && isCallingMethod(n, 1, 'selectSubnets'));\n}\n\nfunction checkDatabaseInstance(expr: estree.NewExpression, ctx: Rule.RuleContext) {\n  const properties = getResultOfExpression(ctx, expr).getArgument(PROPERTIES_POSITION);\n  const vpcSubnets = properties.getProperty('vpcSubnets');\n  const subnetType = vpcSubnets.getProperty('subnetType');\n  const publiclyAccessible = properties.getProperty('publiclyAccessible');\n\n  if (subnetType.isFound && isPrivateSubnet(subnetType.node, ctx)) {\n    return;\n  }\n\n  if (publiclyAccessible.isTrue && subnetType.isFound && isPublicSubnet(subnetType.node, ctx)) {\n    ctx.report({\n      messageId: 'publicNetwork',\n      node: publiclyAccessible.node,\n    });\n  } else if (\n    !publiclyAccessible.isFound &&\n    subnetType.isFound &&\n    isPublicSubnet(subnetType.node, ctx)\n  ) {\n    ctx.report({\n      messageId: 'publicNetwork',\n      node: subnetType.node,\n    });\n  }\n}\n\nfunction isPrivateSubnet(node: Node, ctx: Rule.RuleContext) {\n  return PRIVATE_SUBNETS.some(net => net === getFullyQualifiedName(ctx, node)?.replace(/-/g, '_'));\n}\n\nfunction isPublicSubnet(node: Node, ctx: Rule.RuleContext) {\n  return PUBLIC_SUBNET === getFullyQualifiedName(ctx, node)?.replace(/-/g, '_');\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6275/javascript\n\nimport { Rule } from 'eslint';\nimport { AwsCdkCheckArguments, AwsCdkTemplate } from '../helpers/aws/cdk';\n\nexport const rule: Rule.RuleModule = AwsCdkTemplate(\n  {\n    'aws-cdk-lib.aws-ec2.Volume': AwsCdkCheckArguments(\n      ['encryptionOmitted', 'encryptionDisabled'],\n      true,\n      'encrypted',\n      { primitives: { invalid: [false] } },\n    ),\n  },\n  {\n    meta: {\n      messages: {\n        encryptionDisabled: 'Make sure that using unencrypted volumes is safe here.',\n        encryptionOmitted:\n          'Omitting \"encrypted\" disables volumes encryption. Make sure it is safe here.',\n      },\n    },\n  },\n);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6332/javascript\n\nimport { Rule } from 'eslint';\nimport { AwsCdkCheckArguments, AwsCdkTemplate } from '../helpers/aws/cdk';\n\nexport const rule: Rule.RuleModule = AwsCdkTemplate(\n  {\n    'aws-cdk-lib.aws_efs.FileSystem': AwsCdkCheckArguments(\n      'FSEncryptionDisabled',\n      false,\n      'encrypted',\n      { primitives: { invalid: [false] } },\n    ),\n    'aws-cdk-lib.aws_efs.CfnFileSystem': AwsCdkCheckArguments(\n      ['CFSEncryptionOmitted', 'CFSEncryptionDisabled'],\n      true,\n      'encrypted',\n      { primitives: { valid: [true] } },\n    ),\n  },\n  {\n    meta: {\n      messages: {\n        FSEncryptionDisabled: 'Make sure that using unencrypted file systems is safe here.',\n        CFSEncryptionDisabled: 'Make sure that using unencrypted file systems is safe here.',\n        CFSEncryptionOmitted:\n          'Omitting \"encrypted\" disables EFS encryption. Make sure it is safe here.',\n      },\n    },\n  },\n);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { CallExpression, NewExpression, Node } from 'estree';\nimport { Rule } from 'eslint';\nimport { AwsCdkTemplate, normalizeFQN } from './cdk';\nimport { SONAR_RUNTIME } from '../../../linter/parameters';\nimport { getResultOfExpression, Result } from '../result';\nimport { flattenArgs, isStringLiteral, StringLiteral } from '../ast';\nimport { getFullyQualifiedName } from '../module';\n\nexport interface PolicyCheckerOptions {\n  effect: {\n    property: string;\n    type: 'FullyQualifiedName' | 'string';\n    allowValue: string;\n  };\n  actions: {\n    property: string;\n    anyValues?: string[];\n  };\n  resources: {\n    property: string;\n  };\n  conditions: {\n    property: string;\n  };\n  principals: {\n    property: string;\n    type: 'FullyQualifiedName' | 'json';\n    anyValues?: string[];\n  };\n}\n\ntype StatementChecker = (expr: Node, ctx: Rule.RuleContext, options: PolicyCheckerOptions) => void;\n\nconst PROPERTIES_POSITION = 0;\n\nconst POLICY_DOCUMENT_STATEMENT_PROPERTY = 'Statement';\n\nconst ARN_PRINCIPAL = 'aws_cdk_lib.aws_iam.ArnPrincipal';\nconst STAR_PRINCIPAL = 'aws_cdk_lib.aws_iam.StarPrincipal';\nconst ANY_PRINCIPAL = 'aws_cdk_lib.aws_iam.AnyPrincipal';\n\nconst ANY_LITERAL = '*';\n\nconst PROPERTIES_OPTIONS: PolicyCheckerOptions = {\n  effect: {\n    property: 'effect',\n    type: 'FullyQualifiedName',\n    allowValue: 'aws_cdk_lib.aws_iam.Effect.ALLOW',\n  },\n  actions: {\n    property: 'actions',\n  },\n  resources: {\n    property: 'resources',\n  },\n  conditions: {\n    property: 'conditions',\n  },\n  principals: {\n    property: 'principals',\n    type: 'FullyQualifiedName',\n    anyValues: [STAR_PRINCIPAL, ANY_PRINCIPAL, ARN_PRINCIPAL],\n  },\n};\n\nconst JSON_OPTIONS: PolicyCheckerOptions = {\n  effect: {\n    property: 'Effect',\n    type: 'string',\n    allowValue: 'Allow',\n  },\n  actions: {\n    property: 'Action',\n  },\n  resources: {\n    property: 'Resource',\n  },\n  conditions: {\n    property: 'Condition',\n  },\n  principals: {\n    property: 'Principal',\n    type: 'json',\n  },\n};\n\nexport function AwsIamPolicyTemplate(statementChecker: StatementChecker) {\n  return AwsCdkTemplate(\n    {\n      'aws-cdk-lib.aws-iam.PolicyStatement': {\n        newExpression: policyStatementChecker(statementChecker, PROPERTIES_OPTIONS),\n        functionName: 'fromJson',\n        callExpression: policyStatementChecker(statementChecker, JSON_OPTIONS),\n      },\n      'aws-cdk-lib.aws-iam.PolicyDocument': {\n        functionName: 'fromJson',\n        callExpression: policyDocumentChecker(statementChecker, JSON_OPTIONS),\n      },\n    },\n    {\n      meta: {\n        schema: [\n          {\n            // internal parameter for rules having secondary locations\n            enum: [SONAR_RUNTIME],\n          },\n        ],\n      },\n    },\n  );\n}\n\nexport function getSensitiveEffect(\n  properties: Result,\n  ctx: Rule.RuleContext,\n  options: PolicyCheckerOptions,\n) {\n  const effect = properties.getProperty(options.effect.property);\n  return effect.filter(node => {\n    if (options.effect.type === 'FullyQualifiedName') {\n      const fullyQualifiedName = normalizeFQN(getFullyQualifiedName(ctx, node));\n      return fullyQualifiedName === options.effect.allowValue;\n    } else {\n      return isStringLiteral(node) && node.value === options.effect.allowValue;\n    }\n  });\n}\n\nexport function isAnyLiteral(literal: StringLiteral) {\n  return literal.value === ANY_LITERAL;\n}\n\nfunction policyDocumentChecker(statementChecker: StatementChecker, options: PolicyCheckerOptions) {\n  return (expr: CallExpression, ctx: Rule.RuleContext) => {\n    const call = getResultOfExpression(ctx, expr);\n    const properties = call.getArgument(PROPERTIES_POSITION);\n    const statements = properties.getProperty(POLICY_DOCUMENT_STATEMENT_PROPERTY);\n\n    if (statements.isFound) {\n      for (const node of flattenArgs(ctx, [statements.node])) {\n        statementChecker(node, ctx, options);\n      }\n    }\n  };\n}\n\nfunction policyStatementChecker(statementChecker: StatementChecker, options: PolicyCheckerOptions) {\n  return (expr: CallExpression | NewExpression, ctx: Rule.RuleContext) => {\n    const call = getResultOfExpression(ctx, expr);\n    const properties = call.getArgument(PROPERTIES_POSITION);\n\n    if (properties.isFound) {\n      statementChecker(properties.node, ctx, options);\n    }\n  };\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6302/javascript\n\nimport { Rule } from 'eslint';\nimport { Node } from 'estree';\nimport { toEncodedMessage } from '../helpers';\nimport { getResultOfExpression, Result } from '../helpers/result';\nimport {\n  AwsIamPolicyTemplate,\n  getSensitiveEffect,\n  isAnyLiteral,\n  PolicyCheckerOptions,\n} from '../helpers/aws/iam';\n\nconst MESSAGES = {\n  message: 'Make sure granting all privileges is safe here.',\n  secondary: 'Related effect',\n};\n\nexport const rule: Rule.RuleModule = AwsIamPolicyTemplate(allPrivilegesStatementChecker);\n\nfunction allPrivilegesStatementChecker(\n  expr: Node,\n  ctx: Rule.RuleContext,\n  options: PolicyCheckerOptions,\n) {\n  const properties = getResultOfExpression(ctx, expr);\n  const effect = getSensitiveEffect(properties, ctx, options);\n  const action = getSensitiveAction(properties, options);\n\n  if (effect.isMissing && action) {\n    ctx.report({\n      message: toEncodedMessage(MESSAGES.message),\n      node: action,\n    });\n  } else if (effect.isFound && action) {\n    ctx.report({\n      message: toEncodedMessage(MESSAGES.message, [effect.node], [MESSAGES.secondary]),\n      node: action,\n    });\n  }\n}\n\nfunction getSensitiveAction(properties: Result, options: PolicyCheckerOptions) {\n  return getActionLiterals(properties, options).find(isAnyLiteral);\n}\n\nfunction getActionLiterals(properties: Result, options: PolicyCheckerOptions) {\n  return properties.getProperty(options.actions.property).asStringLiterals();\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6304/javascript\n\nimport { Rule } from 'eslint';\nimport { Node } from 'estree';\nimport { StringLiteral, toEncodedMessage } from '../helpers';\nimport { getResultOfExpression, Result } from '../helpers/result';\nimport {\n  AwsIamPolicyTemplate,\n  getSensitiveEffect,\n  isAnyLiteral,\n  PolicyCheckerOptions,\n} from '../helpers/aws/iam';\n\nconst MESSAGES = {\n  message: 'Make sure granting access to all resources is safe here.',\n  secondary: 'Related effect',\n};\n\nconst KMS_PREFIX = 'kms:';\n\nexport const rule: Rule.RuleModule = AwsIamPolicyTemplate(allResourcesAccessibleStatementCheck);\n\nfunction allResourcesAccessibleStatementCheck(\n  expr: Node,\n  ctx: Rule.RuleContext,\n  options: PolicyCheckerOptions,\n) {\n  const properties = getResultOfExpression(ctx, expr);\n  const effect = getSensitiveEffect(properties, ctx, options);\n  const resource = getSensitiveResource(properties, options);\n\n  if (isException(properties, options)) {\n    return;\n  }\n\n  if (effect.isMissing && resource) {\n    ctx.report({\n      message: toEncodedMessage(MESSAGES.message),\n      node: resource,\n    });\n  } else if (effect.isFound && resource) {\n    ctx.report({\n      message: toEncodedMessage(MESSAGES.message, [effect.node], [MESSAGES.secondary]),\n      node: resource,\n    });\n  }\n}\n\nfunction isException(properties: Result, options: PolicyCheckerOptions) {\n  return properties.getProperty(options.actions.property).everyStringLiteral(isKmsAction);\n}\n\nfunction isKmsAction(action: StringLiteral) {\n  return action.value.startsWith(KMS_PREFIX);\n}\n\nfunction getSensitiveResource(properties: Result, options: PolicyCheckerOptions) {\n  return getSensitiveResources(properties, options).find(isAnyLiteral);\n}\n\nfunction getSensitiveResources(properties: Result, options: PolicyCheckerOptions) {\n  return properties.getProperty(options.resources.property).asStringLiterals();\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6317/javascript\n\nimport { Rule } from 'eslint';\nimport { Node } from 'estree';\nimport { StringLiteral, toEncodedMessage } from '../helpers';\nimport { getResultOfExpression, Result } from '../helpers/result';\nimport { AwsIamPolicyTemplate, getSensitiveEffect, PolicyCheckerOptions } from '../helpers/aws/iam';\n\nconst SENSITIVE_RESOURCE = /^(\\*|arn:[^:]*:[^:]*:[^:]*:[^:]*:(role|user|group)\\/\\*)$/;\n\nconst SENSITIVE_ACTIONS = [\n  'cloudformation:CreateStack',\n  'datapipeline:CreatePipeline',\n  'datapipeline:PutPipelineDefinition',\n  'ec2:RunInstances',\n  'glue:CreateDevEndpoint',\n  'glue:UpdateDevEndpoint',\n  'iam:AddUserToGroup',\n  'iam:AttachGroupPolicy',\n  'iam:AttachRolePolicy',\n  'iam:AttachUserPolicy',\n  'iam:CreateAccessKey',\n  'iam:CreateLoginProfile',\n  'iam:CreatePolicyVersion',\n  'iam:PassRole',\n  'iam:PutGroupPolicy',\n  'iam:PutRolePolicy',\n  'iam:PutUserPolicy',\n  'iam:SetDefaultPolicyVersion',\n  'iam:UpdateAssumeRolePolicy',\n  'iam:UpdateLoginProfile',\n  'lambda:AddPermission',\n  'lambda:CreateEventSourceMapping',\n  'lambda:CreateFunction',\n  'lambda:InvokeFunction',\n  'lambda:UpdateFunctionCode',\n  'sts:AssumeRole',\n];\n\nconst MESSAGES = {\n  message: (attackVectorName: string) =>\n    `This policy is vulnerable to the \"${attackVectorName}\" privilege escalation vector. ` +\n    'Remove permissions or restrict the set of resources they apply to.',\n  secondary: 'Permissions are granted on all resources.',\n};\n\nexport const rule: Rule.RuleModule = AwsIamPolicyTemplate(privilegeEscalationStatementChecker);\n\nfunction privilegeEscalationStatementChecker(\n  expr: Node,\n  ctx: Rule.RuleContext,\n  options: PolicyCheckerOptions,\n) {\n  const properties = getResultOfExpression(ctx, expr);\n  const effect = getSensitiveEffect(properties, ctx, options);\n  const resource = getSensitiveResource(properties, options);\n  const action = getSensitiveAction(properties, options);\n\n  if (\n    !hasExceptionProperties(properties, options) &&\n    (effect.isFound || effect.isMissing) &&\n    resource &&\n    action\n  ) {\n    ctx.report({\n      message: toEncodedMessage(MESSAGES.message(action.value), [action], [MESSAGES.secondary]),\n      node: resource,\n    });\n  }\n}\n\nfunction getSensitiveAction(properties: Result, options: PolicyCheckerOptions) {\n  const actions = properties.getProperty(options.actions.property);\n  return actions.asStringLiterals().find(isSensitiveAction);\n}\n\nfunction getSensitiveResource(properties: Result, options: PolicyCheckerOptions) {\n  const resources = properties.getProperty(options.resources.property);\n  return resources.asStringLiterals().find(isSensitiveResource);\n}\n\nfunction isSensitiveAction(action: StringLiteral) {\n  return SENSITIVE_ACTIONS.includes(action.value);\n}\n\nfunction isSensitiveResource(resource: StringLiteral) {\n  return SENSITIVE_RESOURCE.test(resource.value);\n}\n\nfunction hasExceptionProperties(properties: Result, options: PolicyCheckerOptions) {\n  const exceptionProperties = [options.principals.property, options.conditions.property];\n  return exceptionProperties.some(prop => !properties.getProperty(prop).isMissing);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6270/javascript\n\nimport { Rule } from 'eslint';\nimport { NewExpression, Node } from 'estree';\nimport {\n  getFullyQualifiedName,\n  isArrayExpression,\n  isStringLiteral,\n  StringLiteral,\n  toEncodedMessage,\n} from '../helpers';\nimport { getResultOfExpression, Result } from '../helpers/result';\nimport {\n  AwsIamPolicyTemplate,\n  getSensitiveEffect,\n  isAnyLiteral,\n  PolicyCheckerOptions,\n} from '../helpers/aws/iam';\nimport { normalizeFQN } from '../helpers/aws/cdk';\n\nconst AWS_PRINCIPAL_PROPERTY = 'AWS';\n\nconst ARN_PRINCIPAL = 'aws_cdk_lib.aws_iam.ArnPrincipal';\n\nconst MESSAGES = {\n  message: 'Make sure granting public access is safe here.',\n  secondary: 'Related effect',\n};\n\nexport const rule: Rule.RuleModule = AwsIamPolicyTemplate(publicAccessStatementChecker);\n\nfunction publicAccessStatementChecker(\n  expr: Node,\n  ctx: Rule.RuleContext,\n  options: PolicyCheckerOptions,\n) {\n  const properties = getResultOfExpression(ctx, expr);\n  const effect = getSensitiveEffect(properties, ctx, options);\n  const principal = getSensitivePrincipal(properties, ctx, options);\n\n  if (effect.isMissing && principal) {\n    ctx.report({\n      message: toEncodedMessage(MESSAGES.message),\n      node: principal,\n    });\n  } else if (effect.isFound && principal) {\n    ctx.report({\n      message: toEncodedMessage(MESSAGES.message, [effect.node], [MESSAGES.secondary]),\n      node: principal,\n    });\n  }\n}\n\nfunction getSensitivePrincipal(\n  properties: Result,\n  ctx: Rule.RuleContext,\n  options: PolicyCheckerOptions,\n) {\n  const principal = properties.getProperty(options.principals.property);\n  if (!principal.isFound) {\n    return null;\n  } else if (options.principals.type === 'FullyQualifiedName') {\n    return getSensitivePrincipalFromFullyQualifiedName(ctx, principal.node, options);\n  } else {\n    return getSensitivePrincipalFromJson(ctx, principal.node);\n  }\n}\n\nfunction getSensitivePrincipalFromFullyQualifiedName(\n  ctx: Rule.RuleContext,\n  node: Node,\n  options: PolicyCheckerOptions,\n) {\n  return getPrincipalNewExpressions(node).find(expr =>\n    isSensitivePrincipalNewExpression(ctx, expr, options),\n  );\n}\n\nfunction getPrincipalNewExpressions(node: Node) {\n  const newExpressions: NewExpression[] = [];\n\n  if (isArrayExpression(node)) {\n    for (const element of node.elements) {\n      if (element?.type === 'NewExpression') {\n        newExpressions.push(element);\n      }\n    }\n  }\n\n  return newExpressions;\n}\n\nfunction getSensitivePrincipalFromJson(ctx: Rule.RuleContext, node: Node) {\n  return getPrincipalLiterals(node, ctx).find(isAnyLiteral);\n}\n\nfunction isSensitivePrincipalNewExpression(\n  ctx: Rule.RuleContext,\n  newExpression: NewExpression,\n  options: PolicyCheckerOptions,\n) {\n  return (options.principals.anyValues ?? []).some(anyValue => {\n    if (anyValue === ARN_PRINCIPAL) {\n      const argument = newExpression.arguments[0];\n      return isStringLiteral(argument) && isAnyLiteral(argument);\n    } else {\n      return anyValue === normalizeFQN(getFullyQualifiedName(ctx, newExpression.callee));\n    }\n  });\n}\n\nfunction getPrincipalLiterals(node: Node, ctx: Rule.RuleContext) {\n  const literals: StringLiteral[] = [];\n\n  if (isStringLiteral(node)) {\n    literals.push(node);\n  } else {\n    const awsLiterals = getResultOfExpression(ctx, node)\n      .getProperty(AWS_PRINCIPAL_PROPERTY)\n      .asStringLiterals();\n    literals.push(...awsLiterals);\n  }\n\n  return literals;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6308/javascript\n\nimport { Rule } from 'eslint';\nimport { AwsCdkTemplate } from '../helpers/aws/cdk';\nimport { NewExpression, Node } from 'estree';\nimport { getFullyQualifiedName, isBooleanLiteral, isStringLiteral } from '../helpers';\nimport { getResultOfExpression } from '../helpers/result';\n\nconst DOMAIN_PROPS_POSITION = 2;\nconst ENABLED_PROPERTY = 'enabled';\nconst OPEN_SEARCH = 'OpenSearch';\nconst ELASTIC_SEARCH = 'Elasticsearch';\n\ninterface DomainCheckerOptions {\n  encryptionProperty: string;\n  version: {\n    valueType: 'ElasticsearchVersion' | 'EngineVersion' | 'string';\n    property: string;\n    defaultValue: typeof OPEN_SEARCH | typeof ELASTIC_SEARCH;\n  };\n}\n\nexport const rule: Rule.RuleModule = AwsCdkTemplate(\n  {\n    'aws-cdk-lib.aws-opensearchservice.Domain': domainChecker({\n      encryptionProperty: 'encryptionAtRest',\n      version: {\n        valueType: 'EngineVersion',\n        property: 'version',\n        defaultValue: OPEN_SEARCH,\n      },\n    }),\n    'aws-cdk-lib.aws-opensearchservice.CfnDomain': domainChecker({\n      encryptionProperty: 'encryptionAtRestOptions',\n      version: {\n        valueType: 'string',\n        property: 'engineVersion',\n        defaultValue: OPEN_SEARCH,\n      },\n    }),\n    'aws-cdk-lib.aws-elasticsearch.Domain': domainChecker({\n      encryptionProperty: 'encryptionAtRest',\n      version: {\n        valueType: 'ElasticsearchVersion',\n        property: 'version',\n        defaultValue: ELASTIC_SEARCH,\n      },\n    }),\n    'aws-cdk-lib.aws-elasticsearch.CfnDomain': domainChecker({\n      encryptionProperty: 'encryptionAtRestOptions',\n      version: {\n        valueType: 'string',\n        property: 'elasticsearchVersion',\n        defaultValue: ELASTIC_SEARCH,\n      },\n    }),\n  },\n  {\n    meta: {\n      messages: {\n        encryptionDisabled: 'Make sure that using unencrypted {{search}} domains is safe here.',\n        encryptionOmitted:\n          'Omitting {{encryptionPropertyName}} causes encryption of data at rest to be ' +\n          'disabled for this {{search}} domain. Make sure it is safe here.',\n      },\n    },\n  },\n);\n\nfunction domainChecker(options: DomainCheckerOptions) {\n  return (expr: NewExpression, ctx: Rule.RuleContext) => {\n    const call = getResultOfExpression(ctx, expr);\n    const argument = call.getArgument(DOMAIN_PROPS_POSITION);\n    const encryption = argument.getProperty(options.encryptionProperty);\n    const version = argument.getProperty(options.version.property);\n    const isEnabled = encryption.getProperty(ENABLED_PROPERTY);\n    const search = version.map(getSearchEngine) ?? options.version.defaultValue;\n\n    if (isEnabled.isMissing) {\n      ctx.report({\n        messageId: 'encryptionOmitted',\n        node: isEnabled.node,\n        data: {\n          encryptionPropertyName: options.encryptionProperty,\n          search,\n        },\n      });\n    } else if (isEnabled.isFound && isUnencrypted(isEnabled.node)) {\n      ctx.report({\n        messageId: 'encryptionDisabled',\n        node: isEnabled.node,\n        data: {\n          search,\n        },\n      });\n    }\n\n    function isUnencrypted(node: Node) {\n      return isBooleanLiteral(node) && !node.value;\n    }\n\n    function getSearchEngine(node: Node) {\n      let version: string | null;\n\n      if (options.version.valueType === 'string' && isStringLiteral(node)) {\n        version = `${options.version.property}.${node.value}`;\n      } else {\n        version = getFullyQualifiedName(ctx, node);\n      }\n\n      for (const name of version?.toLowerCase().split('.').reverse() ?? []) {\n        if (name.includes('opensearch')) {\n          return OPEN_SEARCH;\n        } else if (name.includes('elasticsearch')) {\n          return ELASTIC_SEARCH;\n        }\n      }\n\n      return null;\n    }\n  };\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6303/javascript\n\nimport { Rule } from 'eslint';\nimport {\n  getFullyQualifiedName,\n  getProperty,\n  getUniqueWriteUsageOrNode,\n  getValueOfExpression,\n  isFalseLiteral,\n  isUndefined,\n} from '../helpers';\n\nimport * as estree from 'estree';\nimport { AwsCdkTemplate, normalizeFQN } from '../helpers/aws/cdk';\n\nconst CfnDBCluster = 'CfnDBCluster';\nconst CfnDBInstance = 'CfnDBInstance';\nconst DatabaseCluster = 'DatabaseCluster';\nconst DatabaseClusterFromSnapshot = 'DatabaseClusterFromSnapshot';\nconst DatabaseInstance = 'DatabaseInstance';\nconst DatabaseInstanceReadReplica = 'DatabaseInstanceReadReplica';\n\nexport const rule: Rule.RuleModule = AwsCdkTemplate(\n  {\n    'aws-cdk-lib.aws_rds.CfnDBCluster': checkStorage(CfnDBCluster),\n    'aws-cdk-lib.aws_rds.CfnDBInstance': checkStorage(CfnDBInstance),\n    'aws-cdk-lib.aws_rds.DatabaseCluster': checkStorage(DatabaseCluster),\n    'aws-cdk-lib.aws_rds.DatabaseClusterFromSnapshot': checkStorage(DatabaseClusterFromSnapshot),\n    'aws-cdk-lib.aws_rds.DatabaseInstance': checkStorage(DatabaseInstance),\n    'aws-cdk-lib.aws_rds.DatabaseInstanceReadReplica': checkStorage(DatabaseInstanceReadReplica),\n  },\n  {\n    meta: {\n      messages: {\n        unsafe: 'Make sure that using unencrypted storage is safe here.',\n        omitted: 'Omitting storageEncrypted disables RDS encryption. Make sure it is safe here.',\n      },\n    },\n  },\n);\n\nconst PROPS_ARGUMENT_POSITION = 2;\n\nfunction checkStorage(storage: string) {\n  return (expr: estree.NewExpression, ctx: Rule.RuleContext) => {\n    const argument = expr.arguments[PROPS_ARGUMENT_POSITION];\n\n    const props = getValueOfExpression(ctx, argument, 'ObjectExpression');\n    if (isUnresolved(argument, props)) {\n      return;\n    }\n\n    if (props === undefined) {\n      report(expr.callee, 'omitted');\n      return;\n    }\n\n    if (isException(storage, props)) {\n      return;\n    }\n\n    const propertyKey = getProperty(props, 'storageEncrypted', ctx);\n    if (propertyKey === null) {\n      report(props, 'omitted');\n    }\n\n    if (!propertyKey) {\n      return;\n    }\n\n    const propertyValue = getUniqueWriteUsageOrNode(ctx, propertyKey.value);\n    if (isFalseLiteral(propertyValue)) {\n      report(propertyKey.value, 'unsafe');\n      return;\n    }\n\n    function isUnresolved(node: estree.Node | undefined, value: estree.Node | undefined | null) {\n      return node?.type === 'Identifier' && !isUndefined(node) && value === undefined;\n    }\n\n    function isException(storage: string, props: estree.ObjectExpression) {\n      if (\n        ![\n          DatabaseCluster,\n          DatabaseClusterFromSnapshot,\n          DatabaseInstance,\n          DatabaseInstanceReadReplica,\n        ].includes(storage)\n      ) {\n        return false;\n      }\n\n      const exceptionKey = getProperty(props, 'storageEncryptionKey', ctx);\n      if (exceptionKey == null) {\n        return false;\n      }\n\n      const exceptionValue = getUniqueWriteUsageOrNode(ctx, exceptionKey.value);\n      if (exceptionValue.type !== 'NewExpression') {\n        return false;\n      }\n\n      const fqn = normalizeFQN(getFullyQualifiedName(ctx, exceptionValue.callee));\n      return fqn === 'aws_cdk_lib.aws_kms.Key' || fqn === 'aws_cdk_lib.aws_kms.Alias';\n    }\n\n    function report(node: estree.Node, messageId: string) {\n      ctx.report({\n        messageId,\n        node,\n      });\n    }\n  };\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6321/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  AwsCdkCheckArguments,\n  AwsCdkConsumer,\n  AwsCdkTemplate,\n  FullyQualifiedName,\n  getLiteralValue,\n  normalizeFQN,\n} from '../helpers/aws/cdk';\nimport {\n  getFullyQualifiedName,\n  getProperty,\n  getUniqueWriteUsageOrNode,\n  getValueOfExpression,\n  isUndefined,\n  isUnresolved,\n  reduceToIdentifier,\n} from '../helpers';\n\nconst TYPES_WITH_CONNECTIONS = [\n  'aws_cdk_lib.aws_docdb.DatabaseCluster.connections',\n  'aws_cdk_lib.aws_lambdaPythonAlpha.PythonFunction.connections',\n  'aws_cdk_lib.aws_batchAlpha.ComputeEnvironment.connections',\n  'aws_cdk_lib.aws_efs.FileSystem.connections',\n  'aws_cdk_lib.aws_lambdaGoAlpha.GoFunction.connections',\n  'aws_cdk_lib.aws_ecs.ExternalService.connections',\n  'aws_cdk_lib.aws_ecs.FargateService.connections',\n  'aws_cdk_lib.aws_ecs.Cluster.connections',\n  'aws_cdk_lib.aws_ecs.Ec2Service.connections',\n  'aws_cdk_lib.aws_elasticsearch.Domain.connections',\n  'aws_cdk_lib.aws_neptuneAlpha.DatabaseCluster.connections',\n  'aws_cdk_lib.aws_eks.FargateCluster.connections',\n  'aws_cdk_lib.aws_eks.Cluster.connections',\n  'aws_cdk_lib.aws_codebuild.PipelineProject.connections',\n  'aws_cdk_lib.aws_codebuild.Project.connections',\n  'aws_cdk_lib.aws_rds.DatabaseInstance.connections',\n  'aws_cdk_lib.aws_rds.DatabaseInstanceReadReplica.connections',\n  'aws_cdk_lib.aws_rds.DatabaseCluster.connections',\n  'aws_cdk_lib.aws_rds.ServerlessClusterFromSnapshot.connections',\n  'aws_cdk_lib.aws_rds.DatabaseProxy.connections',\n  'aws_cdk_lib.aws_rds.DatabaseInstanceFromSnapshot.connections',\n  'aws_cdk_lib.aws_rds.ServerlessCluster.connections',\n  'aws_cdk_lib.aws_rds.DatabaseClusterFromSnapshot.connections',\n  'aws_cdk_lib.aws_lambdaNodejs.NodejsFunction.connections',\n  'aws_cdk_lib.aws_fsx.LustreFileSystem.connections',\n  'aws_cdk_lib.aws_ec2.BastionHostLinux.connections',\n  'aws_cdk_lib.aws_ec2.ClientVpnEndpoint.connections',\n  'aws_cdk_lib.aws_ec2.Instance.connections',\n  'aws_cdk_lib.aws_ec2.LaunchTemplate.connections',\n  'aws_cdk_lib.aws_ec2.SecurityGroup.connections',\n  'aws_cdk_lib.aws_kinesisfirehoseAlpha.DeliveryStream.connections',\n  'aws_cdk_lib.aws_stepfunctionsTasks.SageMakerCreateTrainingJob.connections',\n  'aws_cdk_lib.aws_stepfunctionsTasks.SageMakerCreateModel.connections',\n  'aws_cdk_lib.aws_stepfunctionsTasks.EcsRunTask.connections',\n  'aws_cdk_lib.aws_redshiftAlpha.Cluster.connections',\n  'aws_cdk_lib.aws_opensearchservice.Domain.connections',\n  'aws_cdk_lib.aws_secretsmanager.HostedRotation.connections',\n  'aws_cdk_lib.aws_mskAlpha.Cluster.connections',\n  'aws_cdk_lib.triggers.TriggerFunction.connections',\n  'aws_cdk_lib.aws_autoscaling.AutoScalingGroup.connections',\n  'aws_cdk_lib.aws_syntheticsAlpha.Canary.connections',\n  'aws_cdk_lib.aws_cloudfront.experimental.EdgeFunction.connections',\n  'aws_cdk_lib.aws_lambda.Function.connections',\n  'aws_cdk_lib.aws_lambda.DockerImageFunction.connections',\n  'aws_cdk_lib.aws_lambda.SingletonFunction.connections',\n  'aws_cdk_lib.aws_lambda.Alias.connections',\n  'aws_cdk_lib.aws_lambda.Version.connections',\n  'aws_cdk_lib.aws_ec2.Connections',\n];\n\nconst badPorts: number[] = [22, 3389];\nconst badIpsV4: string[] = ['0.0.0.0/0'];\nconst badIpsV6: string[] = ['::/0'];\nconst badFQNProtocols: string[] = [\n  'aws_cdk_lib.aws_ec2.Protocol.ALL',\n  'aws_cdk_lib.aws_ec2.Protocol.TCP',\n];\nconst badProtocols: string[] = ['6', 'tcp', 'TCP'];\n\nconst templateCallback: { [key: FullyQualifiedName]: AwsCdkConsumer } = {};\nfor (const type of TYPES_WITH_CONNECTIONS) {\n  templateCallback[`${type}.allowFrom`] = { callExpression: checkAllowFrom };\n  templateCallback[`${type}.allowFromAnyIpv4`] = { callExpression: checkAllowFromAnyIpv4 };\n}\n\ntemplateCallback['aws_cdk_lib.aws_ec2.Connections.allowDefaultPortFrom'] = {\n  callExpression: (expr: estree.CallExpression, ctx: Rule.RuleContext) => {\n    if (isBadEc2Peer(ctx, expr.arguments[0])) {\n      checkConstructorDefaultPort(ctx, expr);\n    }\n  },\n};\ntemplateCallback['aws_cdk_lib.aws_ec2.Connections.allowDefaultPortFromAnyIpv4'] = {\n  callExpression: (expr: estree.CallExpression, ctx: Rule.RuleContext) => {\n    checkConstructorDefaultPort(ctx, expr);\n  },\n};\ntemplateCallback['aws_cdk_lib.aws_ec2.SecurityGroup.addIngressRule'] = {\n  callExpression: checkAllowFrom,\n};\n\ntemplateCallback['aws_cdk_lib.aws_ec2.CfnSecurityGroup'] = (\n  expr: estree.NewExpression,\n  ctx: Rule.RuleContext,\n) => {\n  const params = expr.arguments[2];\n  const objExpr = getValueOfExpression(ctx, params, 'ObjectExpression', true);\n  if (!objExpr) {\n    return;\n  }\n\n  const ingressProp = getProperty(objExpr, 'securityGroupIngress', ctx);\n\n  if (!ingressProp) {\n    return;\n  }\n\n  const arrExpr = getValueOfExpression(ctx, ingressProp.value, 'ArrayExpression', true);\n\n  if (arrExpr) {\n    for (const ingressGroup of arrExpr.elements) {\n      if (ingressGroup) {\n        checkIngressObject(ctx, ingressGroup);\n      }\n    }\n  }\n};\n\ntemplateCallback['aws_cdk_lib.aws_ec2.CfnSecurityGroupIngress'] = (\n  expr: estree.NewExpression,\n  ctx: Rule.RuleContext,\n) => {\n  checkIngressObject(ctx, expr.arguments[2]);\n};\n\nexport const rule: Rule.RuleModule = AwsCdkTemplate(templateCallback, {\n  meta: {\n    messages: {\n      allowFromAnyIpv4:\n        'Change this method for \"allowFrom\" and set \"other\" to a subset of trusted IP addresses.',\n      allowFrom: 'Change this IP range to a subset of trusted IP addresses.',\n    },\n  },\n});\n\nconst invalidDefaultPortChecker = AwsCdkCheckArguments(\n  'allowFrom',\n  false,\n  'defaultPort',\n  { customChecker: isBadEc2Port },\n  true,\n  0,\n);\n\nfunction checkConstructorDefaultPort(ctx: Rule.RuleContext, node: estree.CallExpression) {\n  const newExpr = getValueOfExpression(ctx, reduceToIdentifier(node.callee), 'NewExpression', true);\n  if (newExpr && invalidDefaultPortChecker(newExpr, ctx)) {\n    ctx.report({ messageId: 'allowFromAnyIpv4', node: node.callee });\n  }\n}\n\nfunction checkAllowFrom(expr: estree.CallExpression, ctx: Rule.RuleContext) {\n  const badPeer = isBadEc2Peer(ctx, expr.arguments[0]);\n  const badPort = isBadEc2Port(ctx, expr.arguments[1]);\n\n  if (badPort && badPeer) {\n    ctx.report({ messageId: 'allowFrom', node: expr.arguments[0] });\n  }\n}\n\nfunction checkAllowFromAnyIpv4(expr: estree.CallExpression, ctx: Rule.RuleContext) {\n  const badPort = isBadEc2Port(ctx, expr.arguments[0]);\n\n  if (badPort) {\n    ctx.report({ messageId: 'allowFromAnyIpv4', node: expr.callee });\n  }\n}\n\nfunction checkIngressObject(ctx: Rule.RuleContext, node: estree.Node) {\n  const objExpr = getValueOfExpression(ctx, node, 'ObjectExpression', true);\n  if (!objExpr) {\n    return;\n  }\n\n  const ipPropertyV4 = getPropertyValue(ctx, objExpr, 'cidrIp');\n  const ipPropertyV6 = getPropertyValue(ctx, objExpr, 'cidrIpv6');\n\n  const ipProtocol = getPropertyValue(ctx, objExpr, 'ipProtocol')?.value as string;\n  const cidrIpV4 = ipPropertyV4?.value as string;\n  const cidrIpV6 = ipPropertyV6?.value as string;\n  const fromPort = Number.parseInt(getPropertyValue(ctx, objExpr, 'fromPort')?.value as string);\n  const toPort = Number.parseInt(getPropertyValue(ctx, objExpr, 'toPort')?.value as string);\n\n  if (\n    disallowedIpV4(cidrIpV4) &&\n    (ipProtocol === '-1' || (disallowedProtocol(ipProtocol) && disallowedPort(fromPort, toPort)))\n  ) {\n    ctx.report({ messageId: 'allowFrom', node: ipPropertyV4! });\n  }\n\n  if (\n    disallowedIpV6(cidrIpV6) &&\n    (ipProtocol === '-1' || (disallowedProtocol(ipProtocol) && disallowedPort(fromPort, toPort)))\n  ) {\n    ctx.report({ messageId: 'allowFrom', node: ipPropertyV6! });\n  }\n}\n\nfunction disallowedPortObject(ctx: Rule.RuleContext, node: estree.Node) {\n  const objExpr = getValueOfExpression(ctx, node, 'ObjectExpression', true);\n  if (!objExpr) {\n    return false;\n  }\n  const protocol = getProperty(objExpr, 'protocol', ctx);\n\n  if (!protocol) {\n    return false;\n  }\n\n  const protocolValue = getUniqueWriteUsageOrNode(ctx, protocol.value, true);\n\n  if (isUnresolved(protocolValue, ctx) || isUndefined(protocolValue)) {\n    return false;\n  }\n  const protocolFQN = normalizeFQN(getFullyQualifiedName(ctx, protocolValue));\n  if (protocolFQN && badFQNProtocols.includes(protocolFQN)) {\n    const fromPort = Number.parseInt(getPropertyValue(ctx, objExpr, 'fromPort')?.value as string);\n    const toPort = Number.parseInt(getPropertyValue(ctx, objExpr, 'toPort')?.value as string);\n    return disallowedPort(fromPort, toPort);\n  }\n  return false;\n}\n\nfunction isBadEc2Peer(ctx: Rule.RuleContext, node: estree.Node): boolean {\n  const fqn = normalizeFQN(getFullyQualifiedName(ctx, node));\n  if (fqn === 'aws_cdk_lib.aws_ec2.Peer.anyIpv4' || fqn === 'aws_cdk_lib.aws_ec2.Peer.anyIpv6') {\n    return true;\n  }\n  if (fqn === 'aws_cdk_lib.aws_ec2.Peer.ipv4') {\n    return disallowedIpV4(getArgumentValue(ctx, node)?.value as string);\n  }\n  if (fqn === 'aws_cdk_lib.aws_ec2.Peer.ipv6') {\n    return disallowedIpV6(getArgumentValue(ctx, node)?.value as string);\n  }\n  return false;\n}\n\nfunction isBadEc2Port(ctx: Rule.RuleContext, node: estree.Node): boolean {\n  const fqn = normalizeFQN(getFullyQualifiedName(ctx, node));\n  if (fqn === 'aws_cdk_lib.aws_ec2.Port.allTcp' || fqn === 'aws_cdk_lib.aws_ec2.Port.allTraffic') {\n    return true;\n  }\n  if (fqn === 'aws_cdk_lib.aws_ec2.Port.tcp') {\n    return disallowedPort(getArgumentValue(ctx, node)?.value as number);\n  }\n  if (fqn === 'aws_cdk_lib.aws_ec2.Port.tcpRange') {\n    const startRange = getArgumentValue(ctx, node)?.value as number;\n    const endRange = getArgumentValue(ctx, node, 1)?.value as number;\n    return disallowedPort(startRange, endRange);\n  }\n  if (fqn === 'aws_cdk_lib.aws_ec2.Port') {\n    const portParams = getArgument(ctx, node);\n    if (portParams) {\n      return disallowedPortObject(ctx, portParams);\n    }\n  }\n  return false;\n}\n\nfunction getArgument(\n  ctx: Rule.RuleContext,\n  node: estree.Node,\n  position = 0,\n): estree.Node | undefined {\n  if (!node || isUndefined(node) || isUnresolved(node, ctx)) {\n    return undefined;\n  }\n\n  const callExpr = getUniqueWriteUsageOrNode(ctx, node, true);\n\n  if (\n    isUnresolved(callExpr, ctx) ||\n    isUndefined(callExpr) ||\n    (callExpr.type !== 'CallExpression' && callExpr.type !== 'NewExpression')\n  ) {\n    return undefined;\n  }\n\n  const argument = callExpr.arguments[position];\n\n  const argumentValue = getUniqueWriteUsageOrNode(ctx, argument, true);\n\n  if (isUnresolved(argumentValue, ctx) || isUndefined(argumentValue)) {\n    return undefined;\n  }\n\n  return argumentValue;\n}\n\nfunction getArgumentValue(\n  ctx: Rule.RuleContext,\n  node: estree.Node,\n  position = 0,\n): estree.Literal | undefined {\n  const argument = getArgument(ctx, node, position);\n  return argument ? getLiteralValue(ctx, argument) : undefined;\n}\n\nexport function getPropertyValue(\n  ctx: Rule.RuleContext,\n  node: estree.ObjectExpression,\n  propertyName: string,\n): estree.Literal | undefined {\n  const property = getProperty(node, propertyName, ctx);\n\n  if (!property) {\n    return undefined;\n  }\n\n  const propertyValue = getUniqueWriteUsageOrNode(ctx, property.value, true);\n\n  if (isUnresolved(propertyValue, ctx) || isUndefined(propertyValue)) {\n    return undefined;\n  }\n\n  return getLiteralValue(ctx, propertyValue);\n}\n\nfunction disallowedPort(startRange?: number, endRange?: number): boolean {\n  if (startRange != null && endRange != null) {\n    return badPorts.some(port => port >= startRange && port <= endRange);\n  }\n  if (startRange != null && endRange == null) {\n    return badPorts.some(port => port === startRange);\n  }\n  return false;\n}\n\nfunction disallowedIpV4(ip?: string): boolean {\n  return ip ? badIpsV4.includes(ip) : false;\n}\n\nfunction disallowedIpV6(ip?: string): boolean {\n  return ip ? badIpsV6.includes(ip) : false;\n}\n\nfunction disallowedProtocol(protocol?: string): boolean {\n  return protocol ? badProtocols.includes(protocol) : false;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  getFullyQualifiedName,\n  getNodeParent,\n  getValueOfExpression,\n  isIdentifier,\n  isProperty,\n} from '..';\nimport { normalizeFQN } from './cdk';\n\n/**\n * A rule template for AWS S3 Buckets\n *\n * The rule template allows to detect sensitive configuration passed on\n * the invocation of S3 Bucket's constructor from AWS CDK:\n *\n * ```new s3.Bucket(...)```\n *\n * @param callback the callback invoked on visiting S3 Bucket's instantiation\n * @param metadata the instantiated rule metadata\n * @returns the instantiated rule definition\n */\nexport function S3BucketTemplate(\n  callback: (bucketConstructor: estree.NewExpression, context: Rule.RuleContext) => void,\n  metadata: { meta: Rule.RuleMetaData } = { meta: {} },\n): Rule.RuleModule {\n  return {\n    ...metadata,\n    create(context: Rule.RuleContext) {\n      return {\n        NewExpression: (node: estree.NewExpression) => {\n          if (isS3BucketConstructor(context, node)) {\n            callback(node, context);\n          }\n        },\n      };\n    },\n  };\n}\n\n/**\n * Detects S3 Bucket's constructor invocation from 'aws-cdk-lib/aws-s3':\n *\n * const s3 = require('aws-cdk-lib/aws-s3');\n * new s3.Bucket();\n */\nexport function isS3BucketConstructor(context: Rule.RuleContext, node: estree.NewExpression) {\n  return normalizeFQN(getFullyQualifiedName(context, node)) === 'aws_cdk_lib.aws_s3.Bucket';\n}\n\n/**\n * Detects S3 BucketDeployment's constructor invocation from 'aws-cdk-lib/aws-s3-deployment':\n *\n * const s3 = require('aws-cdk-lib/aws-s3-deployment');\n * new s3.BucketDeployment();\n */\nexport function isS3BucketDeploymentConstructor(\n  context: Rule.RuleContext,\n  node: estree.NewExpression,\n) {\n  return (\n    normalizeFQN(getFullyQualifiedName(context, node)) ===\n    'aws_cdk_lib.aws_s3_deployment.BucketDeployment'\n  );\n}\n\n/**\n * Extracts a property from the configuration argument of S3 Bucket's constructor\n *\n * ```\n * new s3.Bucket(_, _, { // config\n *  key1: value1,\n *  ...\n *  keyN: valueN\n * });\n * ```\n *\n * @param context the rule context\n * @param bucket the invocation of S3 Bucket's constructor\n * @param key the key of the property to extract\n * @returns the extracted property\n */\nexport function getProperty(context: Rule.RuleContext, bucket: estree.NewExpression, key: string) {\n  const args = bucket.arguments as estree.Expression[];\n\n  const optionsArg = args[2];\n  const options = getValueOfExpression(context, optionsArg, 'ObjectExpression');\n  if (options == null) {\n    return null;\n  }\n\n  return options.properties.find(\n    property => isProperty(property) && isIdentifier(property.key, key),\n  ) as estree.Property | undefined;\n}\n\n/**\n * Finds the propagated setting of a sensitive property\n */\nexport function findPropagatedSetting(\n  sensitiveProperty: estree.Property,\n  propagatedValue: estree.Node,\n) {\n  const propagated = { locations: [] as estree.Node[], messages: [] as string[] };\n  const isPropagatedProperty = sensitiveProperty.value !== propagatedValue;\n  if (isPropagatedProperty) {\n    propagated.locations = [getNodeParent(propagatedValue)];\n    propagated.messages = ['Propagated setting.'];\n  }\n  return propagated;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6265/javascript\n\nimport { Rule } from 'eslint';\nimport estree from 'estree';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\nimport {\n  getFullyQualifiedName,\n  getUniqueWriteUsageOrNode,\n  getValueOfExpression,\n  isIdentifier,\n  isMethodCall,\n  mergeRules,\n  toEncodedMessage,\n} from '../helpers';\nimport { normalizeFQN } from '../helpers/aws/cdk';\nimport {\n  S3BucketTemplate,\n  isS3BucketDeploymentConstructor,\n  findPropagatedSetting,\n  isS3BucketConstructor,\n  getProperty,\n} from '../helpers/aws/s3';\n\nconst messages = {\n  accessLevel: (param: string) => `Make sure granting ${param} access is safe here.`,\n  unrestricted: 'Make sure allowing unrestricted access to objects from this bucket is safe here.',\n};\n\nconst ACCESS_CONTROL_KEY = 'accessControl';\nconst INVALID_ACCESS_CONTROL_VALUES = ['PUBLIC_READ', 'PUBLIC_READ_WRITE', 'AUTHENTICATED_READ'];\n\nconst PUBLIC_READ_ACCESS_KEY = 'publicReadAccess';\nconst INVALID_PUBLIC_READ_ACCESS_VALUE = true;\n\nexport const rule: Rule.RuleModule = {\n  create(context: Rule.RuleContext) {\n    return mergeRules(\n      s3BucketConstructorRule.create(context),\n      s3BucketDeploymentConstructorRule.create(context),\n      handleGrantPublicAccess.create(context),\n    );\n  },\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n};\n\nconst s3BucketConstructorRule: Rule.RuleModule = S3BucketTemplate((bucketConstructor, context) => {\n  for (const value of INVALID_ACCESS_CONTROL_VALUES) {\n    checkConstantParam(context, bucketConstructor, ACCESS_CONTROL_KEY, [\n      'BucketAccessControl',\n      value,\n    ]);\n  }\n  checkBooleanParam(\n    context,\n    bucketConstructor,\n    PUBLIC_READ_ACCESS_KEY,\n    INVALID_PUBLIC_READ_ACCESS_VALUE,\n  );\n});\n\nconst s3BucketDeploymentConstructorRule: Rule.RuleModule = {\n  create(context: Rule.RuleContext) {\n    return {\n      NewExpression: (node: estree.NewExpression) => {\n        if (isS3BucketDeploymentConstructor(context, node)) {\n          for (const value of INVALID_ACCESS_CONTROL_VALUES) {\n            checkConstantParam(context, node, ACCESS_CONTROL_KEY, ['BucketAccessControl', value]);\n          }\n        }\n      },\n    };\n  },\n};\n\nfunction checkBooleanParam(\n  context: Rule.RuleContext,\n  bucketConstructor: estree.NewExpression,\n  propName: string,\n  propValue: boolean,\n) {\n  const property = getProperty(context, bucketConstructor, propName);\n  if (property == null) {\n    return;\n  }\n  const propertyLiteralValue = getValueOfExpression(context, property.value, 'Literal');\n  if (propertyLiteralValue?.value === propValue) {\n    const secondary = findPropagatedSetting(property, propertyLiteralValue);\n    context.report({\n      message: toEncodedMessage(messages.unrestricted, secondary.locations, secondary.messages),\n      node: property,\n    });\n  }\n}\n\nfunction checkConstantParam(\n  context: Rule.RuleContext,\n  bucketConstructor: estree.NewExpression,\n  propName: string,\n  paramQualifiers: string[],\n) {\n  const property = getProperty(context, bucketConstructor, propName);\n  if (property == null) {\n    return;\n  }\n  const propertyLiteralValue = getValueOfExpression(context, property.value, 'MemberExpression');\n  if (\n    propertyLiteralValue !== undefined &&\n    normalizeFQN(getFullyQualifiedName(context, propertyLiteralValue)) ===\n      `aws_cdk_lib.aws_s3.${paramQualifiers.join('.')}`\n  ) {\n    const secondary = findPropagatedSetting(property, propertyLiteralValue);\n    context.report({\n      message: toEncodedMessage(\n        messages.accessLevel(paramQualifiers[paramQualifiers.length - 1]),\n        secondary.locations,\n        secondary.messages,\n      ),\n      node: property,\n    });\n  }\n}\n\nconst handleGrantPublicAccess: Rule.RuleModule = {\n  create(context: Rule.RuleContext) {\n    return {\n      CallExpression: (node: estree.CallExpression) => {\n        if (!isMethodCall(node)) {\n          return;\n        }\n        const { object, property } = node.callee;\n        const isGrantPublicAccessMethodCall = isIdentifier(property, 'grantPublicAccess');\n        if (!isGrantPublicAccessMethodCall) {\n          return;\n        }\n        const variableAssignment = getUniqueWriteUsageOrNode(context, object);\n        const isS3bucketInstance =\n          variableAssignment.type === 'NewExpression' &&\n          isS3BucketConstructor(context, variableAssignment);\n        if (!isS3bucketInstance) {\n          return;\n        }\n        context.report({\n          message: toEncodedMessage(messages.unrestricted),\n          node: property,\n        });\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6249/javascript\n\nimport { Rule } from 'eslint';\nimport { getValueOfExpression } from '../helpers';\nimport { getProperty, S3BucketTemplate } from '../helpers/aws/s3';\n\nconst ENFORCE_SSL_KEY = 'enforceSSL';\n\nconst messages = {\n  authorized: 'Make sure authorizing HTTP requests is safe here.',\n  omitted: \"Omitting 'enforceSSL' authorizes HTTP requests. Make sure it is safe here.\",\n};\n\nexport const rule: Rule.RuleModule = S3BucketTemplate((bucket, context) => {\n  const enforceSSLProperty = getProperty(context, bucket, ENFORCE_SSL_KEY);\n  if (enforceSSLProperty == null) {\n    context.report({\n      message: messages['omitted'],\n      node: bucket.callee,\n    });\n    return;\n  }\n\n  const enforceSSLValue = getValueOfExpression(context, enforceSSLProperty.value, 'Literal');\n  if (enforceSSLValue?.value === false) {\n    context.report({\n      message: messages['authorized'],\n      node: enforceSSLProperty,\n    });\n  }\n});\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6281/javascript\n\nimport { Rule } from 'eslint';\nimport { NewExpression, ObjectExpression, Property } from 'estree';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\nimport {\n  getFullyQualifiedName,\n  getValueOfExpression,\n  isIdentifier,\n  isProperty,\n  toEncodedMessage,\n} from '../helpers';\nimport { normalizeFQN } from '../helpers/aws/cdk';\nimport { findPropagatedSetting, getProperty, S3BucketTemplate } from '../helpers/aws/s3';\n\nconst BLOCK_PUBLIC_ACCESS_KEY = 'blockPublicAccess';\nconst BLOCK_PUBLIC_ACCESS_PROPERTY_KEYS = [\n  'blockPublicAcls',\n  'blockPublicPolicy',\n  'ignorePublicAcls',\n  'restrictPublicBuckets',\n];\n\nconst messages = {\n  omitted:\n    'No Public Access Block configuration prevents public ACL/policies ' +\n    'to be set on this S3 bucket. Make sure it is safe here.',\n  public: 'Make sure allowing public ACL/policies to be set is safe here.',\n};\n\nexport const rule: Rule.RuleModule = S3BucketTemplate(\n  (bucket, context) => {\n    const blockPublicAccess = getProperty(context, bucket, BLOCK_PUBLIC_ACCESS_KEY);\n    if (blockPublicAccess == null) {\n      context.report({\n        message: toEncodedMessage(messages['omitted']),\n        node: bucket.callee,\n      });\n    } else {\n      checkBlockPublicAccessValue(blockPublicAccess);\n      checkBlockPublicAccessConstructor(blockPublicAccess);\n    }\n\n    /** Checks `blockPublicAccess: s3.BlockPublicAccess.BLOCK_ACLS` sensitive pattern */\n    function checkBlockPublicAccessValue(blockPublicAccess: Property) {\n      const blockPublicAccessMember = getValueOfExpression(\n        context,\n        blockPublicAccess.value,\n        'MemberExpression',\n      );\n      if (\n        blockPublicAccessMember !== undefined &&\n        normalizeFQN(getFullyQualifiedName(context, blockPublicAccessMember)) ===\n          'aws_cdk_lib.aws_s3.BlockPublicAccess.BLOCK_ACLS'\n      ) {\n        const propagated = findPropagatedSetting(blockPublicAccess, blockPublicAccessMember);\n        context.report({\n          message: toEncodedMessage(messages['public'], propagated.locations, propagated.messages),\n          node: blockPublicAccess,\n        });\n      }\n    }\n\n    /** Checks `blockPublicAccess: new s3.BlockPublicAccess({...})` sensitive pattern */\n    function checkBlockPublicAccessConstructor(blockPublicAccess: Property) {\n      const blockPublicAccessNew = getValueOfExpression(\n        context,\n        blockPublicAccess.value,\n        'NewExpression',\n      );\n      if (\n        blockPublicAccessNew !== undefined &&\n        isS3BlockPublicAccessConstructor(blockPublicAccessNew)\n      ) {\n        const blockPublicAccessConfig = getValueOfExpression(\n          context,\n          blockPublicAccessNew.arguments[0],\n          'ObjectExpression',\n        );\n        if (blockPublicAccessConfig === undefined) {\n          context.report({\n            message: toEncodedMessage(messages['omitted']),\n            node: blockPublicAccessNew,\n          });\n        } else {\n          BLOCK_PUBLIC_ACCESS_PROPERTY_KEYS.forEach(key =>\n            checkBlockPublicAccessConstructorProperty(blockPublicAccessConfig, key),\n          );\n        }\n      }\n\n      function checkBlockPublicAccessConstructorProperty(\n        blockPublicAccessConfig: ObjectExpression,\n        key: string,\n      ) {\n        const blockPublicAccessProperty = blockPublicAccessConfig.properties.find(\n          property => isProperty(property) && isIdentifier(property.key, key),\n        ) as Property | undefined;\n        if (blockPublicAccessProperty !== undefined) {\n          const blockPublicAccessValue = getValueOfExpression(\n            context,\n            blockPublicAccessProperty.value,\n            'Literal',\n          );\n          if (blockPublicAccessValue?.value === false) {\n            const propagated = findPropagatedSetting(\n              blockPublicAccessProperty,\n              blockPublicAccessValue,\n            );\n            context.report({\n              message: toEncodedMessage(\n                messages['public'],\n                propagated.locations,\n                propagated.messages,\n              ),\n              node: blockPublicAccessProperty,\n            });\n          }\n        }\n      }\n\n      function isS3BlockPublicAccessConstructor(expr: NewExpression) {\n        return (\n          expr.callee.type === 'MemberExpression' &&\n          normalizeFQN(getFullyQualifiedName(context, expr.callee)) ===\n            'aws_cdk_lib.aws_s3.BlockPublicAccess'\n        );\n      }\n    }\n  },\n  {\n    meta: {\n      schema: [\n        {\n          // internal parameter for rules having secondary locations\n          enum: [SONAR_RUNTIME],\n        },\n      ],\n    },\n  },\n);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6245/javascript\n\nimport { Rule } from 'eslint';\nimport { MemberExpression } from 'estree';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\nimport { getFullyQualifiedName, getValueOfExpression, toEncodedMessage } from '../helpers';\nimport { normalizeFQN } from '../helpers/aws/cdk';\nimport { findPropagatedSetting, getProperty, S3BucketTemplate } from '../helpers/aws/s3';\n\nconst ENCRYPTED_KEY = 'encryption';\n\nconst messages = {\n  unencrypted: 'Objects in the bucket are not encrypted. Make sure it is safe here.',\n  omitted: 'Omitting \"encryption\" disables server-side encryption. Make sure it is safe here.',\n};\n\nexport const rule: Rule.RuleModule = S3BucketTemplate(\n  (bucket, context) => {\n    const encryptedProperty = getProperty(context, bucket, ENCRYPTED_KEY);\n    if (encryptedProperty == null) {\n      context.report({\n        message: toEncodedMessage(messages['omitted'], [], []),\n        node: bucket.callee,\n      });\n      return;\n    }\n\n    const encryptedValue = getValueOfExpression(\n      context,\n      encryptedProperty.value,\n      'MemberExpression',\n    );\n    if (encryptedValue && isUnencrypted(encryptedValue)) {\n      const propagated = findPropagatedSetting(encryptedProperty, encryptedValue);\n      context.report({\n        message: toEncodedMessage(\n          messages['unencrypted'],\n          propagated.locations,\n          propagated.messages,\n        ),\n        node: encryptedProperty,\n      });\n    }\n\n    function isUnencrypted(encrypted: MemberExpression) {\n      return (\n        normalizeFQN(getFullyQualifiedName(context, encrypted)) ===\n        'aws_cdk_lib.aws_s3.BucketEncryption.UNENCRYPTED'\n      );\n    }\n  },\n  {\n    meta: {\n      schema: [\n        {\n          // internal parameter for rules having secondary locations\n          enum: [SONAR_RUNTIME],\n        },\n      ],\n    },\n  },\n);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6252/javascript\n\nimport { Rule } from 'eslint';\nimport { Node } from 'estree';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\nimport { getValueOfExpression, toEncodedMessage, getNodeParent } from '../helpers';\nimport { getProperty, S3BucketTemplate } from '../helpers/aws/s3';\n\nconst VERSIONED_KEY = 'versioned';\n\nconst messages = {\n  unversioned: 'Make sure using unversioned S3 bucket is safe here.',\n  omitted:\n    'Omitting the \"versioned\" argument disables S3 bucket versioning. Make sure it is safe here.',\n  secondary: 'Propagated setting',\n};\n\nexport const rule: Rule.RuleModule = S3BucketTemplate(\n  (bucketConstructor, context) => {\n    const versionedProperty = getProperty(context, bucketConstructor, VERSIONED_KEY);\n    if (versionedProperty == null) {\n      context.report({\n        message: toEncodedMessage(messages.omitted),\n        node: bucketConstructor.callee,\n      });\n      return;\n    }\n    const propertyLiteralValue = getValueOfExpression(context, versionedProperty.value, 'Literal');\n\n    if (propertyLiteralValue?.value === false) {\n      const secondary = { locations: [] as Node[], messages: [] as string[] };\n      const isPropagatedProperty = versionedProperty.value !== propertyLiteralValue;\n      if (isPropagatedProperty) {\n        secondary.locations = [getNodeParent(propertyLiteralValue)];\n        secondary.messages = [messages.secondary];\n      }\n      context.report({\n        message: toEncodedMessage(messages.unversioned, secondary.locations, secondary.messages),\n        node: versionedProperty,\n      });\n    }\n  },\n  {\n    meta: {\n      schema: [\n        {\n          // internal parameter for rules having secondary locations\n          enum: [SONAR_RUNTIME],\n        },\n      ],\n    },\n  },\n);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6319/javascript\n\nimport { Rule } from 'eslint';\nimport { AwsCdkCheckArguments, AwsCdkTemplate } from '../helpers/aws/cdk';\n\nexport const rule: Rule.RuleModule = AwsCdkTemplate(\n  {\n    'aws-cdk-lib.aws_sagemaker.CfnNotebookInstance': AwsCdkCheckArguments(\n      'CfnNotebookInstance',\n      true,\n      'kmsKeyId',\n    ),\n  },\n  {\n    meta: {\n      messages: {\n        CfnNotebookInstance:\n          'Omitting \"kmsKeyId\" disables encryption of SageMaker notebook instances. Make sure it is safe here.',\n      },\n    },\n  },\n);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6327/javascript\n\nimport { Rule } from 'eslint';\nimport { AwsCdkCheckArguments, AwsCdkTemplate } from '../helpers/aws/cdk';\n\nexport const rule: Rule.RuleModule = AwsCdkTemplate(\n  {\n    'aws-cdk-lib.aws_sns.Topic': AwsCdkCheckArguments('SNSTopic', true, 'masterKey'),\n    'aws-cdk-lib.aws_sns.CfnTopic': AwsCdkCheckArguments('SNSCfnTopic', true, 'kmsMasterKeyId'),\n  },\n  {\n    meta: {\n      messages: {\n        SNSTopic: 'Omitting \"masterKey\" disables SNS topics encryption. Make sure it is safe here.',\n        SNSCfnTopic:\n          'Omitting \"kmsMasterKeyId\" disables SNS topics encryption. Make sure it is safe here.',\n      },\n    },\n  },\n);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6308/javascript\n\nimport { Rule } from 'eslint';\nimport { AwsCdkCheckArguments, AwsCdkTemplate } from '../helpers/aws/cdk';\n\nexport const rule: Rule.RuleModule = AwsCdkTemplate(\n  {\n    'aws-cdk-lib.aws-sqs.Queue': AwsCdkCheckArguments(\n      ['OmittedQueue', 'DisabledQueue'],\n      true,\n      'encryption',\n      { fqns: { invalid: ['aws-cdk-lib.aws-sqs.QueueEncryption.UNENCRYPTED'] } },\n    ),\n    'aws-cdk-lib.aws-sqs.CfnQueue': AwsCdkCheckArguments('CfnQueue', true, 'kmsMasterKeyId'),\n  },\n  {\n    meta: {\n      messages: {\n        CfnQueue:\n          'Omitting \"kmsMasterKeyId\" disables SQS queues encryption. Make sure it is safe here.',\n        OmittedQueue:\n          'Omitting \"encryption\" disables SQS queues encryption. Make sure it is safe here.',\n        DisabledQueue:\n          'Setting \"encryption\" to \"QueueEncryption.UNENCRYPTED\" disables SQS queues encryption.' +\n          'Make sure it is safe here.',\n      },\n    },\n  },\n);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1529/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport * as ts from 'typescript';\nimport { getTypeFromTreeNode } from '../helpers';\n\nconst BITWISE_AND_OR = ['&', '|'];\nconst BITWISE_OPERATORS = [\n  '&',\n  '|',\n  '^',\n  '~',\n  '<<',\n  '>>',\n  '>>>',\n  '&=',\n  '|=',\n  '^=',\n  '<<=',\n  '>>=',\n  '>>>=',\n];\n\nexport const rule: Rule.RuleModule = {\n  create(context: Rule.RuleContext) {\n    const isNumeric = getNumericTypeChecker(context);\n    let lonelyBitwiseAndOr: null | estree.BinaryExpression = null;\n    let lonelyBitwiseAndOrAncestors: estree.Node[] = [];\n    let fileContainsSeveralBitwiseOperations = false;\n    return {\n      BinaryExpression(node: estree.Node) {\n        const expression = node as estree.BinaryExpression;\n        if (\n          !lonelyBitwiseAndOr &&\n          BITWISE_AND_OR.includes(expression.operator) &&\n          !isNumeric(expression.left) &&\n          !isNumeric(expression.right)\n        ) {\n          lonelyBitwiseAndOr = expression;\n          lonelyBitwiseAndOrAncestors = [...context.sourceCode.getAncestors(node)];\n        } else if (BITWISE_OPERATORS.includes(expression.operator)) {\n          fileContainsSeveralBitwiseOperations = true;\n        }\n      },\n      'Program:exit'() {\n        if (\n          !fileContainsSeveralBitwiseOperations &&\n          lonelyBitwiseAndOr &&\n          insideCondition(lonelyBitwiseAndOr, lonelyBitwiseAndOrAncestors)\n        ) {\n          const op = lonelyBitwiseAndOr.operator;\n          const operatorToken = context.sourceCode.getTokenAfter(lonelyBitwiseAndOr.left);\n          if (operatorToken) {\n            context.report({\n              loc: operatorToken.loc,\n              message: `Review this use of bitwise \"${op}\" operator; conditional \"${op}${op}\" might have been intended.`,\n            });\n          }\n        }\n      },\n    };\n  },\n};\n\nfunction insideCondition(node: estree.Node, ancestors: estree.Node[]) {\n  let child = node;\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    const parent = ancestors[i];\n    if (\n      parent.type === 'IfStatement' ||\n      parent.type === 'ForStatement' ||\n      parent.type === 'WhileStatement' ||\n      parent.type === 'DoWhileStatement' ||\n      parent.type === 'ConditionalExpression'\n    ) {\n      return parent.test === child;\n    }\n    child = parent;\n  }\n  return false;\n}\n\ntype NumericTypeChecker = (node: estree.Node) => boolean;\n\nfunction getNumericTypeChecker(context: Rule.RuleContext): NumericTypeChecker {\n  const services = context.sourceCode.parserServices;\n  if (!!services && !!services.program && !!services.esTreeNodeToTSNodeMap) {\n    return (node: estree.Node) => isNumericType(getTypeFromTreeNode(node, services));\n  } else {\n    const numericTypes = ['number', 'bigint'];\n    return (node: estree.Node) =>\n      node.type === 'Literal' ? numericTypes.includes(typeof node.value) : false;\n  }\n\n  function isNumericType(type: ts.Type): boolean {\n    return (\n      (type.getFlags() & (ts.TypeFlags.NumberLike | ts.TypeFlags.BigIntLike)) !== 0 ||\n      (type.isUnionOrIntersection() && !!type.types.find(isNumericType))\n    );\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4798/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\n\ntype FunctionLike =\n  | TSESTree.FunctionDeclaration\n  | TSESTree.FunctionExpression\n  | TSESTree.ArrowFunctionExpression;\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      provideDefault:\n        \"Provide a default value for '{{parameter}}' so that \" +\n        'the logic of the function is more evident when this parameter is missing. ' +\n        'Consider defining another function if providing default value is not possible.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      'FunctionDeclaration, FunctionExpression, ArrowFunctionExpression': (node: estree.Node) => {\n        const functionLike = node as FunctionLike;\n        for (const param of functionLike.params) {\n          if (param.type === 'Identifier' && isOptionalBoolean(param)) {\n            context.report({\n              messageId: 'provideDefault',\n              data: {\n                parameter: param.name,\n              },\n              node: param as estree.Node,\n            });\n          }\n        }\n      },\n    };\n  },\n};\n\nfunction isOptionalBoolean(node: TSESTree.Identifier): boolean {\n  return usesQuestionOptionalSyntax(node) || usesUnionUndefinedOptionalSyntax(node);\n}\n\n/**\n * Matches \"param?: boolean\"\n */\nfunction usesQuestionOptionalSyntax(node: TSESTree.Identifier): boolean {\n  return (\n    !!node.optional &&\n    !!node.typeAnnotation &&\n    node.typeAnnotation.typeAnnotation.type === 'TSBooleanKeyword'\n  );\n}\n\n/**\n * Matches \"boolean | undefined\"\n */\nfunction usesUnionUndefinedOptionalSyntax(node: TSESTree.Identifier): boolean {\n  if (!!node.typeAnnotation && node.typeAnnotation.typeAnnotation.type === 'TSUnionType') {\n    const types = node.typeAnnotation.typeAnnotation.types;\n    return (\n      types.length === 2 &&\n      types.some(tp => tp.type === 'TSBooleanKeyword') &&\n      types.some(tp => tp.type === 'TSUndefinedKeyword')\n    );\n  }\n  return false;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1105/javascript\n\nimport { Rule } from 'eslint';\nimport { interceptReport } from '../helpers';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, reportExempting(isOpeningBracket));\n}\n\nfunction reportExempting(\n  exemptionCondition: (messageId: string) => boolean,\n): (context: Rule.RuleContext, reportDescriptor: Rule.ReportDescriptor) => void {\n  return (context, reportDescriptor) => {\n    if (exemptionCondition((reportDescriptor as any).messageId)) {\n      context.report(reportDescriptor);\n    }\n  };\n}\n\nfunction isOpeningBracket(messageId: string) {\n  return messageId !== 'nextLineClose';\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { eslintRules } from '../core';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(eslintRules['brace-style']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1472/javascript\n\nimport { AST, Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { Position } from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      moveArguments: 'Make those call arguments start on line {{line}}.',\n      moveTemplateLiteral: 'Make this template literal start on line {{line}}.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const sourceCode = context.sourceCode;\n\n    return {\n      CallExpression: (node: estree.Node) => {\n        const call = node as estree.CallExpression;\n        if (call.callee.type !== 'CallExpression' && call.arguments.length === 1) {\n          const callee = getCallee(call);\n          const parenthesis = sourceCode.getLastTokenBetween(\n            callee,\n            call.arguments[0],\n            isClosingParen,\n          );\n          const calleeLastLine = (parenthesis ?? sourceCode.getLastToken(callee))!.loc.end.line;\n          const { start } = sourceCode.getTokenAfter(callee, isNotClosingParen)!.loc;\n          if (calleeLastLine !== start.line) {\n            const { end } = sourceCode.getLastToken(call)!.loc;\n            if (end.line !== start.line) {\n              //If arguments span multiple lines, we only report the first one\n              reportIssue('moveArguments', start, calleeLastLine, context);\n            } else {\n              reportIssue('moveArguments', { start, end }, calleeLastLine, context);\n            }\n          }\n        }\n      },\n      TaggedTemplateExpression(node) {\n        const { quasi } = node;\n        const tokenBefore = sourceCode.getTokenBefore(quasi);\n        if (tokenBefore && quasi.loc && tokenBefore.loc.end.line !== quasi.loc.start.line) {\n          const loc = {\n            start: quasi.loc.start,\n            end: {\n              line: quasi.loc.start.line,\n              column: quasi.loc.start.column + 1,\n            },\n          };\n          reportIssue('moveTemplateLiteral', loc, tokenBefore.loc.start.line, context);\n        }\n      },\n    };\n  },\n};\n\nfunction getCallee(call: estree.CallExpression) {\n  const node = call as TSESTree.CallExpression;\n  return (node.typeArguments ?? node.callee) as estree.Node;\n}\n\nfunction isClosingParen(token: AST.Token) {\n  return token.type === 'Punctuator' && token.value === ')';\n}\n\nfunction isNotClosingParen(token: AST.Token) {\n  return !isClosingParen(token);\n}\n\nfunction reportIssue(\n  messageId: string,\n  loc: { start: Position; end: Position } | Position,\n  line: number,\n  context: Rule.RuleContext,\n) {\n  context.report({\n    messageId,\n    data: {\n      line: line.toString(),\n    },\n    loc,\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5742/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { Express, getFullyQualifiedName, getPropertyWithValue } from '../helpers';\n\nconst HELMET = 'helmet';\nconst EXPECT_CERTIFICATE_TRANSPARENCY = 'expectCt';\n\nexport const rule: Rule.RuleModule = Express.SensitiveMiddlewarePropertyRule(\n  findFalseCertificateTransparencyPropertyFromHelmet,\n  `Make sure disabling Certificate Transparency monitoring is safe here.`,\n);\n\n/**\n * Looks for property `expectCt: false` in node looking\n * somewhat similar to `helmet(<options>?)`, and returns it.\n */\nfunction findFalseCertificateTransparencyPropertyFromHelmet(\n  context: Rule.RuleContext,\n  node: estree.CallExpression,\n): estree.Property[] {\n  let sensitive: estree.Property | undefined;\n  const { callee, arguments: args } = node;\n  if (\n    getFullyQualifiedName(context, callee) === HELMET &&\n    args.length === 1 &&\n    args[0].type === 'ObjectExpression'\n  ) {\n    sensitive = getPropertyWithValue(context, args[0], EXPECT_CERTIFICATE_TRANSPARENCY, false);\n  }\n  return sensitive ? [sensitive] : [];\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6092/javascript\n\nimport { Rule } from 'eslint';\nimport { Chai, isDotNotation, isIdentifier } from '../helpers';\nimport * as estree from 'estree';\n\nconst message = 'Refactor this uncertain assertion; it can succeed for multiple reasons.';\n\ntype ChainElement = {\n  identifier: estree.Identifier;\n  arguments?: estree.Node[];\n};\n\nexport const rule: Rule.RuleModule = {\n  create(context: Rule.RuleContext) {\n    if (!Chai.isImported(context)) {\n      return {};\n    }\n    return {\n      ExpressionStatement: (node: estree.ExpressionStatement) => {\n        const elements: ChainElement[] = retrieveAssertionChainElements(node.expression);\n\n        if (\n          elements.length > 1 &&\n          (isIdentifier(elements[0].identifier, 'expect') ||\n            getElementIndex(elements, 'should') >= 0)\n        ) {\n          checkNotThrow(context, elements);\n          checkNotInclude(context, elements);\n          checkNotHaveProperty(context, elements);\n          checkNotHaveOwnPropertyDescriptor(context, elements);\n          checkNotHaveMembers(context, elements);\n          checkChangeBy(context, elements);\n          checkNotIncDec(context, elements);\n          checkNotBy(context, elements);\n          checkNotFinite(context, elements);\n        }\n      },\n    };\n  },\n};\n\nfunction checkNotThrow(context: Rule.RuleContext, elements: ChainElement[]) {\n  checkWithCondition(context, elements, 'not', 'throw', args => !!args && args.length > 0);\n}\n\nfunction checkNotInclude(context: Rule.RuleContext, elements: ChainElement[]) {\n  checkWithCondition(\n    context,\n    elements,\n    'not',\n    'include',\n    args => !!args && args.length > 0 && args[0].type === 'ObjectExpression',\n  );\n}\n\nfunction checkNotHaveProperty(context: Rule.RuleContext, elements: ChainElement[]) {\n  checkWithCondition(context, elements, 'not', 'property', args => !!args && args.length > 1);\n}\n\nfunction checkNotHaveOwnPropertyDescriptor(context: Rule.RuleContext, elements: ChainElement[]) {\n  checkWithCondition(\n    context,\n    elements,\n    'not',\n    'ownPropertyDescriptor',\n    args => !!args && args.length > 1,\n  );\n}\n\nfunction checkNotHaveMembers(context: Rule.RuleContext, elements: ChainElement[]) {\n  checkWithCondition(context, elements, 'not', 'members');\n}\n\nfunction checkChangeBy(context: Rule.RuleContext, elements: ChainElement[]) {\n  checkWithCondition(context, elements, 'change', 'by');\n}\n\nfunction checkNotIncDec(context: Rule.RuleContext, elements: ChainElement[]) {\n  checkWithCondition(context, elements, 'not', 'increase');\n  checkWithCondition(context, elements, 'not', 'decrease');\n}\n\nfunction checkNotBy(context: Rule.RuleContext, elements: ChainElement[]) {\n  checkWithCondition(context, elements, 'not', 'by');\n}\n\nfunction checkNotFinite(context: Rule.RuleContext, elements: ChainElement[]) {\n  checkWithCondition(context, elements, 'not', 'finite');\n}\n\nfunction checkWithCondition(\n  context: Rule.RuleContext,\n  elements: ChainElement[],\n  first: string,\n  second: string,\n  condition: (args?: estree.Node[]) => boolean = () => true,\n) {\n  const firstIndex = getElementIndex(elements, first);\n  const firstElement = elements[firstIndex];\n\n  const secondIndex = getElementIndex(elements, second);\n  const secondElement = elements[secondIndex];\n\n  if (\n    firstElement &&\n    secondElement &&\n    neighborIndexes(firstIndex, secondIndex, elements) &&\n    condition(secondElement.arguments)\n  ) {\n    context.report({\n      message,\n      loc: locFromTwoNodes(firstElement.identifier, secondElement.identifier),\n    });\n  }\n}\n\n// first element is not applied to second if between them function call (e.g. fist.foo().second())\nfunction neighborIndexes(firstIndex: number, secondIndex: number, elements: ChainElement[]) {\n  if (firstIndex === secondIndex - 2) {\n    return !elements[firstIndex + 1].arguments;\n  }\n\n  return firstIndex === secondIndex - 1;\n}\n\nfunction retrieveAssertionChainElements(node: estree.Expression) {\n  let currentNode: estree.Node = node;\n  const result: ChainElement[] = [];\n  let currentArguments: estree.Node[] | undefined = undefined;\n\n  while (true) {\n    if (isDotNotation(currentNode)) {\n      result.push({ identifier: currentNode.property, arguments: currentArguments });\n      currentNode = currentNode.object;\n      currentArguments = undefined;\n    } else if (currentNode.type === 'CallExpression') {\n      currentArguments = currentNode.arguments;\n      currentNode = currentNode.callee;\n    } else if (isIdentifier(currentNode)) {\n      result.push({ identifier: currentNode, arguments: currentArguments });\n      break;\n    } else {\n      break;\n    }\n  }\n\n  return result.reverse();\n}\n\nfunction getElementIndex(elements: ChainElement[], name: string) {\n  return elements.findIndex(element => isIdentifier(element.identifier, name));\n}\n\nfunction locFromTwoNodes(start: estree.Node, end: estree.Node) {\n  return {\n    start: start.loc!.start,\n    end: end.loc!.end,\n  };\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S101/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\ntype ClassOrInterfaceDeclaration = TSESTree.ClassDeclaration | TSESTree.TSInterfaceDeclaration;\n\nexport type Options = [\n  {\n    format: string;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    messages: {\n      renameClass: 'Rename {{symbolType}} \"{{symbol}}\" to match the regular expression {{format}}.',\n    },\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          format: {\n            type: 'string',\n          },\n        },\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      ClassDeclaration: (node: estree.Node) =>\n        checkName(node as ClassOrInterfaceDeclaration, 'class', context),\n      TSInterfaceDeclaration: (node: estree.Node) =>\n        checkName(node as ClassOrInterfaceDeclaration, 'interface', context),\n    };\n  },\n};\n\nfunction checkName(\n  node: ClassOrInterfaceDeclaration,\n  declarationType: string,\n  context: Rule.RuleContext,\n) {\n  const [{ format }] = context.options;\n  if (node.id) {\n    const name = node.id.name;\n    if (!name.match(format)) {\n      context.report({\n        messageId: 'renameClass',\n        data: {\n          symbol: name,\n          symbolType: declarationType,\n          format,\n        },\n        node: node.id,\n      });\n    }\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3525/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport * as ts from 'typescript';\nimport { getTypeFromTreeNode, isRequiredParserServices, RequiredParserServices } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      declareClass:\n        'Declare a \"{{class}}\" class and move this declaration of \"{{declaration}}\" into it.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    const isFunction = isRequiredParserServices(services) ? isFunctionType : isFunctionLike;\n    return {\n      AssignmentExpression: (node: estree.Node) => {\n        const { left, right } = node as estree.AssignmentExpression;\n        if (left.type === 'MemberExpression' && isFunction(right, services)) {\n          const [member, prototype] = [left.object, left.property];\n          if (member.type === 'MemberExpression' && prototype.type === 'Identifier') {\n            const [klass, property] = [member.object, member.property];\n            if (\n              klass.type === 'Identifier' &&\n              property.type === 'Identifier' &&\n              property.name === 'prototype'\n            ) {\n              context.report({\n                messageId: 'declareClass',\n                data: {\n                  class: klass.name,\n                  declaration: prototype.name,\n                },\n                node: left,\n              });\n            }\n          }\n        }\n      },\n    };\n  },\n};\n\nfunction isFunctionType(node: estree.Node, services: RequiredParserServices) {\n  const type = getTypeFromTreeNode(node, services);\n  return type.symbol && (type.symbol.flags & ts.SymbolFlags.Function) !== 0;\n}\n\nfunction isFunctionLike(node: estree.Node, _services: RequiredParserServices) {\n  return ['FunctionDeclaration', 'FunctionExpression', 'ArrowFunctionExpression'].includes(\n    node.type,\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1523/javascript\n// SQ key 'eval'\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { eslintRules } from '../core';\n\nconst noScriptUrlRule = eslintRules['no-script-url'];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      safeCode: 'Make sure that this dynamic injection or execution of code is safe.',\n      unexpectedScriptURL: \"Make sure that 'javascript:' code is safe as it is a form of eval().\",\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      CallExpression: (node: estree.Node) =>\n        checkCallExpression(node as estree.CallExpression, context),\n      NewExpression: (node: estree.Node) =>\n        checkCallExpression(node as estree.CallExpression, context),\n      ...noScriptUrlRule.create(context),\n    };\n  },\n};\n\nfunction checkCallExpression(node: estree.CallExpression, context: Rule.RuleContext) {\n  if (node.callee.type === 'Identifier') {\n    const { name } = node.callee;\n    if ((name === 'eval' || name === 'Function') && hasAtLeastOneVariableArgument(node.arguments)) {\n      context.report({\n        messageId: 'safeCode',\n        node: node.callee,\n      });\n    }\n  }\n}\n\nfunction hasAtLeastOneVariableArgument(args: Array<estree.Node>) {\n  return !!args.find(arg => !isLiteral(arg));\n}\n\nfunction isLiteral(node: estree.Node) {\n  if (node.type === 'Literal') {\n    return true;\n  }\n\n  if (node.type === 'TemplateLiteral') {\n    return node.expressions.length === 0;\n  }\n\n  return false;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3616/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isLiteral } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      specifyCase: `Explicitly specify {{nesting}} separate cases that fall through; currently this case clause only works for \"{{expression}}\".`,\n    },\n  },\n  create(context: Rule.RuleContext) {\n    function reportIssue(node: estree.Node, clause: estree.Node, nestingLvl: number) {\n      context.report({\n        messageId: 'specifyCase',\n        data: {\n          nesting: nestingLvl.toString(),\n          expression: String(getTextFromNode(clause)),\n        },\n        node,\n      });\n    }\n\n    function getTextFromNode(node: estree.Node) {\n      if (node.type === 'Literal') {\n        return node.value;\n      } else {\n        return context.sourceCode.getText(node);\n      }\n    }\n\n    return {\n      'SwitchCase > SequenceExpression'(node: estree.Node) {\n        const expressions = (node as estree.SequenceExpression).expressions;\n        reportIssue(node, expressions[expressions.length - 1], expressions.length);\n      },\n      'SwitchCase > LogicalExpression'(node: estree.Node) {\n        if (!isSwitchTrue(getEnclosingSwitchStatement(context, node))) {\n          const firstElemAndNesting = getFirstElementAndNestingLevel(\n            node as estree.LogicalExpression,\n            0,\n          );\n          if (firstElemAndNesting) {\n            reportIssue(node, firstElemAndNesting[0], firstElemAndNesting[1] + 1);\n          }\n        }\n      },\n    };\n  },\n};\n\nfunction getEnclosingSwitchStatement(\n  context: Rule.RuleContext,\n  node: estree.Node,\n): estree.SwitchStatement {\n  const ancestors = context.sourceCode.getAncestors(node);\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    if (ancestors[i].type === 'SwitchStatement') {\n      return ancestors[i] as estree.SwitchStatement;\n    }\n  }\n  throw new Error('A switch case should have an enclosing switch statement');\n}\n\nfunction isSwitchTrue(node: estree.SwitchStatement) {\n  return isLiteral(node.discriminant) && node.discriminant.value === true;\n}\n\nfunction getFirstElementAndNestingLevel(\n  logicalExpression: estree.LogicalExpression,\n  currentLvl: number,\n): [estree.Node, number] | undefined {\n  if (logicalExpression.operator === '||') {\n    if (logicalExpression.left.type === 'LogicalExpression') {\n      return getFirstElementAndNestingLevel(logicalExpression.left, currentLvl + 1);\n    } else {\n      return [logicalExpression.left, currentLvl + 1];\n    }\n  }\n  return undefined;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S124/javascript\n\nimport { Rule } from 'eslint';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nexport type Options = [\n  {\n    regularExpression: string;\n    message: string;\n    flags: string;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          regularExpression: {\n            type: 'string',\n          },\n          message: {\n            type: 'string',\n          },\n          flags: {\n            type: 'string',\n          },\n        },\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const options = context.options[0] || {};\n    const flags = options.flags || '';\n    const cleanedFlags = 'gimusy'\n      .split('')\n      .filter(c => flags.includes(c))\n      .join('');\n    const pattern = options.regularExpression\n      ? new RegExp(options.regularExpression, cleanedFlags)\n      : undefined;\n    const message = options.message || 'The regular expression matches this comment.';\n\n    return {\n      'Program:exit': () => {\n        (context.sourceCode.getAllComments() as TSESTree.Comment[]).forEach(comment => {\n          const rawTextTrimmed = comment.value.trim();\n          if (pattern?.test(rawTextTrimmed)) {\n            context.report({\n              message,\n              loc: comment.loc,\n            });\n          }\n        });\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6353/javascript\n\nimport { Rule } from 'eslint';\nimport { CharacterClass, Flags, Quantifier, RegExpLiteral } from '@eslint-community/regexpp/ast';\nimport { createRegExpRule, RegexRuleContext } from '../helpers/regex';\n\nexport const rule: Rule.RuleModule = createRegExpRule(context => {\n  let flags: Flags;\n  return {\n    onRegExpLiteralEnter: (node: RegExpLiteral) => {\n      ({ flags } = node);\n    },\n    onCharacterClassEnter: (node: CharacterClass) => {\n      checkBulkyAnyCharacterClass(node, flags, context);\n      checkBulkyNumericCharacterClass(node, context);\n      checkBulkyAlphaNumericCharacterClass(node, context);\n    },\n    onQuantifierEnter: (node: Quantifier) => {\n      checkBulkyQuantifier(node, context);\n    },\n  };\n});\n\nfunction checkBulkyAnyCharacterClass(\n  node: CharacterClass,\n  flags: Flags,\n  context: RegexRuleContext,\n) {\n  if (node.negate || node.elements.length !== 2) {\n    return;\n  }\n  let hasLowerEscapeW = false;\n  let hasUpperEscapeW = false;\n  let hasLowerEscapeD = false;\n  let hasUpperEscapeD = false;\n  let hasLowerEscapeS = false;\n  let hasUpperEscapeS = false;\n  node.elements.forEach(element => {\n    hasLowerEscapeW ||=\n      element.type === 'CharacterSet' && element.kind === 'word' && !element.negate;\n    hasUpperEscapeW ||=\n      element.type === 'CharacterSet' && element.kind === 'word' && element.negate;\n    hasLowerEscapeD ||=\n      element.type === 'CharacterSet' && element.kind === 'digit' && !element.negate;\n    hasUpperEscapeD ||=\n      element.type === 'CharacterSet' && element.kind === 'digit' && element.negate;\n    hasLowerEscapeS ||=\n      element.type === 'CharacterSet' && element.kind === 'space' && !element.negate;\n    hasUpperEscapeS ||=\n      element.type === 'CharacterSet' && element.kind === 'space' && element.negate;\n  });\n  const isBulkyAnyCharacterClass =\n    (hasLowerEscapeW && hasUpperEscapeW) ||\n    (hasLowerEscapeD && hasUpperEscapeD) ||\n    (hasLowerEscapeS && hasUpperEscapeS && flags.dotAll);\n  if (isBulkyAnyCharacterClass) {\n    context.reportRegExpNode({\n      message: `Use concise character class syntax '.' instead of '${node.raw}'.`,\n      node: context.node,\n      regexpNode: node,\n    });\n  }\n}\n\nfunction checkBulkyNumericCharacterClass(node: CharacterClass, context: RegexRuleContext) {\n  if (node.elements.length === 1) {\n    const [element] = node.elements;\n    const hasDigit = element.type === 'CharacterClassRange' && element.raw === '0-9';\n    if (hasDigit) {\n      const expected = node.negate ? '\\\\D' : '\\\\d';\n      const actual = node.raw;\n      context.reportRegExpNode({\n        message: `Use concise character class syntax '${expected}' instead of '${actual}'.`,\n        node: context.node,\n        regexpNode: node,\n      });\n    }\n  }\n}\n\nfunction checkBulkyAlphaNumericCharacterClass(node: CharacterClass, context: RegexRuleContext) {\n  if (node.elements.length === 4) {\n    let hasDigit = false,\n      hasLowerCase = false,\n      hasUpperCase = false,\n      hasUnderscore = false;\n    for (const element of node.elements) {\n      hasDigit ||= element.type === 'CharacterClassRange' && element.raw === '0-9';\n      hasLowerCase ||= element.type === 'CharacterClassRange' && element.raw === 'a-z';\n      hasUpperCase ||= element.type === 'CharacterClassRange' && element.raw === 'A-Z';\n      hasUnderscore ||= element.type === 'Character' && element.raw === '_';\n    }\n    if (hasDigit && hasLowerCase && hasUpperCase && hasUnderscore) {\n      const expected = node.negate ? '\\\\W' : '\\\\w';\n      const actual = node.raw;\n      context.reportRegExpNode({\n        message: `Use concise character class syntax '${expected}' instead of '${actual}'.`,\n        node: context.node,\n        regexpNode: node,\n      });\n    }\n  }\n}\n\nfunction checkBulkyQuantifier(node: Quantifier, context: RegexRuleContext) {\n  const { raw } = node;\n  let message: string | undefined;\n  let bulkyQuantifier: { concise: string; verbose: string } | undefined;\n\n  if (/\\{0,1\\}\\??$/.test(raw)) {\n    bulkyQuantifier = { concise: '?', verbose: '{0,1}' };\n  } else if (/\\{0,0\\}\\??$/.test(raw)) {\n    message = `Remove redundant ${node.element.raw}{0,0}.`;\n  } else if (/\\{0\\}\\??$/.test(raw)) {\n    message = `Remove redundant ${node.element.raw}{0}.`;\n  } else if (/\\{1,1\\}\\??$/.test(raw)) {\n    message = 'Remove redundant quantifier {1,1}.';\n  } else if (/\\{1\\}\\??$/.test(raw)) {\n    message = 'Remove redundant quantifier {1}.';\n  } else if (/\\{0,\\}\\??$/.test(raw)) {\n    bulkyQuantifier = { concise: '*', verbose: '{0,}' };\n  } else if (/\\{1,\\}\\??$/.test(raw)) {\n    bulkyQuantifier = { concise: '+', verbose: '{1,}' };\n  } else if (/\\{(\\d+),\\1\\}\\??$/.test(raw)) {\n    bulkyQuantifier = { concise: `{${node.min}}`, verbose: `{${node.min},${node.min}}` };\n  }\n\n  if (bulkyQuantifier) {\n    message = `Use concise quantifier syntax '${bulkyQuantifier.concise}' instead of '${bulkyQuantifier.verbose}'.`;\n  }\n\n  if (message) {\n    context.reportRegExpNode({\n      message,\n      node: context.node,\n      regexpNode: node,\n    });\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3973/javascript\n\nimport { Rule, AST, SourceCode } from 'eslint';\nimport * as estree from 'estree';\nimport { getParent, LoopLike, toEncodedMessage } from '../helpers';\nimport { TSESLint } from '@typescript-eslint/utils';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n\n  create(context: Rule.RuleContext) {\n    const sourceCode = context.sourceCode;\n    return {\n      IfStatement: (node: estree.Node) => {\n        const ifStatement = node as estree.IfStatement;\n        const parent = getParent(context, node);\n        if (parent && parent.type !== 'IfStatement') {\n          const firstToken = sourceCode.getFirstToken(node);\n          checkIndentation(firstToken, ifStatement.consequent, context);\n        }\n\n        if (ifStatement.alternate) {\n          const elseToken = sourceCode.getTokenBefore(\n            ifStatement.alternate,\n            token => token.type === 'Keyword' && token.value === 'else',\n          );\n          const alternate = ifStatement.alternate;\n          if (alternate.type === 'IfStatement') {\n            //case with \"else if\", we have to check the consequent of the next if\n            checkIndentation(elseToken, alternate.consequent, context);\n          } else {\n            checkIndentation(\n              getPrecedingBrace(elseToken, sourceCode) ?? elseToken,\n              alternate,\n              context,\n              elseToken,\n            );\n          }\n        }\n      },\n      'WhileStatement, ForStatement, ForInStatement, ForOfStatement': (node: estree.Node) => {\n        const firstToken = sourceCode.getFirstToken(node);\n        checkIndentation(firstToken, (node as LoopLike).body, context);\n      },\n    };\n  },\n};\n\nfunction checkIndentation(\n  firstToken: AST.Token | null,\n  statement: estree.Statement,\n  context: Rule.RuleContext,\n  tokenToReport = firstToken,\n) {\n  if (firstToken && tokenToReport && statement.type !== 'BlockStatement') {\n    const firstStatementToken = context.sourceCode.getFirstToken(statement);\n    if (\n      firstStatementToken &&\n      firstToken.loc.start.column >= firstStatementToken.loc.start.column\n    ) {\n      const message =\n        `Use curly braces or indentation to denote the code conditionally ` +\n        `executed by this \"${tokenToReport.value}\".`;\n      context.report({\n        message: toEncodedMessage(message, [firstStatementToken as TSESLint.AST.Token]),\n        loc: tokenToReport.loc,\n      });\n    }\n  }\n}\n\nfunction getPrecedingBrace(elseToken: AST.Token | null, sourceCode: SourceCode) {\n  if (elseToken) {\n    const tokenBeforeElse = sourceCode.getTokenBefore(elseToken);\n    if (\n      tokenBeforeElse?.value === '}' &&\n      tokenBeforeElse.loc.start.line === elseToken.loc.start.line\n    ) {\n      return tokenBeforeElse;\n    }\n  }\n  return undefined;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5757/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport {\n  getValueOfExpression,\n  toEncodedMessage,\n  getFullyQualifiedName,\n  getProperty,\n} from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nconst MESSAGE = 'Make sure confidential information is not logged here.';\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      NewExpression: (node: estree.Node) => {\n        const newExpression = node as estree.NewExpression;\n        const { callee } = newExpression;\n        if (getFullyQualifiedName(context, callee) !== 'signale.Signale') {\n          return;\n        }\n        if (newExpression.arguments.length === 0) {\n          context.report({ node: callee, message: toEncodedMessage(MESSAGE, []) });\n          return;\n        }\n        const firstArgument = getValueOfExpression(\n          context,\n          newExpression.arguments[0],\n          'ObjectExpression',\n        );\n        if (!firstArgument) {\n          // Argument exists but its value is unknown\n          return;\n        }\n        const secrets = getProperty(firstArgument, 'secrets', context);\n        if (\n          secrets &&\n          secrets.value.type === 'ArrayExpression' &&\n          secrets.value.elements.length === 0\n        ) {\n          context.report({\n            node: callee,\n            message: toEncodedMessage(MESSAGE, [secrets as TSESTree.Node]),\n          });\n        } else if (!secrets) {\n          context.report({\n            node: callee,\n            message: toEncodedMessage(MESSAGE, [firstArgument as TSESTree.Node]),\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1848/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getFullyQualifiedName, isTestCode } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      removeInstantiationOf:\n        'Either remove this useless object instantiation of \"{{constructor}}\" or use it.',\n      removeInstantiation: 'Either remove this useless object instantiation or use it.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const sourceCode = context.sourceCode;\n    return {\n      'ExpressionStatement > NewExpression': (node: estree.NewExpression) => {\n        if (isTestCode(context) || isTryable(node, context)) {\n          return;\n        }\n        const { callee } = node;\n        if (callee.type === 'Identifier' || callee.type === 'MemberExpression') {\n          const calleeText = sourceCode.getText(callee);\n          if (isException(context, callee, calleeText)) {\n            return;\n          }\n          const reportLocation = {\n            start: node.loc!.start,\n            end: callee.loc!.end,\n          };\n          reportIssue(reportLocation, `${calleeText}`, 'removeInstantiationOf', context);\n        } else {\n          const newToken = sourceCode.getFirstToken(node);\n          reportIssue(newToken!.loc, '', 'removeInstantiation', context);\n        }\n      },\n    };\n  },\n};\n\nfunction isTryable(node: estree.Node, context: Rule.RuleContext) {\n  const ancestors = context.sourceCode.getAncestors(node);\n  let parent = undefined;\n  let child = node;\n  while ((parent = ancestors.pop()) !== undefined) {\n    if (parent.type === 'TryStatement' && parent.block === child) {\n      return true;\n    }\n    child = parent;\n  }\n  return false;\n}\n\nfunction reportIssue(\n  loc: { start: estree.Position; end: estree.Position },\n  objectText: string,\n  messageId: string,\n  context: Rule.RuleContext,\n) {\n  context.report({\n    messageId,\n    data: {\n      constructor: objectText,\n    },\n    loc,\n  });\n}\n\n/**\n * These exceptions are based on community requests and Peach\n */\nfunction isException(\n  context: Rule.RuleContext,\n  node: estree.Identifier | estree.MemberExpression,\n  name: string,\n) {\n  if (name === 'Notification') {\n    return true;\n  }\n\n  const fqn = getFullyQualifiedName(context, node);\n  return fqn === 'vue' || fqn === '@ag-grid-community.core.Grid' || fqn?.startsWith('aws-cdk-lib');\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2598/javascript\n\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  getLhsVariable,\n  getValueOfExpression,\n  getVariableFromName,\n  toEncodedMessage,\n  getFullyQualifiedName,\n  getProperty,\n} from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nconst FORMIDABLE_MODULE = 'formidable';\nconst KEEP_EXTENSIONS = 'keepExtensions';\nconst UPLOAD_DIR = 'uploadDir';\n\nconst MULTER_MODULE = 'multer';\nconst STORAGE_OPTION = 'storage';\nconst DESTINATION_OPTION = 'destination';\n\nconst formidableObjects: Map<\n  Scope.Variable,\n  { uploadDirSet: boolean; keepExtensions: boolean; callExpression: estree.CallExpression }\n> = new Map();\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      NewExpression(node: estree.Node) {\n        checkCallExpression(context, node as estree.NewExpression);\n      },\n      CallExpression(node: estree.Node) {\n        checkCallExpression(context, node as estree.CallExpression);\n      },\n      AssignmentExpression(node: estree.Node) {\n        visitAssignment(context, node as estree.AssignmentExpression);\n      },\n      Program() {\n        formidableObjects.clear();\n      },\n      'Program:exit'() {\n        formidableObjects.forEach(value =>\n          report(context, value.uploadDirSet, value.keepExtensions, value.callExpression),\n        );\n      },\n    };\n  },\n};\n\nfunction checkCallExpression(context: Rule.RuleContext, callExpression: estree.CallExpression) {\n  const { callee } = callExpression;\n  if (callee.type !== 'Identifier') {\n    return;\n  }\n\n  const fqn = getFullyQualifiedName(context, callee);\n  if (!fqn) {\n    return;\n  }\n  const [moduleName] = fqn.split('.');\n\n  if (moduleName === FORMIDABLE_MODULE) {\n    checkFormidable(context, callExpression);\n  }\n\n  if (moduleName === MULTER_MODULE) {\n    checkMulter(context, callExpression);\n  }\n}\n\nfunction checkFormidable(context: Rule.RuleContext, callExpression: estree.CallExpression) {\n  if (callExpression.arguments.length === 0) {\n    const formVariable = getLhsVariable(context, callExpression);\n    if (formVariable) {\n      formidableObjects.set(formVariable, {\n        uploadDirSet: false,\n        keepExtensions: false,\n        callExpression,\n      });\n    }\n    return;\n  }\n\n  const options = getValueOfExpression(context, callExpression.arguments[0], 'ObjectExpression');\n  if (options) {\n    report(\n      context,\n      !!getProperty(options, UPLOAD_DIR, context),\n      keepExtensionsValue(getProperty(options, KEEP_EXTENSIONS, context)?.value),\n      callExpression,\n    );\n  }\n}\n\nfunction checkMulter(context: Rule.RuleContext, callExpression: estree.CallExpression) {\n  if (callExpression.arguments.length === 0) {\n    return;\n  }\n  const multerOptions = getValueOfExpression(\n    context,\n    callExpression.arguments[0],\n    'ObjectExpression',\n  );\n\n  if (!multerOptions) {\n    return;\n  }\n\n  const storagePropertyValue = getProperty(multerOptions, STORAGE_OPTION, context)?.value;\n  if (storagePropertyValue) {\n    const storageValue = getValueOfExpression(context, storagePropertyValue, 'CallExpression');\n\n    if (storageValue) {\n      const diskStorageCallee = getDiskStorageCalleeIfUnsafeStorage(context, storageValue);\n      if (diskStorageCallee) {\n        report(context, false, false, callExpression, {\n          node: diskStorageCallee,\n          message: 'no destination specified',\n        });\n      }\n    }\n  }\n}\n\nfunction getDiskStorageCalleeIfUnsafeStorage(\n  context: Rule.RuleContext,\n  storageCreation: estree.CallExpression,\n) {\n  const { arguments: args, callee } = storageCreation;\n  if (args.length > 0 && isMemberWithProperty(callee, 'diskStorage')) {\n    const storageOptions = getValueOfExpression(context, args[0], 'ObjectExpression');\n    if (storageOptions && !getProperty(storageOptions, DESTINATION_OPTION, context)) {\n      return callee;\n    }\n  }\n\n  return false;\n}\n\nfunction isMemberWithProperty(expr: estree.Node, property: string) {\n  return (\n    expr.type === 'MemberExpression' &&\n    expr.property.type === 'Identifier' &&\n    expr.property.name === property\n  );\n}\n\nfunction keepExtensionsValue(extensionValue?: estree.Node): boolean {\n  if (\n    extensionValue &&\n    extensionValue.type === 'Literal' &&\n    typeof extensionValue.value === 'boolean'\n  ) {\n    return extensionValue.value;\n  }\n\n  return false;\n}\n\nfunction visitAssignment(context: Rule.RuleContext, assignment: estree.AssignmentExpression) {\n  const variableProperty = getVariablePropertyFromAssignment(context, assignment);\n  if (!variableProperty) {\n    return;\n  }\n\n  const { objectVariable, property } = variableProperty;\n\n  const formOptions = formidableObjects.get(objectVariable);\n  if (formOptions !== undefined) {\n    if (property === UPLOAD_DIR) {\n      formOptions.uploadDirSet = true;\n    }\n\n    if (property === KEEP_EXTENSIONS) {\n      formOptions.keepExtensions = keepExtensionsValue(assignment.right);\n    }\n  }\n}\n\n/**\n * for `x.foo = 42` returns 'x' variable and 'foo' property string\n */\nexport function getVariablePropertyFromAssignment(\n  context: Rule.RuleContext,\n  assignment: estree.AssignmentExpression,\n): { objectVariable: Scope.Variable; property: string } | undefined {\n  if (assignment.left.type !== 'MemberExpression') {\n    return undefined;\n  }\n\n  const memberExpr = assignment.left;\n  if (memberExpr.object.type === 'Identifier' && memberExpr.property.type === 'Identifier') {\n    const objectVariable = getVariableFromName(context, memberExpr.object.name, memberExpr);\n    if (objectVariable) {\n      return { objectVariable, property: memberExpr.property.name };\n    }\n  }\n\n  return undefined;\n}\n\nfunction report(\n  context: Rule.RuleContext,\n  uploadDirSet: boolean,\n  keepExtensions: boolean,\n  callExpression: estree.CallExpression,\n  secondaryLocation?: { node: estree.Node; message: string },\n) {\n  let message;\n\n  if (keepExtensions && uploadDirSet) {\n    message = 'Restrict the extension of uploaded files.';\n  } else if (!keepExtensions && !uploadDirSet) {\n    message = 'Restrict folder destination of uploaded files.';\n  } else if (keepExtensions && !uploadDirSet) {\n    message = 'Restrict the extension and folder destination of uploaded files.';\n  }\n\n  if (message) {\n    if (secondaryLocation) {\n      message = toEncodedMessage(\n        message,\n        [secondaryLocation.node as TSESTree.Node],\n        [secondaryLocation.message],\n      );\n    } else {\n      message = toEncodedMessage(message, []);\n    }\n\n    context.report({\n      message,\n      node: callExpression.callee,\n    });\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5693/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport { getVariablePropertyFromAssignment } from '../S2598/rule';\nimport { parse } from 'bytes';\nimport {\n  getLhsVariable,\n  getValueOfExpression,\n  getFullyQualifiedName,\n  getProperty,\n} from '../helpers';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nconst FORMIDABLE_MODULE = 'formidable';\nconst MAX_FILE_SIZE = 'maxFileSize';\nconst FORMIDABLE_DEFAULT_SIZE = 200 * 1024 * 1024;\n\nconst MULTER_MODULE = 'multer';\nconst LIMITS_OPTION = 'limits';\nconst FILE_SIZE_OPTION = 'fileSize';\n\nconst BODY_PARSER_MODULE = 'body-parser';\nconst BODY_PARSER_DEFAULT_SIZE = parse('100kb');\n\nconst formidableObjects: Map<Scope.Variable, { maxFileSize: number; nodeToReport: estree.Node }> =\n  new Map();\n\nexport type Options = [\n  {\n    fileUploadSizeLimit: number;\n    standardSizeLimit: number;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    messages: {\n      safeLimit: 'Make sure the content length limit is safe here.',\n    },\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          fileUploadSizeLimit: {\n            type: 'integer',\n          },\n          standardSizeLimit: {\n            type: 'integer',\n          },\n        },\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      NewExpression(node: estree.Node) {\n        checkCallExpression(context, node as estree.NewExpression);\n      },\n      CallExpression(node: estree.Node) {\n        checkCallExpression(context, node as estree.CallExpression);\n      },\n      AssignmentExpression(node: estree.Node) {\n        visitAssignment(context, node as estree.AssignmentExpression);\n      },\n      Program() {\n        formidableObjects.clear();\n      },\n      'Program:exit'() {\n        formidableObjects.forEach(value => report(context, value.nodeToReport, value.maxFileSize));\n      },\n    };\n  },\n};\n\nfunction checkCallExpression(context: Rule.RuleContext, callExpression: estree.CallExpression) {\n  const { callee } = callExpression;\n  let identifierFromModule: estree.Identifier;\n  if (callee.type === 'MemberExpression' && callee.object.type === 'Identifier') {\n    identifierFromModule = callee.object;\n  } else if (callee.type === 'Identifier') {\n    identifierFromModule = callee;\n  } else {\n    return;\n  }\n\n  const fqn = getFullyQualifiedName(context, identifierFromModule);\n  if (!fqn) {\n    return;\n  }\n  const [moduleName] = fqn.split('.');\n\n  if (moduleName === FORMIDABLE_MODULE) {\n    checkFormidable(context, callExpression);\n  }\n\n  if (moduleName === MULTER_MODULE) {\n    checkMulter(context, callExpression);\n  }\n\n  if (moduleName === BODY_PARSER_MODULE) {\n    checkBodyParser(context, callExpression);\n  }\n}\n\nfunction checkFormidable(context: Rule.RuleContext, callExpression: estree.CallExpression) {\n  if (callExpression.arguments.length === 0) {\n    // options will be set later through member assignment\n    const formVariable = getLhsVariable(context, callExpression);\n    if (formVariable) {\n      formidableObjects.set(formVariable, {\n        maxFileSize: FORMIDABLE_DEFAULT_SIZE,\n        nodeToReport: callExpression,\n      });\n    }\n    return;\n  }\n\n  const options = getValueOfExpression(context, callExpression.arguments[0], 'ObjectExpression');\n  if (options) {\n    const property = getProperty(options, MAX_FILE_SIZE, context);\n    checkSize(context, callExpression, property, FORMIDABLE_DEFAULT_SIZE);\n  }\n}\n\nfunction checkMulter(context: Rule.RuleContext, callExpression: estree.CallExpression) {\n  if (callExpression.arguments.length === 0) {\n    report(context, callExpression.callee);\n    return;\n  }\n  const multerOptions = getValueOfExpression(\n    context,\n    callExpression.arguments[0],\n    'ObjectExpression',\n  );\n\n  if (!multerOptions) {\n    return;\n  }\n\n  const limitsPropertyValue = getProperty(multerOptions, LIMITS_OPTION, context)?.value;\n  if (limitsPropertyValue && limitsPropertyValue.type === 'ObjectExpression') {\n    const fileSizeProperty = getProperty(limitsPropertyValue, FILE_SIZE_OPTION, context);\n    checkSize(context, callExpression, fileSizeProperty);\n  }\n\n  if (!limitsPropertyValue) {\n    report(context, callExpression.callee);\n  }\n}\n\nfunction checkBodyParser(context: Rule.RuleContext, callExpression: estree.CallExpression) {\n  if (callExpression.arguments.length === 0) {\n    checkSize(context, callExpression, undefined, BODY_PARSER_DEFAULT_SIZE, true);\n    return;\n  }\n  const options = getValueOfExpression(context, callExpression.arguments[0], 'ObjectExpression');\n\n  if (!options) {\n    return;\n  }\n\n  const limitsProperty = getProperty(options, LIMITS_OPTION, context);\n  checkSize(context, callExpression, limitsProperty, BODY_PARSER_DEFAULT_SIZE, true);\n}\n\nfunction checkSize(\n  context: Rule.RuleContext,\n  callExpr: estree.CallExpression,\n  property?: estree.Property | null,\n  defaultLimit?: number,\n  useStandardSizeLimit = false,\n) {\n  if (property) {\n    const maxFileSizeValue = getSizeValue(context, property.value);\n    if (maxFileSizeValue) {\n      report(context, property, maxFileSizeValue, useStandardSizeLimit);\n    }\n  } else {\n    report(context, callExpr, defaultLimit, useStandardSizeLimit);\n  }\n}\n\nfunction visitAssignment(context: Rule.RuleContext, assignment: estree.AssignmentExpression) {\n  const variableProperty = getVariablePropertyFromAssignment(context, assignment);\n  if (!variableProperty) {\n    return;\n  }\n\n  const { objectVariable, property } = variableProperty;\n\n  const formOptions = formidableObjects.get(objectVariable);\n  if (formOptions && property === MAX_FILE_SIZE) {\n    const rhsValue = getSizeValue(context, assignment.right);\n    if (rhsValue !== undefined) {\n      formOptions.maxFileSize = rhsValue;\n      formOptions.nodeToReport = assignment;\n    } else {\n      formidableObjects.delete(objectVariable);\n    }\n  }\n}\n\nfunction getSizeValue(context: Rule.RuleContext, node: estree.Node): number | undefined {\n  const literal = getValueOfExpression(context, node, 'Literal');\n  if (literal) {\n    if (typeof literal.value === 'number') {\n      return literal.value;\n    } else if (typeof literal.value === 'string') {\n      return parse(literal.value);\n    }\n  }\n  return undefined;\n}\n\nfunction report(\n  context: Rule.RuleContext,\n  nodeToReport: estree.Node,\n  size?: number,\n  useStandardSizeLimit = false,\n) {\n  const [{ fileUploadSizeLimit, standardSizeLimit }] = context.options as Options;\n  const limitToCompare = useStandardSizeLimit ? standardSizeLimit : fileUploadSizeLimit;\n  if (!size || size > limitToCompare) {\n    context.report({\n      messageId: 'safeLimit',\n      node: nodeToReport,\n    });\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5728/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { Express, getFullyQualifiedName, getPropertyWithValue } from '../helpers';\n\nconst HELMET = 'helmet';\nconst CONTENT_SECURITY_POLICY = 'contentSecurityPolicy';\n\nexport const rule: Rule.RuleModule = Express.SensitiveMiddlewarePropertyRule(\n  findFalseContentSecurityPolicyPropertyFromHelmet,\n  `Make sure not enabling content security policy fetch directives is safe here.`,\n);\n\n/**\n * Looks for property `contentSecurityPolicy: false` in node looking\n * somewhat similar to `helmet(<options>?)`, and returns it.\n */\nfunction findFalseContentSecurityPolicyPropertyFromHelmet(\n  context: Rule.RuleContext,\n  node: estree.CallExpression,\n): estree.Property[] {\n  let sensitive: estree.Property | undefined;\n  const { callee, arguments: args } = node;\n  if (\n    getFullyQualifiedName(context, callee) === HELMET &&\n    args.length === 1 &&\n    args[0].type === 'ObjectExpression'\n  ) {\n    sensitive = getPropertyWithValue(context, args[0], CONTENT_SECURITY_POLICY, false);\n  }\n  return sensitive ? [sensitive] : [];\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  isIdentifier,\n  getValueOfExpression,\n  toEncodedMessage,\n  getFullyQualifiedName,\n  getProperty,\n} from '.';\n\nexport class CookieFlagCheck {\n  issueMessage: string;\n\n  constructor(\n    readonly context: Rule.RuleContext,\n    readonly flag: 'httpOnly' | 'secure',\n  ) {\n    this.issueMessage = `Make sure creating this cookie without the \"${flag}\" flag is safe.`;\n  }\n\n  private checkCookieSession(callExpression: estree.CallExpression) {\n    // Sensitive argument for cookie session is first one\n    this.checkSensitiveCookieArgument(callExpression, 0);\n  }\n\n  private checkCookiesMethodCall(callExpression: estree.CallExpression) {\n    if (!isIdentifier((callExpression.callee as estree.MemberExpression).property, 'set')) {\n      return;\n    }\n    // Sensitive argument is third argument for \"cookies.set\" calls\n    this.checkSensitiveCookieArgument(callExpression, 2);\n  }\n\n  private checkCsurf(callExpression: estree.CallExpression) {\n    // Sensitive argument is first for csurf\n    const cookieProperty = this.checkSensitiveObjectArgument(callExpression, 0);\n    if (cookieProperty) {\n      // csurf cookie property can be passed as a boolean literal,\n      // in which case neither \"secure\" nor \"httponly\" are enabled by default\n      const cookiePropertyLiteral = getValueOfExpression(\n        this.context,\n        cookieProperty.value,\n        'Literal',\n      );\n      if (cookiePropertyLiteral?.value === true) {\n        this.context.report({\n          node: callExpression.callee,\n          message: toEncodedMessage(this.issueMessage, [cookiePropertyLiteral as TSESTree.Node]),\n        });\n      }\n    }\n  }\n\n  private checkExpressSession(callExpression: estree.CallExpression) {\n    // Sensitive argument is first for express-session\n    this.checkSensitiveObjectArgument(callExpression, 0);\n  }\n\n  private checkSensitiveCookieArgument(\n    callExpression: estree.CallExpression,\n    sensitiveArgumentIndex: number,\n  ) {\n    if (callExpression.arguments.length < sensitiveArgumentIndex + 1) {\n      return;\n    }\n    const sensitiveArgument = callExpression.arguments[sensitiveArgumentIndex];\n    const cookieObjectExpression = getValueOfExpression(\n      this.context,\n      sensitiveArgument,\n      'ObjectExpression',\n    );\n    if (!cookieObjectExpression) {\n      return;\n    }\n    this.checkFlagOnCookieExpression(\n      cookieObjectExpression,\n      sensitiveArgument,\n      cookieObjectExpression,\n      callExpression,\n    );\n  }\n\n  private checkSensitiveObjectArgument(\n    callExpression: estree.CallExpression,\n    argumentIndex: number,\n  ): estree.Property | undefined {\n    if (callExpression.arguments.length < argumentIndex + 1) {\n      return;\n    }\n    const firstArgument = callExpression.arguments[argumentIndex];\n    const objectExpression = getValueOfExpression(this.context, firstArgument, 'ObjectExpression');\n    if (!objectExpression) {\n      return;\n    }\n    const cookieProperty = getProperty(objectExpression, 'cookie', this.context);\n    if (!cookieProperty) {\n      return;\n    }\n    const cookiePropertyValue = getValueOfExpression(\n      this.context,\n      cookieProperty.value,\n      'ObjectExpression',\n    );\n    if (cookiePropertyValue) {\n      this.checkFlagOnCookieExpression(\n        cookiePropertyValue,\n        firstArgument,\n        objectExpression,\n        callExpression,\n      );\n      return;\n    }\n    return cookieProperty;\n  }\n\n  private checkFlagOnCookieExpression(\n    cookiePropertyValue: estree.ObjectExpression,\n    firstArgument: estree.Node,\n    objectExpression: estree.ObjectExpression,\n    callExpression: estree.CallExpression,\n  ) {\n    const flagProperty = getProperty(cookiePropertyValue, this.flag, this.context);\n    if (flagProperty) {\n      const flagPropertyValue = getValueOfExpression(this.context, flagProperty.value, 'Literal');\n      if (flagPropertyValue?.value === false) {\n        const secondaryLocations: estree.Node[] = [flagPropertyValue];\n        if (firstArgument !== objectExpression) {\n          secondaryLocations.push(objectExpression);\n        }\n        this.context.report({\n          node: callExpression.callee,\n          message: toEncodedMessage(this.issueMessage, secondaryLocations as TSESTree.Node[]),\n        });\n      }\n    }\n  }\n\n  public checkCookiesFromCallExpression(node: estree.Node) {\n    const callExpression = node as estree.CallExpression;\n    const { callee } = callExpression;\n    const fqn = getFullyQualifiedName(this.context, callee);\n    if (fqn === 'cookie-session') {\n      this.checkCookieSession(callExpression);\n      return;\n    }\n    if (fqn === 'csurf') {\n      this.checkCsurf(callExpression);\n      return;\n    }\n    if (fqn === 'express-session') {\n      this.checkExpressSession(callExpression);\n      return;\n    }\n    if (callee.type === 'MemberExpression') {\n      const objectValue = getValueOfExpression(this.context, callee.object, 'NewExpression');\n      if (objectValue && getFullyQualifiedName(this.context, objectValue.callee) === 'cookies') {\n        this.checkCookiesMethodCall(callExpression);\n      }\n    }\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3330/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { CookieFlagCheck } from '../helpers/cookie-flag-check';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      CallExpression: (node: estree.Node) =>\n        new CookieFlagCheck(context, 'httpOnly').checkCookiesFromCallExpression(node),\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2255/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isIdentifier } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      safeCookie: 'Make sure that cookie is written safely here.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    let usingExpressFramework = false;\n\n    return {\n      Program() {\n        // init flag for each file\n        usingExpressFramework = false;\n      },\n\n      Literal(node: estree.Node) {\n        if ((node as estree.Literal).value === 'express') {\n          usingExpressFramework = true;\n        }\n      },\n\n      AssignmentExpression(node: estree.Node) {\n        const { left } = node as estree.AssignmentExpression;\n        if (left.type === 'MemberExpression') {\n          const { object, property } = left;\n          if (isIdentifier(object, 'document') && isIdentifier(property, 'cookie')) {\n            context.report({\n              messageId: 'safeCookie',\n              node: left,\n            });\n          }\n        }\n      },\n\n      CallExpression(node: estree.Node) {\n        const { callee, arguments: args } = node as estree.CallExpression;\n        if (\n          callee.type === 'MemberExpression' &&\n          usingExpressFramework &&\n          isIdentifier(callee.property, 'cookie', 'cookies')\n        ) {\n          context.report({\n            messageId: 'safeCookie',\n            node,\n          });\n        }\n\n        if (\n          callee.type === 'MemberExpression' &&\n          isIdentifier(callee.property, 'setHeader') &&\n          isLiteral(args[0], 'Set-Cookie')\n        ) {\n          context.report({\n            messageId: 'safeCookie',\n            node: callee,\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction isLiteral(node: estree.Node | undefined, value: string) {\n  return node && node.type === 'Literal' && node.value === value;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5122/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  getUniqueWriteUsage,\n  toEncodedMessage,\n  getFullyQualifiedName,\n  getProperty,\n} from '../helpers';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nconst MESSAGE = `Make sure that enabling CORS is safe here.`;\n\nconst CORS_HEADER = 'Access-Control-Allow-Origin';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    function report(node: estree.Node, ...secondaryLocations: estree.Node[]) {\n      const message = toEncodedMessage(MESSAGE, secondaryLocations as TSESTree.Node[]);\n      context.report({ message, node });\n    }\n\n    function isCorsCall(call: estree.CallExpression) {\n      return getFullyQualifiedName(context, call) === 'cors';\n    }\n\n    return {\n      CallExpression(node: estree.Node) {\n        const call = node as estree.CallExpression;\n\n        if (isCorsCall(call)) {\n          if (call.arguments.length === 0) {\n            report(call);\n            return;\n          }\n          const [arg] = call.arguments;\n          let sensitiveCorsProperty = getSensitiveCorsProperty(arg, context);\n          if (sensitiveCorsProperty) {\n            report(sensitiveCorsProperty);\n          }\n          if (arg?.type === 'Identifier') {\n            const usage = getUniqueWriteUsage(context, arg.name, arg);\n            sensitiveCorsProperty = getSensitiveCorsProperty(usage, context);\n            if (sensitiveCorsProperty) {\n              report(sensitiveCorsProperty, arg);\n            }\n          }\n        }\n\n        if (isSettingCorsHeader(call)) {\n          report(call);\n        }\n      },\n\n      ObjectExpression(node: estree.Node) {\n        const objProperty = getProperty(node, CORS_HEADER, context);\n        if (objProperty && isAnyDomain(objProperty.value)) {\n          report(objProperty);\n        }\n      },\n    };\n  },\n};\n\nfunction isCorsHeader(node: estree.Node) {\n  const header = node as TSESTree.Node;\n  return header && header.type === 'Literal' && header.value === CORS_HEADER;\n}\n\nfunction isAnyDomain(node: estree.Node) {\n  const domain = node as TSESTree.Node;\n  return domain && domain.type === 'Literal' && domain.value === '*';\n}\n\nfunction getSensitiveCorsProperty(\n  node: estree.Node | undefined | null,\n  context: Rule.RuleContext,\n): estree.Property | undefined {\n  const originProperty = getProperty(node, 'origin', context);\n  if (originProperty && isAnyDomain(originProperty.value)) {\n    return originProperty;\n  }\n  return undefined;\n}\n\nfunction isSettingCorsHeader(call: estree.CallExpression) {\n  return isCorsHeader(call.arguments[0]) && isAnyDomain(call.arguments[1]);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4502/javascript\n\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  isIdentifier,\n  isLiteral,\n  flattenArgs,\n  toEncodedMessage,\n  getFullyQualifiedName,\n  isRequireModule,\n  getProperty,\n} from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nconst CSURF_MODULE = 'csurf';\nconst SAFE_METHODS = ['GET', 'HEAD', 'OPTIONS'];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    let globalCsrfProtection = false;\n    let importedCsrfMiddleware = false;\n\n    function checkIgnoredMethods(node: estree.Property) {\n      if (node.value.type === 'ArrayExpression') {\n        const arrayExpr = node.value;\n        const unsafeMethods = arrayExpr.elements\n          .filter(isLiteral)\n          .filter(e => typeof e.value === 'string' && !SAFE_METHODS.includes(e.value));\n        if (unsafeMethods.length > 0) {\n          const [first, ...rest] = unsafeMethods;\n          context.report({\n            message: toEncodedMessage(\n              'Make sure disabling CSRF protection is safe here.',\n              rest as TSESTree.Node[],\n            ),\n            node: first,\n          });\n        }\n      }\n    }\n\n    function isCsurfMiddleware(node: estree.Node | undefined) {\n      return node && getFullyQualifiedName(context, node) === CSURF_MODULE;\n    }\n\n    function checkCallExpression(callExpression: estree.CallExpression) {\n      const { callee } = callExpression;\n\n      // require('csurf')\n      if (isRequireModule(callExpression, CSURF_MODULE)) {\n        importedCsrfMiddleware = true;\n      }\n\n      // csurf(...)\n      if (getFullyQualifiedName(context, callee) === CSURF_MODULE) {\n        const [args] = callExpression.arguments;\n        const ignoredMethods = getProperty(args, 'ignoreMethods', context);\n        if (ignoredMethods) {\n          checkIgnoredMethods(ignoredMethods);\n        }\n      }\n\n      // app.use(csurf(...))\n      if (callee.type === 'MemberExpression') {\n        if (\n          isIdentifier(callee.property, 'use') &&\n          flattenArgs(context, callExpression.arguments).find(isCsurfMiddleware)\n        ) {\n          globalCsrfProtection = true;\n        }\n        if (\n          isIdentifier(callee.property, 'post', 'put', 'delete', 'patch') &&\n          !globalCsrfProtection &&\n          importedCsrfMiddleware &&\n          !callExpression.arguments.some(arg => isCsurfMiddleware(arg))\n        ) {\n          context.report({\n            message: toEncodedMessage('Make sure not using CSRF protection is safe here.', []),\n            node: callee,\n          });\n        }\n      }\n    }\n\n    return {\n      Program() {\n        globalCsrfProtection = false;\n      },\n      CallExpression(node: estree.Node) {\n        checkCallExpression(node as estree.CallExpression);\n      },\n      ImportDeclaration(node: estree.Node) {\n        if ((node as estree.ImportDeclaration).source.value === CSURF_MODULE) {\n          importedCsrfMiddleware = true;\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1541/javascript\n\nimport { Rule, AST } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  EncodedMessage,\n  IssueLocation,\n  getMainFunctionTokenLocation,\n} from 'eslint-plugin-sonarjs/lib/src/utils/locations';\nimport { FunctionNodeType, isFunctionNode, getParent, RuleContext } from '../helpers';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\nimport { childrenOf } from '../../linter';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nexport type Options = [\n  {\n    threshold: number;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          threshold: {\n            type: 'integer',\n          },\n        },\n      },\n      {\n        type: 'string',\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const [{ threshold }] = context.options as Options;\n    let functionsWithParent: Map<estree.Node, estree.Node | undefined>;\n    let functionsDefiningModule: estree.Node[];\n    let functionsImmediatelyInvoked: estree.Node[];\n    return {\n      Program: () => {\n        functionsWithParent = new Map<estree.Node, estree.Node>();\n        functionsDefiningModule = [];\n        functionsImmediatelyInvoked = [];\n      },\n      'Program:exit': () => {\n        functionsWithParent.forEach((parent, func) => {\n          if (\n            !functionsDefiningModule.includes(func) &&\n            !functionsImmediatelyInvoked.includes(func)\n          ) {\n            raiseOnUnauthorizedComplexity(func as FunctionNodeType, parent, threshold, context);\n          }\n        });\n      },\n      'FunctionDeclaration, FunctionExpression, ArrowFunctionExpression': (node: estree.Node) =>\n        functionsWithParent.set(node, getParent(context, node)),\n      \"CallExpression[callee.type='Identifier'][callee.name='define'] FunctionExpression\": (\n        node: estree.Node,\n      ) => functionsDefiningModule.push(node),\n      \"NewExpression[callee.type='FunctionExpression'], CallExpression[callee.type='FunctionExpression']\":\n        (node: estree.Node) =>\n          functionsImmediatelyInvoked.push((node as estree.NewExpression).callee),\n    };\n  },\n};\n\nfunction raiseOnUnauthorizedComplexity(\n  node: FunctionNodeType,\n  parent: estree.Node | undefined,\n  threshold: number,\n  context: Rule.RuleContext,\n): void {\n  const tokens = computeCyclomaticComplexity(node, parent, context);\n  const complexity = tokens.length;\n  if (complexity > threshold) {\n    context.report({\n      message: toEncodedMessage(complexity, threshold, tokens),\n      loc: getMainFunctionTokenLocation(\n        node as TSESTree.FunctionLike,\n        parent as TSESTree.Node,\n        context as unknown as RuleContext,\n      ),\n    });\n  }\n}\n\nfunction toEncodedMessage(\n  complexity: number,\n  threshold: number,\n  tokens: ComplexityToken[],\n): string {\n  const encodedMessage: EncodedMessage = {\n    message: `Function has a complexity of ${complexity} which is greater than ${threshold} authorized.`,\n    cost: complexity - threshold,\n    secondaryLocations: tokens.map(toSecondaryLocation),\n  };\n  return JSON.stringify(encodedMessage);\n}\n\nfunction toSecondaryLocation(token: ComplexityToken): IssueLocation {\n  return {\n    line: token.loc.start.line,\n    column: token.loc.start.column,\n    endLine: token.loc.end.line,\n    endColumn: token.loc.end.column,\n    message: '+1',\n  };\n}\n\nfunction computeCyclomaticComplexity(\n  node: estree.Node,\n  parent: estree.Node | undefined,\n  context: Rule.RuleContext,\n): ComplexityToken[] {\n  const visitor = new FunctionComplexityVisitor(node, parent, context);\n  visitor.visit();\n  return visitor.getComplexityTokens();\n}\n\ninterface ComplexityToken {\n  loc: AST.SourceLocation;\n}\n\nclass FunctionComplexityVisitor {\n  private readonly tokens: ComplexityToken[] = [];\n\n  constructor(\n    private readonly root: estree.Node,\n    private readonly parent: estree.Node | undefined,\n    private readonly context: Rule.RuleContext,\n  ) {}\n\n  visit() {\n    const visitNode = (node: estree.Node) => {\n      const { sourceCode } = this.context;\n      let token: ComplexityToken | undefined | null;\n\n      if (isFunctionNode(node)) {\n        if (node !== this.root) {\n          return;\n        } else {\n          token = {\n            loc: getMainFunctionTokenLocation(\n              node as TSESTree.FunctionLike,\n              this.parent as TSESTree.Node,\n              this.context as unknown as RuleContext,\n            ),\n          };\n        }\n      } else {\n        switch (node.type) {\n          case 'ConditionalExpression':\n            token = sourceCode.getFirstTokenBetween(\n              node.test,\n              node.consequent,\n              token => token.value === '?',\n            );\n            break;\n          case 'SwitchCase':\n            // ignore default case\n            if (!node.test) {\n              break;\n            }\n          case 'IfStatement':\n          case 'ForStatement':\n          case 'ForInStatement':\n          case 'ForOfStatement':\n          case 'WhileStatement':\n          case 'DoWhileStatement':\n            token = sourceCode.getFirstToken(node);\n            break;\n          case 'LogicalExpression':\n            token = sourceCode.getTokenAfter(\n              node.left,\n              token => ['||', '&&'].includes(token.value) && token.type === 'Punctuator',\n            );\n            break;\n        }\n      }\n\n      if (token) {\n        this.tokens.push(token);\n      }\n\n      childrenOf(node, sourceCode.visitorKeys).forEach(visitNode);\n    };\n\n    visitNode(this.root);\n  }\n\n  getComplexityTokens() {\n    return this.tokens;\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3798/javascript\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isIdentifier } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      defineLocally:\n        'Define this declaration in a local scope or bind explicitly the property to the global object.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      Program(node: estree.Node) {\n        const scope = context.sourceCode.getScope(node);\n        // As we parse every file with \"module\" source type, we find user defined global variables in the module scope\n        const moduleScope = findModuleScope(context);\n        moduleScope?.variables.forEach(variable => {\n          if (scope.variables.find(global => global.name === variable.name)) {\n            // Avoid reporting on redefinitions of actual global variables\n            return;\n          }\n          for (const def of variable.defs) {\n            const defNode = def.node;\n            if (\n              def.type === 'FunctionName' ||\n              (def.type === 'Variable' && def.parent?.kind === 'var' && !isRequire(def.node.init))\n            ) {\n              context.report({\n                node: defNode,\n                messageId: 'defineLocally',\n              });\n              return;\n            }\n          }\n        });\n      },\n    };\n  },\n};\n\nfunction findModuleScope(context: Rule.RuleContext) {\n  return context.sourceCode.scopeManager.scopes.find(s => s.type === 'module');\n}\n\nfunction isRequire(node: estree.Node | null | undefined) {\n  return (\n    node?.type === 'CallExpression' &&\n    node.arguments.length === 1 &&\n    isIdentifier(node.callee, 'require')\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1788/javascript\n\nimport { Rule } from 'eslint';\nimport { AssignmentPattern, BaseFunction } from 'estree';\nimport { interceptReport, isIdentifier } from '../helpers';\n\nconst NUM_ARGS_REDUX_REDUCER = 2;\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, reportExempting(isReduxReducer));\n}\n\nfunction reportExempting(\n  exemptionCondition: (enclosingFunction: BaseFunction) => boolean,\n): (context: Rule.RuleContext, reportDescriptor: Rule.ReportDescriptor) => void {\n  return (context, reportDescriptor) => {\n    if ('node' in reportDescriptor) {\n      const node = reportDescriptor['node'] as AssignmentPattern;\n      const scope = context.sourceCode.getScope(node);\n      const variable = scope.variables.find(value => isIdentifier(node.left, value.name));\n      const enclosingFunction = variable?.defs?.[0]?.node as BaseFunction;\n      if (enclosingFunction && !exemptionCondition(enclosingFunction)) {\n        context.report(reportDescriptor);\n      }\n    }\n  };\n}\n\nfunction isReduxReducer(enclosingFunction: BaseFunction) {\n  if (enclosingFunction.params.length === NUM_ARGS_REDUX_REDUCER) {\n    const [firstParam, secondParam] = enclosingFunction.params;\n    return (\n      firstParam.type === 'AssignmentPattern' &&\n      isIdentifier(firstParam.left, 'state') &&\n      isIdentifier(secondParam, 'action')\n    );\n  }\n  return false;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { tsEslintRules } from '../typescript-eslint';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(tsEslintRules['default-param-last']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1874/javascript\n\nimport { Rule } from 'eslint';\nimport { isRequiredParserServices } from '../helpers';\nimport * as ts from 'typescript';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      deprecation: '{{deprecation}}',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n    return {\n      Program: () => {\n        const program = services.program;\n        const checker = program.getTypeChecker();\n        const sourceFile = program.getSourceFile(context.filename);\n        const diagnostics: ts.DiagnosticWithLocation[] =\n          // @ts-ignore: TypeChecker#getSuggestionDiagnostics is not publicly exposed\n          checker.getSuggestionDiagnostics(sourceFile);\n        for (const diagnostic of diagnostics) {\n          if (diagnostic.reportsDeprecated === true) {\n            const sourceCode = context.sourceCode;\n            const start = sourceCode.getLocFromIndex(diagnostic.start);\n            const end = sourceCode.getLocFromIndex(diagnostic.start + diagnostic.length);\n            const loc = { start, end };\n            context.report({\n              loc,\n              messageId: 'deprecation',\n              data: {\n                deprecation: diagnostic.messageText as string,\n              },\n            });\n          }\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3514/javascript\n\nimport { Rule } from 'eslint';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport * as estree from 'estree';\nimport {\n  findFirstMatchingAncestor,\n  isIdentifier,\n  isNumberLiteral,\n  toEncodedMessage,\n} from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nconst MAX_INDEX = 4;\nconst isAllowedIndex = (idx: number) => idx >= 0 && idx <= MAX_INDEX;\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n\n  create(context: Rule.RuleContext) {\n    function visitStatements(statements: Array<estree.Statement | estree.ModuleDeclaration>) {\n      const declarationsByObject: Map<string, estree.VariableDeclarator[]> = new Map();\n\n      for (const statement of statements) {\n        if (statement.type === 'VariableDeclaration') {\n          visitDeclarations(declarationsByObject, statement.declarations);\n        } else {\n          checkDeclarationsBlock(declarationsByObject);\n          declarationsByObject.clear();\n        }\n      }\n      checkDeclarationsBlock(declarationsByObject);\n    }\n\n    function visitDeclarations(\n      declarationsByObject: Map<string, estree.VariableDeclarator[]>,\n      declarations: Array<estree.VariableDeclarator>,\n    ) {\n      for (const declaration of declarations) {\n        const id = declaration.id;\n        if (declaration.init && id.type === 'Identifier') {\n          const varName = id.name;\n          const expression = declaration.init;\n          if (expression.type !== 'MemberExpression') {\n            continue;\n          }\n          const property = expression.property;\n          if (\n            isIdentifier(property, varName) ||\n            (isNumberLiteral(property) && isAllowedIndex(property.value))\n          ) {\n            addDeclaration(declarationsByObject, expression.object, declaration);\n          }\n        }\n      }\n    }\n\n    function addDeclaration(\n      declarationsByObject: Map<string, estree.VariableDeclarator[]>,\n      object: estree.Node,\n      declaration: estree.VariableDeclarator,\n    ) {\n      const key = context.sourceCode.getText(object);\n      const value = declarationsByObject.get(key);\n      if (value) {\n        value.push(declaration);\n      } else {\n        declarationsByObject.set(key, [declaration]);\n      }\n    }\n\n    function checkDeclarationsBlock(\n      declarationsByObject: Map<string, estree.VariableDeclarator[]>,\n    ) {\n      declarationsByObject.forEach((declarations: estree.VariableDeclarator[], key: string) => {\n        if (declarations.length > 1) {\n          const firstKind = getKind(declarations[0]);\n          const tail = declarations.slice(1);\n          if (tail.every(decl => getKind(decl) === firstKind)) {\n            context.report({\n              node: declarations[0],\n              message: toEncodedMessage(\n                `Use destructuring syntax for these assignments from \"${key}\".`,\n                tail as TSESTree.Node[],\n                Array(tail.length).fill('Replace this assignment.'),\n              ),\n            });\n          }\n        }\n      });\n    }\n\n    return {\n      BlockStatement: (node: estree.Node) => {\n        visitStatements((node as estree.BlockStatement).body);\n      },\n      SwitchCase: (node: estree.Node) => {\n        visitStatements((node as estree.SwitchCase).consequent);\n      },\n      Program: (node: estree.Node) => {\n        visitStatements((node as estree.Program).body);\n      },\n    };\n  },\n};\n\nfunction getKind(declarator: estree.VariableDeclarator) {\n  const declaration = findFirstMatchingAncestor(\n    declarator as TSESTree.Node,\n    n => n.type === 'VariableDeclaration',\n  ) as estree.VariableDeclaration | undefined;\n  return declaration?.kind;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3403/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isRequiredParserServices, getTypeFromTreeNode, toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n\n    function isComparableTo(lhs: estree.Node, rhs: estree.Node) {\n      const checker = services.program.getTypeChecker();\n      const lhsType = checker.getBaseTypeOfLiteralType(getTypeFromTreeNode(lhs, services));\n      const rhsType = checker.getBaseTypeOfLiteralType(getTypeFromTreeNode(rhs, services));\n      // @ts-ignore private API\n      return (\n        checker.isTypeAssignableTo(lhsType, rhsType) || checker.isTypeAssignableTo(rhsType, lhsType)\n      );\n    }\n\n    return {\n      BinaryExpression: (node: estree.Node) => {\n        const { left, operator, right } = node as estree.BinaryExpression;\n        if (['===', '!=='].includes(operator) && !isComparableTo(left, right)) {\n          const [actual, expected, outcome] =\n            operator === '===' ? ['===', '==', 'false'] : ['!==', '!=', 'true'];\n          const operatorToken = context.sourceCode\n            .getTokensBetween(left, right)\n            .find(token => token.type === 'Punctuator' && token.value === operator)!;\n          context.report({\n            message: toEncodedMessage(\n              `Remove this \"${actual}\" check; it will always be ${outcome}. Did you mean to use \"${expected}\"?`,\n              [left, right],\n            ),\n            loc: operatorToken.loc,\n            suggest: [\n              {\n                desc: `Replace \"${actual}\" with \"${expected}\"`,\n                fix: fixer => fixer.replaceText(operatorToken, expected),\n              },\n            ],\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5247/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  isIdentifier,\n  getValueOfExpression,\n  isRequiredParserServices,\n  resolveFromFunctionReference,\n  checkSensitiveCall,\n  toEncodedMessage,\n  getFullyQualifiedName,\n} from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nconst MESSAGE = 'Make sure disabling auto-escaping feature is safe here.';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n\n    function isEmptySanitizerFunction(\n      sanitizerFunction:\n        | estree.FunctionExpression\n        | estree.FunctionDeclaration\n        | estree.ArrowFunctionExpression,\n    ) {\n      if (sanitizerFunction.params.length !== 1) {\n        return false;\n      }\n      const firstParam = sanitizerFunction.params[0];\n      if (firstParam.type !== 'Identifier') {\n        return false;\n      }\n      const firstParamName = firstParam.name;\n      if (sanitizerFunction.body.type !== 'BlockStatement') {\n        return (\n          sanitizerFunction.body.type === 'Identifier' &&\n          sanitizerFunction.body.name === firstParamName\n        );\n      }\n      const { body } = sanitizerFunction.body;\n      if (body.length !== 1) {\n        return false;\n      }\n      const onlyStatement = body[0];\n      if (\n        onlyStatement.type === 'ReturnStatement' &&\n        onlyStatement.argument &&\n        isIdentifier(onlyStatement.argument, firstParamName)\n      ) {\n        return true;\n      }\n      return false;\n    }\n\n    function isInvalidSanitizerFunction(node: estree.Node) {\n      type AssignedFunction =\n        | estree.FunctionDeclaration\n        | estree.FunctionExpression\n        | estree.ArrowFunctionExpression\n        | undefined\n        | null;\n      let assignedFunction: AssignedFunction =\n        getValueOfExpression(context, node, 'FunctionExpression') ??\n        getValueOfExpression(context, node, 'ArrowFunctionExpression');\n      if (!assignedFunction && node.type === 'Identifier' && isRequiredParserServices(services)) {\n        assignedFunction = resolveFromFunctionReference(context, node);\n      }\n      if (!!assignedFunction) {\n        return isEmptySanitizerFunction(assignedFunction);\n      }\n      return false;\n    }\n\n    return {\n      CallExpression: (node: estree.Node) => {\n        const callExpression = node as estree.CallExpression;\n        const fqn = getFullyQualifiedName(context, callExpression);\n        if (fqn === 'handlebars.compile') {\n          checkSensitiveCall(context, callExpression, 1, 'noEscape', true, MESSAGE);\n        }\n        if (fqn === 'marked.setOptions') {\n          checkSensitiveCall(context, callExpression, 0, 'sanitize', false, MESSAGE);\n        }\n        if (fqn === 'markdown-it') {\n          checkSensitiveCall(context, callExpression, 0, 'html', true, MESSAGE);\n        }\n      },\n      NewExpression: (node: estree.Node) => {\n        const newExpression = node as estree.NewExpression;\n        if (getFullyQualifiedName(context, newExpression) === 'kramed.Renderer') {\n          checkSensitiveCall(context, newExpression, 0, 'sanitize', false, MESSAGE);\n        }\n      },\n      AssignmentExpression: (node: estree.Node) => {\n        const assignmentExpression = node as estree.AssignmentExpression;\n        const { left, right } = assignmentExpression;\n        if (left.type !== 'MemberExpression') {\n          return;\n        }\n        if (\n          !(\n            getFullyQualifiedName(context, left) === 'mustache.escape' ||\n            (isMustacheIdentifier(left.object) && isIdentifier(left.property, 'escape'))\n          )\n        ) {\n          return;\n        }\n        if (isInvalidSanitizerFunction(right)) {\n          context.report({\n            node: left,\n            message: toEncodedMessage(MESSAGE),\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction isMustacheIdentifier(node: estree.Node) {\n  return isIdentifier(node, 'Mustache');\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5725/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { Variable } from 'eslint-scope';\nimport { isIdentifier, isRequiredParserServices, getTypeAsString } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      safeResource: 'Make sure not using resource integrity feature is safe here.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n    function shouldReport(assignedVariable: Variable) {\n      let nbSrcAssignment = 0;\n      let hasUnsafeSrcAssignment = false;\n      let hasIntegrityAssignment = false;\n      assignedVariable.references.forEach(ref => {\n        const parentNode = (ref.identifier as TSESTree.Node).parent;\n        if (!parentNode) {\n          return;\n        }\n        nbSrcAssignment += isSrcAssignment(parentNode) ? 1 : 0;\n        hasUnsafeSrcAssignment = hasUnsafeSrcAssignment || isUnsafeSrcAssignment(parentNode);\n        hasIntegrityAssignment = hasIntegrityAssignment || isIntegrityAssignment(parentNode);\n      });\n      return nbSrcAssignment === 1 && hasUnsafeSrcAssignment && !hasIntegrityAssignment;\n    }\n\n    function isIntegrityAssignment(memberExpression: TSESTree.Node): boolean {\n      if (memberExpression.type !== 'MemberExpression') {\n        return false;\n      }\n      return (\n        memberExpression.property.type === 'Identifier' &&\n        memberExpression.property.name === 'integrity'\n      );\n    }\n\n    function isSrcAssignment(memberExpression: TSESTree.Node): boolean {\n      if (memberExpression.type !== 'MemberExpression') {\n        return false;\n      }\n      if (\n        memberExpression.property.type !== 'Identifier' ||\n        memberExpression.property.name !== 'src'\n      ) {\n        return false;\n      }\n      const assignmentExpression = memberExpression.parent;\n      if (assignmentExpression?.type !== 'AssignmentExpression') {\n        return false;\n      }\n      return true;\n    }\n\n    function isUnsafeSrcAssignment(memberExpression: TSESTree.Node): boolean {\n      if (!isSrcAssignment(memberExpression)) {\n        return false;\n      }\n      const right = (memberExpression.parent as estree.AssignmentExpression).right;\n      if (right.type !== 'Literal') {\n        return false;\n      }\n      return !!right.raw && (!!right.raw.match('^\"http') || !!right.raw.match('^\"//'));\n    }\n\n    return {\n      'VariableDeclarator[init.type=\"CallExpression\"]': (node: estree.Node) => {\n        const variableDeclarator = node as estree.VariableDeclarator;\n        const callExpression = variableDeclarator.init as estree.CallExpression;\n        const left = variableDeclarator.id;\n        const { callee } = callExpression;\n        if (left.type !== 'Identifier') {\n          return;\n        }\n        if (callee.type !== 'MemberExpression') {\n          return;\n        }\n        const typeName = getTypeAsString(left, services);\n        if (\n          !isIdentifier(callee.object, 'document') ||\n          !isIdentifier(callee.property, 'createElement') ||\n          typeName !== 'HTMLScriptElement'\n        ) {\n          return;\n        }\n        const scope = context.sourceCode.getScope(node);\n        const assignedVariable = scope.variables.find(v => v.name === left.name);\n        if (!assignedVariable) {\n          return;\n        }\n        if (shouldReport(assignedVariable)) {\n          context.report({\n            node: variableDeclarator,\n            messageId: 'safeResource',\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6080/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  Chai,\n  getUniqueWriteUsageOrNode,\n  isIdentifier,\n  isMethodCall,\n  isNumberLiteral,\n  isThisExpression,\n  Mocha,\n} from '../helpers';\n\nconst MESSAGE =\n  'Set this timeout to 0 if you want to disable it, otherwise use a value lower than 2147483648.';\nconst MAX_DELAY_VALUE = 2_147_483_647;\n\nexport const rule: Rule.RuleModule = {\n  create(context: Rule.RuleContext) {\n    if (!Chai.isImported(context)) {\n      return {};\n    }\n    const constructs: estree.Node[] = [];\n    return {\n      CallExpression: (node: estree.Node) => {\n        if (Mocha.isTestConstruct(node)) {\n          constructs.push(node);\n          return;\n        }\n        if (constructs.length > 0) {\n          checkTimeoutDisabling(node as estree.CallExpression, context);\n        }\n      },\n      'CallExpression:exit': (node: estree.Node) => {\n        if (Mocha.isTestConstruct(node)) {\n          constructs.pop();\n        }\n      },\n    };\n  },\n};\n\nfunction checkTimeoutDisabling(node: estree.CallExpression, context: Rule.RuleContext) {\n  if (isMethodCall(node) && node.arguments.length > 0) {\n    const {\n      callee: { object, property },\n      arguments: [value],\n    } = node;\n    if (\n      isThisExpression(object) &&\n      isIdentifier(property, 'timeout') &&\n      isDisablingTimeout(value, context)\n    ) {\n      context.report({\n        message: MESSAGE,\n        node: value,\n      });\n    }\n  }\n}\n\nfunction isDisablingTimeout(timeout: estree.Node, context: Rule.RuleContext) {\n  const usage = getUniqueWriteUsageOrNode(context, timeout);\n  return isNumberLiteral(usage) && usage.value > MAX_DELAY_VALUE;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5743/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { checkSensitiveCall, getFullyQualifiedName } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nconst MESSAGE = 'Make sure allowing browsers to perform DNS prefetching is safe here.';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      CallExpression: (node: estree.Node) => {\n        const callExpression = node as estree.CallExpression;\n        const fqn = getFullyQualifiedName(context, callExpression);\n        if (fqn === 'helmet.dnsPrefetchControl') {\n          checkSensitiveCall(context, callExpression, 0, 'allow', true, MESSAGE);\n        }\n        if (fqn === 'helmet') {\n          checkSensitiveCall(context, callExpression, 0, 'dnsPrefetchControl', false, MESSAGE);\n        }\n        if (fqn === 'dns-prefetch-control') {\n          checkSensitiveCall(context, callExpression, 0, 'allow', true, MESSAGE);\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5869/javascript\n\nimport { AST, Rule } from 'eslint';\nimport { CharacterClass, Flags, Node, RegExpLiteral } from '@eslint-community/regexpp/ast';\nimport { LocationHolder, toEncodedMessage } from '../helpers';\nimport {\n  createRegExpRule,\n  getRegexpLocation,\n  SimplifiedRegexCharacterClass,\n} from '../helpers/regex';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = createRegExpRule(\n  context => {\n    let flags: Flags;\n    return {\n      onRegExpLiteralEnter: (node: RegExpLiteral) => {\n        flags = node.flags;\n      },\n      onCharacterClassEnter: (node: CharacterClass) => {\n        const duplicates = new Set<Node>();\n        const characterClass = new SimplifiedRegexCharacterClass(flags);\n        node.elements.forEach(element => {\n          const intersections = new SimplifiedRegexCharacterClass(flags, element).findIntersections(\n            characterClass,\n          );\n          if (intersections.length > 0) {\n            intersections.forEach(intersection => duplicates.add(intersection));\n            duplicates.add(element);\n          }\n          characterClass.add(element);\n        });\n        if (duplicates.size > 0) {\n          const [primary, ...secondaries] = duplicates;\n          const secondaryLocations: LocationHolder[] = [];\n          const messages: string[] = [];\n          for (const secondary of secondaries) {\n            const loc: AST.SourceLocation | null = getRegexpLocation(\n              context.node,\n              secondary,\n              context,\n            );\n            if (loc) {\n              secondaryLocations.push({ loc });\n              messages.push('Additional duplicate');\n            }\n          }\n          context.reportRegExpNode({\n            message: toEncodedMessage(\n              'Remove duplicates in this character class.',\n              secondaryLocations,\n              messages,\n            ),\n            node: context.node,\n            regexpNode: primary,\n          });\n        }\n      },\n    };\n  },\n  {\n    meta: {\n      schema: [\n        {\n          // internal parameter for rules having secondary locations\n          enum: [SONAR_RUNTIME],\n        },\n      ],\n    },\n  },\n);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5842/javascript\n\nimport { Rule } from 'eslint';\nimport { Node, Quantifier } from '@eslint-community/regexpp/ast';\nimport { createRegExpRule } from '../helpers/regex';\n\nexport const rule: Rule.RuleModule = createRegExpRule(context => {\n  return {\n    onQuantifierEnter: (node: Quantifier) => {\n      const { element } = node;\n      if (matchEmptyString(element)) {\n        context.reportRegExpNode({\n          message: `Rework this part of the regex to not match the empty string.`,\n          node: context.node,\n          regexpNode: element,\n        });\n      }\n    },\n  };\n});\n\nfunction matchEmptyString(node: Node): boolean {\n  switch (node.type) {\n    case 'Alternative':\n      return node.elements.every(matchEmptyString);\n    case 'Assertion':\n      return true;\n    case 'CapturingGroup':\n    case 'Group':\n    case 'Pattern':\n      return node.alternatives.some(matchEmptyString);\n    case 'Quantifier':\n      return node.min === 0;\n    default:\n      return false;\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4787/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isIdentifier, isMemberWithProperty, getFullyQualifiedName } from '../helpers';\n\nconst getEncryptionRuleModule = (\n  clientSideMethods: string[],\n  serverSideMethods: string[],\n): Rule.RuleModule => ({\n  meta: {\n    messages: {\n      safeEncryption: 'Make sure that encrypting data is safe here.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    // for client side\n    let usingCryptoInFile = false;\n\n    return {\n      Program() {\n        // init flag for each file\n        usingCryptoInFile = false;\n      },\n\n      MemberExpression(node: estree.Node) {\n        // detect 'SubtleCrypto' object\n        // which can be retrieved by 'crypto.subtle' or 'window.crypto.subtle'\n        const { object, property } = node as estree.MemberExpression;\n        if (\n          isIdentifier(property, 'subtle') &&\n          (isIdentifier(object, 'crypto') || isMemberWithProperty(object, 'crypto'))\n        ) {\n          usingCryptoInFile = true;\n        }\n      },\n\n      'CallExpression:exit'(node: estree.Node) {\n        const { callee } = node as estree.CallExpression;\n\n        if (usingCryptoInFile) {\n          // e.g.: crypto.subtle.encrypt()\n          checkForClientSide(callee, context, clientSideMethods);\n        }\n\n        // e.g.\n        // const crypto = require(\"crypto\");\n        // const cipher = crypto.createCipher(alg, key);\n        checkForServerSide(callee, context, serverSideMethods);\n      },\n    };\n  },\n});\n\nfunction checkForServerSide(\n  callee: estree.Node,\n  context: Rule.RuleContext,\n  serverSideMethods: string[],\n) {\n  const fqn = getFullyQualifiedName(context, callee);\n  if (serverSideMethods.some(method => fqn === `crypto.${method}`)) {\n    context.report({\n      messageId: 'safeEncryption',\n      node: callee,\n    });\n  }\n}\n\nfunction checkForClientSide(\n  callee: estree.Node,\n  context: Rule.RuleContext,\n  clientSideMethods: string[],\n) {\n  if (\n    isIdentifier(callee, ...clientSideMethods) ||\n    isMemberWithProperty(callee, ...clientSideMethods)\n  ) {\n    context.report({\n      messageId: 'safeEncryption',\n      node: callee,\n    });\n  }\n}\n\nconst clientSideEncryptMethods = ['encrypt', 'decrypt'];\nconst serverSideEncryptMethods = [\n  'createCipher',\n  'createCipheriv',\n  'createDecipher',\n  'createDecipheriv',\n  'publicEncrypt',\n  'publicDecrypt',\n  'privateEncrypt',\n  'privateDecrypt',\n];\n\nexport const rule: Rule.RuleModule = getEncryptionRuleModule(\n  clientSideEncryptMethods,\n  serverSideEncryptMethods,\n);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5542/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getFullyQualifiedName, getValueOfExpression } from '../helpers';\n\nconst aliases: string[] = [\n  'AES128',\n  'AES192',\n  'AES256',\n  'BF',\n  'blowfish',\n  'CAMELLIA128',\n  'CAMELLIA192',\n  'CAMELLIA256',\n  'CAST',\n  'DES',\n  'DES-EDE',\n  'DES-EDE3',\n  'DES3',\n  'DESX',\n  'RC2',\n  'RC2-40',\n  'RC2-64',\n  'RC2-128',\n  'SEED',\n];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      useSecureMode: 'Use a secure mode and padding scheme.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const patterns: RegExp[] = [/CBC/i, /ECB/i];\n    aliases.forEach(alias => patterns.push(new RegExp(`^${alias}$`, 'i')));\n    return {\n      CallExpression: (node: estree.Node) => {\n        const callExpression = node as estree.CallExpression;\n        if (getFullyQualifiedName(context, callExpression) !== 'crypto.createCipheriv') {\n          return;\n        }\n        const sensitiveArgument = callExpression.arguments[0];\n        const sensitiveArgumentValue = getValueOfExpression(context, sensitiveArgument, 'Literal');\n        if (!sensitiveArgumentValue) {\n          return;\n        }\n        const { value } = sensitiveArgumentValue;\n        if (typeof value !== 'string') {\n          return;\n        }\n        if (patterns.some(pattern => pattern.test(value))) {\n          context.report({\n            messageId: 'useSecureMode',\n            node: sensitiveArgument,\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3723/javascript\n\nimport { eslintRules } from '../core';\n\n/**\n * S1537 ('comma-dangle') and S3723 ('enforce-trailing-comma') both depend on the\n * same ESLint implementation, but the plugin doesn't allow rule key duplicates.\n */\nexport const rule = eslintRules['comma-dangle'];\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6328/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport * as regexpp from '@eslint-community/regexpp';\nimport { RegExpLiteral } from '@eslint-community/regexpp/ast';\nimport { isRequiredParserServices } from '../helpers';\nimport {\n  GroupReference,\n  extractReferences,\n  getParsedRegex,\n  isStringReplaceCall,\n} from '../helpers/regex';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      nonExistingGroup: 'Referencing non-existing group{{groups}}.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n    return {\n      CallExpression: (call: estree.CallExpression) => {\n        if (isStringReplaceCall(call, services)) {\n          const [pattern, substr] = call.arguments;\n          const regex = getParsedRegex(pattern, context);\n          if (regex !== null) {\n            const groups = extractGroups(regex);\n            const references = extractReferences(substr);\n            const invalidReferences = references.filter(\n              ref => !isReferencingExistingGroup(ref, groups),\n            );\n            if (invalidReferences.length > 0) {\n              const groups = `${invalidReferences.length > 1 ? 's' : ''}: ${invalidReferences\n                .map(ref => ref.raw)\n                .join(', ')}`;\n              context.report({\n                node: substr,\n                messageId: 'nonExistingGroup',\n                data: {\n                  groups,\n                },\n              });\n            }\n          }\n        }\n      },\n    };\n  },\n};\n\nclass CapturingGroups {\n  private readonly names = new Set<string>();\n  private groups = 0;\n\n  public add(name: string | null): void {\n    if (name !== null) {\n      this.names.add(name);\n    }\n    this.groups++;\n  }\n\n  public has(name: string): boolean {\n    return this.names.has(name);\n  }\n\n  public count(): number {\n    return this.groups;\n  }\n}\n\nfunction extractGroups(regex: RegExpLiteral) {\n  const groups = new CapturingGroups();\n  regexpp.visitRegExpAST(regex, {\n    onCapturingGroupEnter: group => groups.add(group.name),\n  });\n  return groups;\n}\n\nfunction isReferencingExistingGroup(reference: GroupReference, groups: CapturingGroups) {\n  if (!isNaN(Number(reference.value))) {\n    const index = Number(reference.value);\n    return index >= 1 && index <= groups.count();\n  } else {\n    const name = reference.value;\n    return groups.has(name);\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1067/javascript\n\nimport { Rule, AST } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nexport type Options = [\n  {\n    max: number;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          max: {\n            type: 'integer',\n          },\n        },\n      },\n      {\n        type: 'string',\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const options = context.options as Options;\n    const threshold = options[0].max;\n    const statementLevel: ExpressionComplexity[] = [new ExpressionComplexity()];\n    return {\n      '*': (node: estree.Node) => {\n        const tree = node as TSESTree.Node;\n        if (isConditionalLike(tree)) {\n          const expr = statementLevel[statementLevel.length - 1];\n          expr.incrementNestedExprLevel();\n          expr.addOperator(getOperatorToken(tree, context));\n        } else if (isScopeLike(tree)) {\n          statementLevel.push(new ExpressionComplexity());\n        }\n      },\n      '*:exit': (node: estree.Node) => {\n        const tree = node as TSESTree.Node;\n        if (isConditionalLike(tree)) {\n          const expr = statementLevel[statementLevel.length - 1];\n          expr.decrementNestedExprLevel();\n          if (expr.isOnFirstExprLevel()) {\n            const operators = expr.getComplexityOperators();\n            if (operators.length > threshold) {\n              reportIssue(tree, operators, threshold, context);\n            }\n            expr.resetExpressionComplexityOperators();\n          }\n        } else if (isScopeLike(tree)) {\n          statementLevel.pop();\n        }\n      },\n    };\n  },\n};\n\nclass ExpressionComplexity {\n  nestedLevel = 0;\n  operators: AST.Token[] = [];\n\n  addOperator(operator: AST.Token) {\n    this.operators.push(operator);\n  }\n\n  incrementNestedExprLevel() {\n    this.nestedLevel++;\n  }\n\n  decrementNestedExprLevel() {\n    this.nestedLevel--;\n  }\n\n  isOnFirstExprLevel() {\n    return this.nestedLevel === 0;\n  }\n\n  getComplexityOperators() {\n    return this.operators;\n  }\n\n  resetExpressionComplexityOperators() {\n    this.operators = [];\n  }\n}\n\nfunction isScopeLike(node: TSESTree.Node) {\n  return (\n    node.type === 'FunctionExpression' ||\n    (node.type === 'FunctionDeclaration' && node.generator) ||\n    node.type === 'ObjectExpression' ||\n    node.type === 'CallExpression' ||\n    node.type === 'JSXElement'\n  );\n}\n\nfunction isConditionalLike(node: TSESTree.Node) {\n  return node.type === 'ConditionalExpression' || node.type === 'LogicalExpression';\n}\n\nfunction getOperatorToken(node: TSESTree.Node, context: Rule.RuleContext) {\n  const sourceCode = context.sourceCode;\n  if (node.type === 'ConditionalExpression') {\n    return sourceCode.getTokenAfter(\n      node.test as estree.Node,\n      token => token.type === 'Punctuator' && token.value === '?',\n    )!;\n  } else {\n    const expr = node as estree.LogicalExpression;\n    return sourceCode.getTokenAfter(\n      expr.left,\n      token => token.type === 'Punctuator' && token.value === expr.operator,\n    )!;\n  }\n}\n\nfunction reportIssue(\n  node: TSESTree.Node,\n  operators: AST.Token[],\n  max: number,\n  context: Rule.RuleContext,\n) {\n  const complexity = operators.length;\n  const message = `Reduce the number of conditional operators (${complexity}) used in the expression (maximum allowed ${max}).`;\n  const secondaryLocationsHolder = operators;\n  const secondaryMessages = Array(complexity).fill('+1');\n  const cost = complexity - max;\n  context.report({\n    node: node as estree.Node,\n    message: toEncodedMessage(message, secondaryLocationsHolder, secondaryMessages, cost),\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1451/javascript\n\nimport { Rule } from 'eslint';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nlet cached: {\n  headerFormat: string;\n  isRegularExpression: boolean;\n  expectedLines?: string[];\n  searchPattern?: RegExp;\n  failedToCompile?: boolean;\n};\n\nexport type Options = [\n  {\n    headerFormat: string;\n    isRegularExpression: boolean;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    messages: {\n      fixHeader: 'Add or update the header of this file.',\n    },\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          headerFormat: {\n            type: 'string',\n          },\n          isRegularExpression: {\n            type: 'boolean',\n          },\n        },\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    updateCache(context.options);\n\n    if (cached.failedToCompile) {\n      // don't visit anything\n      return {};\n    }\n\n    return {\n      'Program:exit'() {\n        if (cached.isRegularExpression) {\n          checkRegularExpression(cached.searchPattern!, context);\n        } else {\n          checkPlainText(cached.expectedLines!, context);\n        }\n      },\n    };\n  },\n};\n\nfunction checkPlainText(expectedLines: string[], context: Rule.RuleContext) {\n  let matches = false;\n  const lines = context.sourceCode.lines;\n\n  if (expectedLines.length <= lines.length) {\n    matches = true;\n\n    let i = 0;\n    for (const expectedLine of expectedLines) {\n      const line = lines[i];\n      i++;\n      if (line !== expectedLine) {\n        matches = false;\n        break;\n      }\n    }\n  }\n\n  if (!matches) {\n    addFileIssue(context);\n  }\n}\n\nfunction checkRegularExpression(searchPattern: RegExp, context: Rule.RuleContext) {\n  const fileContent = context.sourceCode.getText();\n  const match = searchPattern.exec(fileContent);\n  if (!match || match.index !== 0) {\n    addFileIssue(context);\n  }\n}\n\nfunction addFileIssue(context: Rule.RuleContext) {\n  context.report({\n    messageId: 'fixHeader',\n    loc: { line: 0, column: 0 },\n  });\n}\n\nfunction updateCache(options: any[]) {\n  const [{ headerFormat, isRegularExpression }] = options;\n\n  if (\n    !cached ||\n    cached.headerFormat !== headerFormat ||\n    cached.isRegularExpression !== isRegularExpression\n  ) {\n    cached = {\n      headerFormat,\n      isRegularExpression,\n    };\n\n    if (isRegularExpression) {\n      try {\n        cached.searchPattern = new RegExp(headerFormat, 's');\n        cached.failedToCompile = false;\n      } catch (e) {\n        console.error(`Failed to compile regular expression for rule S1451 (${e.message})`);\n        cached.failedToCompile = true;\n      }\n    } else {\n      cached.expectedLines = headerFormat.split(/(?:\\r)?\\n|\\r/);\n    }\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3317/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport path from 'path';\nimport { getVariableFromName } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      renameFile: 'Rename this file to \"{{exported}}\"',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    let isOnlyExport = true;\n    let nameOfExported: string | undefined = undefined;\n\n    return {\n      ExportDefaultDeclaration: (node: estree.Node) => {\n        const declaration = (node as estree.ExportDefaultDeclaration).declaration;\n        if (declaration.type === 'Identifier') {\n          const variable = getVariableFromName(context, declaration.name, node);\n          if (variable && variable.defs.length === 1) {\n            const def = variable.defs[0];\n            if (def.type === 'ClassName' || def.type === 'FunctionName' || isConst(def)) {\n              nameOfExported = declaration.name;\n            }\n          }\n        } else if (\n          (declaration.type === 'ClassDeclaration' || declaration.type === 'FunctionDeclaration') &&\n          declaration.id\n        ) {\n          nameOfExported = declaration.id.name;\n        }\n      },\n      'ExportAllDeclaration, ExportNamedDeclaration': () => {\n        isOnlyExport = false;\n      },\n      'Program:exit': () => {\n        if (isOnlyExport && nameOfExported) {\n          const fileName = path.parse(context.filename).name;\n          if (\n            'index' !== fileName &&\n            !sameName(nameOfExported, fileName) &&\n            !sameName(nameOfExported, sliceOffPostfix(fileName))\n          ) {\n            context.report({\n              messageId: 'renameFile',\n              data: {\n                exported: nameOfExported,\n              },\n              loc: { line: 0, column: 0 },\n            });\n          }\n        }\n      },\n    };\n  },\n};\n\nfunction sameName(nameOfExported: string, fileName: string) {\n  const normalizedFileName = fileName.replace(/_/g, '').replace(/-/g, '').replace(/\\./g, '');\n  const normalizedNameOfExported = nameOfExported.replace(/_/g, '').replace(/-/g, '');\n  return normalizedNameOfExported.toLowerCase() === normalizedFileName.toLowerCase();\n}\n\nfunction isConst(def: Scope.Definition) {\n  return def.type === 'Variable' && def.parent && def.parent.kind === 'const';\n}\n\nfunction sliceOffPostfix(fileName: string) {\n  return fileName.slice(0, fileName.lastIndexOf('.'));\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2612/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  isIdentifier,\n  isMemberExpression,\n  getUniqueWriteUsage,\n  getFullyQualifiedName,\n} from '../helpers';\n\nconst chmodLikeFunction = ['chmod', 'chmodSync', 'fchmod', 'fchmodSync', 'lchmod', 'lchmodSync'];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      safePermission: 'Make sure this permission is safe.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    function isChmodLikeFunction(node: estree.CallExpression) {\n      const { callee } = node;\n      if (callee.type !== 'MemberExpression') {\n        return false;\n      }\n      // to support fs promises we are only checking the name of the function\n      return isIdentifier(callee.property, ...chmodLikeFunction);\n    }\n\n    function modeFromLiteral(modeExpr: estree.Literal) {\n      const modeValue = modeExpr.value;\n      let mode = null;\n      if (typeof modeValue === 'string') {\n        mode = Number.parseInt(modeValue, 8);\n      } else if (typeof modeValue === 'number') {\n        const raw = modeExpr.raw;\n        // ts parser interprets number starting with 0 as decimal, we need to parse it as octal value\n        if (raw?.startsWith('0') && !raw.startsWith('0o')) {\n          mode = Number.parseInt(raw, 8);\n        } else {\n          mode = modeValue;\n        }\n      }\n      return mode;\n    }\n\n    // fs.constants have these value only when running on linux, we need to hardcode them to be able to test on win\n    const FS_CONST: Record<string, number> = {\n      S_IRWXU: 0o700,\n      S_IRUSR: 0o400,\n      S_IWUSR: 0o200,\n      S_IXUSR: 0o100,\n      S_IRWXG: 0o70,\n      S_IRGRP: 0o40,\n      S_IWGRP: 0o20,\n      S_IXGRP: 0o10,\n      S_IRWXO: 0o7,\n      S_IROTH: 0o4,\n      S_IWOTH: 0o2,\n      S_IXOTH: 0o1,\n    };\n\n    function modeFromMemberExpression(modeExpr: estree.MemberExpression): number | null {\n      const { object, property } = modeExpr;\n      if (isMemberExpression(object, 'fs', 'constants') && property.type === 'Identifier') {\n        return FS_CONST[property.name];\n      }\n      return null;\n    }\n\n    function modeFromExpression(\n      expr: estree.Node | undefined,\n      visited: Set<estree.Node>,\n    ): number | null {\n      if (!expr) {\n        return null;\n      }\n      if (expr.type === 'MemberExpression') {\n        return modeFromMemberExpression(expr);\n      } else if (expr.type === 'Literal') {\n        return modeFromLiteral(expr);\n      } else if (expr.type === 'Identifier') {\n        const usage = getUniqueWriteUsage(context, expr.name, expr);\n        if (usage && !visited.has(usage)) {\n          visited.add(usage);\n          return modeFromExpression(usage, visited);\n        }\n      } else if (expr.type === 'BinaryExpression') {\n        const { left, operator, right } = expr;\n        if (operator === '|') {\n          const leftValue = modeFromExpression(left, visited);\n          const rightValue = modeFromExpression(right, visited);\n          if (leftValue && rightValue) {\n            return leftValue | rightValue;\n          }\n        }\n      }\n      return null;\n    }\n\n    function checkModeArgument(node: estree.Node, moduloTest: number) {\n      const visited = new Set<estree.Node>();\n      const mode = modeFromExpression(node, visited);\n      if (mode !== null && !isNaN(mode) && mode % 8 !== moduloTest) {\n        context.report({\n          node,\n          messageId: 'safePermission',\n        });\n      }\n    }\n\n    return {\n      CallExpression: (node: estree.Node) => {\n        const callExpression = node as estree.CallExpression;\n        if (isChmodLikeFunction(callExpression)) {\n          checkModeArgument(callExpression.arguments[0], 0);\n          checkModeArgument(callExpression.arguments[1], 0);\n        } else if (getFullyQualifiedName(context, callExpression) === 'process.umask') {\n          checkModeArgument(callExpression.arguments[0], 7);\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1135/javascript\n\nimport { Rule } from 'eslint';\nimport { TSESTree } from '@typescript-eslint/utils';\n\nconst todoPattern = 'todo';\nconst letterPattern = /[\\p{Letter}]/u;\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      completeTODO: 'Complete the task associated to this \"TODO\" comment.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      'Program:exit': () => {\n        reportPatternInComment(context, todoPattern, 'completeTODO');\n      },\n    };\n  },\n};\n\nexport function reportPatternInComment(\n  context: Rule.RuleContext,\n  pattern: string,\n  messageId: string,\n) {\n  const sourceCode = context.sourceCode;\n  (sourceCode.getAllComments() as TSESTree.Comment[]).forEach(comment => {\n    const rawText = comment.value.toLowerCase();\n\n    if (rawText.includes(pattern)) {\n      const lines = rawText.split(/\\r\\n?|\\n/);\n\n      for (let i = 0; i < lines.length; i++) {\n        const index = lines[i].indexOf(pattern);\n        if (index >= 0 && !isLetterAround(lines[i], index, pattern)) {\n          context.report({\n            messageId,\n            loc: getPatternPosition(i, index, comment, pattern),\n          });\n        }\n      }\n    }\n  });\n}\n\nfunction isLetterAround(line: string, start: number, pattern: string) {\n  const end = start + pattern.length;\n\n  const pre = start > 0 && letterPattern.test(line.charAt(start - 1));\n  const post = end <= line.length - 1 && letterPattern.test(line.charAt(end));\n\n  return pre || post;\n}\n\nfunction getPatternPosition(\n  lineIdx: number,\n  index: number,\n  comment: TSESTree.Comment,\n  pattern: string,\n) {\n  const line = comment.loc.start.line + lineIdx;\n  const columnStart = lineIdx === 0 ? comment.loc.start.column + 2 : 0;\n  const patternStart = columnStart + index;\n\n  return {\n    start: { line, column: patternStart },\n    end: { line, column: patternStart + pattern.length },\n  };\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1134/javascript\n\nimport { Rule } from 'eslint';\nimport { reportPatternInComment } from '../S1135/rule';\n\nconst fixmePattern = 'fixme';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      fixme: 'Take the required action to fix the issue indicated by this comment.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      'Program:exit': () => {\n        reportPatternInComment(context, fixmePattern, 'fixme');\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1535/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      restrictLoop: 'Restrict what this loop acts on by testing each property.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    function isAttrCopy(statement: estree.Node) {\n      if (statement.type !== 'ExpressionStatement') {\n        return false;\n      }\n      const expression = statement.expression;\n      return (\n        expression.type === 'AssignmentExpression' &&\n        expression.left.type === 'MemberExpression' &&\n        expression.left.computed\n      );\n    }\n\n    return {\n      ForInStatement(node) {\n        const forInStatement = node as estree.ForInStatement;\n        const body = forInStatement.body;\n\n        if (body.type === 'BlockStatement') {\n          if (body.body.length === 0) {\n            return;\n          }\n          const firstStatement = body.body[0];\n          if (firstStatement.type === 'IfStatement' || isAttrCopy(firstStatement)) {\n            return;\n          }\n        }\n\n        if (body.type === 'EmptyStatement' || body.type === 'IfStatement' || isAttrCopy(body)) {\n          return;\n        }\n\n        context.report({\n          node: forInStatement,\n          messageId: 'restrictLoop',\n        });\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2251/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { toEncodedMessage } from '../helpers';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      ForStatement: (node: estree.Node) => {\n        const forStatement: estree.ForStatement = node as estree.ForStatement;\n        const test = forStatement.test;\n        const loopIncrement: ForLoopIncrement | null =\n          ForLoopIncrement.findInLoopUpdate(forStatement);\n        if (test == null || loopIncrement == null || forStatement.update == null) {\n          return;\n        }\n        const wrongDirection = getWrongDirection(test, loopIncrement);\n        if (wrongDirection !== 0 && wrongDirection === loopIncrement.direction) {\n          const movement: string = wrongDirection > 0 ? 'incremented' : 'decremented';\n          const message = toEncodedMessage(\n            `\"${loopIncrement.identifier.name}\" is ${movement} and will never reach its stop condition.`,\n            [test as TSESTree.Node],\n          );\n          context.report({\n            message,\n            node: forStatement.update,\n          });\n        }\n      },\n    };\n  },\n};\n\nclass ForLoopIncrement {\n  increment: estree.Expression;\n  identifier: estree.Identifier;\n  direction: number;\n\n  constructor(increment: estree.Expression, identifier: estree.Identifier, direction: number) {\n    this.increment = increment;\n    this.identifier = identifier;\n    this.direction = direction;\n  }\n\n  static findInLoopUpdate(forStatement: estree.ForStatement) {\n    let result = null;\n    const expression = forStatement.update;\n    if (!expression) {\n      return null;\n    }\n    if (expression.type === 'UpdateExpression') {\n      const updateExpression: estree.UpdateExpression = expression;\n      const direction: number = updateExpression.operator === '++' ? 1 : -1;\n      result = ForLoopIncrement.increment(updateExpression, updateExpression.argument, direction);\n    }\n    if (expression.type === 'AssignmentExpression') {\n      const assignmentExpression: estree.AssignmentExpression = expression;\n      if (\n        assignmentExpression.operator === '+=' &&\n        assignmentExpression.left.type === 'Identifier'\n      ) {\n        result = ForLoopIncrement.increment(\n          expression,\n          assignmentExpression.left,\n          directionFromValue(assignmentExpression.right),\n        );\n      }\n      if (\n        assignmentExpression.operator === '-=' &&\n        assignmentExpression.left.type === 'Identifier'\n      ) {\n        result = ForLoopIncrement.increment(\n          expression,\n          assignmentExpression.left,\n          -directionFromValue(assignmentExpression.right),\n        );\n      }\n      if (assignmentExpression.operator === '=') {\n        result = ForLoopIncrement.assignmentIncrement(assignmentExpression);\n      }\n    }\n    return result;\n  }\n\n  private static increment(\n    increment: estree.Expression,\n    expression: estree.Expression,\n    direction: number,\n  ) {\n    if (expression.type === 'Identifier') {\n      return new ForLoopIncrement(increment, expression, direction);\n    }\n    return null;\n  }\n\n  private static assignmentIncrement(assignmentExpression: estree.AssignmentExpression) {\n    const lhs = assignmentExpression.left;\n    const rhs = assignmentExpression.right;\n    if (\n      lhs.type === 'Identifier' &&\n      rhs.type === 'BinaryExpression' &&\n      (rhs.operator === '+' || rhs.operator === '-')\n    ) {\n      let incrementDirection = directionFromValue(rhs.right);\n      if (incrementDirection !== null && isSameIdentifier(rhs.left, lhs)) {\n        incrementDirection = rhs.operator === '-' ? -incrementDirection : incrementDirection;\n        return ForLoopIncrement.increment(assignmentExpression, lhs, incrementDirection);\n      }\n    }\n    return null;\n  }\n}\n\nfunction directionFromValue(expression: estree.Expression): number {\n  if (expression.type === 'Literal') {\n    const value = Number(expression.raw);\n    if (isNaN(value) || value === 0) {\n      return 0;\n    }\n    return value > 0 ? 1 : -1;\n  }\n  if (expression.type === 'UnaryExpression') {\n    const unaryExpression: estree.UnaryExpression = expression;\n    if (unaryExpression.operator === '+') {\n      return directionFromValue(unaryExpression.argument);\n    }\n    if (unaryExpression.operator === '-') {\n      return -directionFromValue(unaryExpression.argument);\n    }\n  }\n  return 0;\n}\n\nfunction getWrongDirection(\n  condition: estree.Expression,\n  forLoopIncrement: ForLoopIncrement,\n): number {\n  if (condition.type !== 'BinaryExpression') {\n    return 0;\n  }\n  if (isSameIdentifier(condition.left, forLoopIncrement.identifier)) {\n    if (condition.operator === '<' || condition.operator === '<=') {\n      return -1;\n    }\n    if (condition.operator === '>' || condition.operator === '>=') {\n      return +1;\n    }\n  } else if (isSameIdentifier(condition.right, forLoopIncrement.identifier)) {\n    if (condition.operator === '<' || condition.operator === '<=') {\n      return +1;\n    }\n    if (condition.operator === '>' || condition.operator === '>=') {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nfunction isSameIdentifier(expression: estree.Expression, identifier: estree.Identifier) {\n  return expression.type === 'Identifier' && expression.name === identifier.name;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5732/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { Express, getFullyQualifiedName, getProperty } from '../helpers';\n\nconst HELMET = 'helmet';\nconst HELMET_CSP = 'helmet-csp';\nconst DIRECTIVES = 'directives';\nconst NONE = \"'none'\";\nconst CONTENT_SECURITY_POLICY = 'contentSecurityPolicy';\nconst FRAME_ANCESTORS_CAMEL = 'frameAncestors';\nconst FRAME_ANCESTORS_HYPHEN = 'frame-ancestors';\n\nexport const rule: Rule.RuleModule = Express.SensitiveMiddlewarePropertyRule(\n  findDirectivesWithSensitiveFrameAncestorsPropertyFromHelmet,\n  `Make sure disabling content security policy frame-ancestors directive is safe here.`,\n);\n\nfunction findDirectivesWithSensitiveFrameAncestorsPropertyFromHelmet(\n  context: Rule.RuleContext,\n  node: estree.CallExpression,\n): estree.Property[] {\n  const { arguments: args } = node;\n  if (isValidHelmetModuleCall(context, node) && args.length === 1) {\n    const [options] = args;\n    const maybeDirectives = getProperty(options, DIRECTIVES, context);\n    if (maybeDirectives) {\n      const maybeFrameAncestors = getFrameAncestorsProperty(maybeDirectives, context);\n      if (!maybeFrameAncestors) {\n        return [maybeDirectives];\n      }\n      if (isSetNoneFrameAncestorsProperty(maybeFrameAncestors)) {\n        return [maybeFrameAncestors];\n      }\n    }\n  }\n  return [];\n}\n\nfunction isValidHelmetModuleCall(context: Rule.RuleContext, callExpr: estree.CallExpression) {\n  /* csp(options) or helmet.contentSecurityPolicy(options) */\n  const fqn = getFullyQualifiedName(context, callExpr);\n  return fqn === HELMET_CSP || fqn === `${HELMET}.${CONTENT_SECURITY_POLICY}`;\n}\n\nfunction isSetNoneFrameAncestorsProperty(frameAncestors: estree.Property): boolean {\n  const { value } = frameAncestors;\n  return (\n    value.type === 'ArrayExpression' &&\n    Boolean(\n      value.elements.find(\n        v => v?.type === 'Literal' && typeof v.value === 'string' && v.value === NONE,\n      ),\n    )\n  );\n}\n\nfunction getFrameAncestorsProperty(\n  directives: estree.Property,\n  context: Rule.RuleContext,\n): estree.Property | undefined {\n  const propertyKeys = [FRAME_ANCESTORS_CAMEL, FRAME_ANCESTORS_HYPHEN];\n  for (const propertyKey of propertyKeys) {\n    const maybeProperty = getProperty(directives.value, propertyKey, context);\n    if (maybeProperty) {\n      return maybeProperty;\n    }\n  }\n  return undefined;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1515/javascript\n\nimport { AST, Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport { getMainFunctionTokenLocation } from 'eslint-plugin-sonarjs/lib/src/utils/locations';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport {\n  findFirstMatchingAncestor,\n  getParent,\n  LoopLike,\n  RuleContext,\n  toEncodedMessage,\n} from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nconst message = 'Make sure this function is not called after the loop completes.';\n\nconst loopLike = 'WhileStatement,DoWhileStatement,ForStatement,ForOfStatement,ForInStatement';\n\nconst functionLike = 'FunctionDeclaration,FunctionExpression,ArrowFunctionExpression';\n\nconst allowedCallbacks = [\n  'replace',\n  'forEach',\n  'filter',\n  'map',\n  'find',\n  'findIndex',\n  'every',\n  'some',\n  'reduce',\n  'reduceRight',\n  'sort',\n  'each',\n];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    function getLocalEnclosingLoop(node: estree.Node): LoopLike | undefined {\n      return findFirstMatchingAncestor(node as TSESTree.Node, n => loopLike.includes(n.type)) as\n        | LoopLike\n        | undefined;\n    }\n\n    return {\n      [functionLike]: (node: estree.Node) => {\n        const loopNode = getLocalEnclosingLoop(node);\n        if (\n          loopNode &&\n          !isIIEF(node, context) &&\n          !isAllowedCallbacks(context, node) &&\n          context.sourceCode.getScope(node).through.some(ref => !isSafe(ref, loopNode))\n        ) {\n          context.report({\n            message: toEncodedMessage(message, [getMainLoopToken(loopNode, context)]),\n            loc: getMainFunctionTokenLocation(\n              node as TSESTree.FunctionLike,\n              getParent(context, node) as TSESTree.Node,\n              context as unknown as RuleContext,\n            ),\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction isIIEF(node: estree.Node, context: Rule.RuleContext) {\n  const parent = getParent(context, node);\n  return (\n    parent &&\n    ((parent.type === 'CallExpression' && parent.callee === node) ||\n      (parent.type === 'MemberExpression' && parent.object === node))\n  );\n}\n\nfunction isAllowedCallbacks(context: Rule.RuleContext, node: estree.Node) {\n  const parent = getParent(context, node);\n  if (parent && parent.type === 'CallExpression') {\n    const callee = parent.callee;\n    if (callee.type === 'MemberExpression') {\n      return (\n        callee.property.type === 'Identifier' && allowedCallbacks.includes(callee.property.name)\n      );\n    }\n  }\n  return false;\n}\n\nfunction isSafe(ref: Scope.Reference, loopNode: LoopLike) {\n  const variable = ref.resolved;\n  if (variable) {\n    const definition = variable.defs[0];\n    const declaration = definition?.parent;\n    const kind = declaration && declaration.type === 'VariableDeclaration' ? declaration.kind : '';\n\n    if (kind !== 'let' && kind !== 'const') {\n      return hasConstValue(variable, loopNode);\n    }\n  }\n\n  return true;\n}\n\nfunction hasConstValue(variable: Scope.Variable, loopNode: LoopLike): boolean {\n  for (const ref of variable.references) {\n    if (ref.isWrite()) {\n      //Check if write is in the scope of the loop\n      if (ref.from.type === 'block' && ref.from.block === loopNode.body) {\n        return false;\n      }\n\n      const refRange = ref.identifier.range;\n      const range = getLoopTestRange(loopNode);\n      //Check if value change in the header of the loop\n      if (refRange && range && refRange[0] >= range[0] && refRange[1] <= range[1]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction getLoopTestRange(loopNode: LoopLike) {\n  const bodyRange = loopNode.body.range;\n  if (bodyRange) {\n    switch (loopNode.type) {\n      case 'ForStatement':\n        if (loopNode.test?.range) {\n          return [loopNode.test.range[0], bodyRange[0]];\n        }\n        break;\n      case 'WhileStatement':\n      case 'DoWhileStatement':\n        return loopNode.test.range;\n      case 'ForOfStatement':\n      case 'ForInStatement': {\n        const leftRange = loopNode.range;\n        if (leftRange) {\n          return [leftRange[0], bodyRange[0]];\n        }\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction getMainLoopToken(loop: LoopLike, context: Rule.RuleContext): AST.Token {\n  const sourceCode = context.sourceCode;\n  let token: AST.Token | null;\n  switch (loop.type) {\n    case 'WhileStatement':\n    case 'DoWhileStatement':\n      token = sourceCode.getTokenBefore(\n        loop.test,\n        t => t.type === 'Keyword' && t.value === 'while',\n      );\n      break;\n    case 'ForStatement':\n    case 'ForOfStatement':\n    default:\n      token = sourceCode.getFirstToken(loop, t => t.type === 'Keyword' && t.value === 'for');\n  }\n  return token!;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S100/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { last, functionLike } from '../helpers';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\ninterface FunctionKnowledge {\n  node: estree.Identifier;\n  func: estree.Function;\n  returnsJSX: boolean;\n}\n\nconst functionExitSelector = [\n  ':matches(',\n  ['FunctionExpression', 'ArrowFunctionExpression', 'FunctionDeclaration'].join(','),\n  ')',\n  ':exit',\n].join('');\n\nconst functionExpressionProperty = [\n  'Property',\n  '[key.type=\"Identifier\"]',\n  ':matches(',\n  ['[value.type=\"FunctionExpression\"]', '[value.type=\"ArrowFunctionExpression\"]'].join(','),\n  ')',\n].join('');\n\nconst functionExpressionVariable = [\n  'VariableDeclarator',\n  '[id.type=\"Identifier\"]',\n  ':matches(',\n  ['[init.type=\"FunctionExpression\"]', '[init.type=\"ArrowFunctionExpression\"]'].join(','),\n  ')',\n].join('');\n\nexport type Options = [\n  {\n    format: string;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    messages: {\n      renameFunction:\n        \"Rename this '{{function}}' function to match the regular expression '{{format}}'.\",\n    },\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          format: {\n            type: 'string',\n          },\n        },\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const [{ format }] = context.options as Options;\n    const knowledgeStack: FunctionKnowledge[] = [];\n    return {\n      [functionExpressionProperty]: (node: estree.Property) => {\n        knowledgeStack.push({\n          node: node.key as estree.Identifier,\n          func: node.value as estree.Function,\n          returnsJSX: returnsJSX(node.value as estree.Function),\n        });\n      },\n      [functionExpressionVariable]: (node: estree.VariableDeclarator) => {\n        knowledgeStack.push({\n          node: node.id as estree.Identifier,\n          func: node.init as estree.Function,\n          returnsJSX: returnsJSX(node.init as estree.Function),\n        });\n      },\n      'MethodDefinition[key.type=\"Identifier\"]': (node: estree.MethodDefinition) => {\n        knowledgeStack.push({\n          node: node.key as estree.Identifier,\n          func: node.value as estree.Function,\n          returnsJSX: false,\n        });\n      },\n      'FunctionDeclaration[id.type=\"Identifier\"]': (node: estree.FunctionDeclaration) => {\n        knowledgeStack.push({\n          node: node.id,\n          func: node as estree.Function,\n          returnsJSX: false,\n        });\n      },\n      [functionExitSelector]: (func: estree.Function) => {\n        if (func === last(knowledgeStack)?.func) {\n          const knowledge = knowledgeStack.pop();\n          if (knowledge && !knowledge.returnsJSX) {\n            const { node } = knowledge;\n            if (!node.name.match(format)) {\n              context.report({\n                messageId: 'renameFunction',\n                data: {\n                  function: node.name,\n                  format,\n                },\n                node,\n              });\n            }\n          }\n        }\n      },\n      ReturnStatement: (node: estree.ReturnStatement) => {\n        const knowledge = last(knowledgeStack);\n        const ancestors = context.sourceCode.getAncestors(node);\n\n        for (let i = ancestors.length - 1; i >= 0; i--) {\n          if (functionLike.has(ancestors[i].type)) {\n            const enclosingFunction = ancestors[i];\n            if (\n              knowledge &&\n              knowledge.func === enclosingFunction &&\n              node.argument &&\n              (node.argument as any).type.startsWith('JSX')\n            ) {\n              knowledge.returnsJSX = true;\n            }\n            return;\n          }\n        }\n      },\n    };\n  },\n};\n\n//handling arrow functions without return statement\nfunction returnsJSX(node: estree.Function) {\n  return (node.body as any).type.startsWith('JSX');\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3800/javascript\n\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { Rule } from 'eslint';\nimport { getMainFunctionTokenLocation } from 'eslint-plugin-sonarjs/lib/src/utils/locations';\nimport * as estree from 'estree';\nimport * as ts from 'typescript';\nimport {\n  getParent,\n  getTypeFromTreeNode,\n  isAny,\n  isBooleanTrueType,\n  isRequiredParserServices,\n  isStringType,\n  RuleContext,\n  toEncodedMessage,\n} from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\nimport { type UnionType } from 'typescript';\n\nclass FunctionScope {\n  private readonly returnStatements: estree.ReturnStatement[] = [];\n\n  getReturnStatements() {\n    return this.returnStatements.slice();\n  }\n\n  addReturnStatement(node: estree.ReturnStatement) {\n    this.returnStatements.push(node);\n  }\n}\n\nconst isASanitationFunction = (signature: ts.Signature) => {\n  const { types } = signature.getReturnType() as UnionType;\n\n  return types.length === 2 && types.some(isBooleanTrueType) && types.some(isStringType);\n};\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    let scopes: FunctionScope[] = [];\n\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n\n    const checker = services.program.getTypeChecker();\n\n    function onFunctionExit(node: estree.Node) {\n      const returnStatements = scopes.pop()!.getReturnStatements();\n      if (returnStatements.some(retStmt => retStmt.argument?.type === 'ThisExpression')) {\n        return;\n      }\n      const signature = checker.getSignatureFromDeclaration(\n        services.esTreeNodeToTSNodeMap.get(node as TSESTree.Node) as ts.SignatureDeclaration,\n      );\n      if (signature && hasMultipleReturnTypes(signature, checker)) {\n        if (isASanitationFunction(signature)) {\n          return;\n        }\n\n        const stmts = returnStatements.filter(\n          retStmt => !isNullLike(getTypeFromTreeNode(retStmt.argument!, services)),\n        );\n        const stmtsTypes = stmts.map(retStmt => getTypeFromTreeNode(retStmt.argument!, services));\n        if (stmtsTypes.every(isAny)) {\n          return;\n        }\n        context.report({\n          message: toEncodedMessage(\n            'Refactor this function to always return the same type.',\n            stmts,\n            stmtsTypes.map(stmtType => `Returns ${prettyPrint(stmtType, checker)}`),\n          ),\n          loc: getMainFunctionTokenLocation(\n            node as TSESTree.FunctionLike,\n            getParent(context, node) as TSESTree.Node,\n            context as unknown as RuleContext,\n          ),\n        });\n      }\n    }\n\n    return {\n      ReturnStatement: (node: estree.Node) => {\n        const retStmt = node as estree.ReturnStatement;\n        if (scopes.length > 0 && retStmt.argument) {\n          scopes[scopes.length - 1].addReturnStatement(retStmt);\n        }\n      },\n      ':function': () => {\n        scopes.push(new FunctionScope());\n      },\n      ':function:exit': onFunctionExit,\n      'Program:exit': () => {\n        scopes = [];\n      },\n    };\n  },\n};\n\nfunction hasMultipleReturnTypes(signature: ts.Signature, checker: ts.TypeChecker) {\n  const returnType = checker.getBaseTypeOfLiteralType(checker.getReturnTypeOfSignature(signature));\n  return isMixingTypes(returnType, checker) && !hasReturnTypeJSDoc(signature);\n}\n\nfunction isMixingTypes(type: ts.Type, checker: ts.TypeChecker): boolean {\n  return (\n    type.isUnion() &&\n    type.types\n      .filter(tp => !isNullLike(tp))\n      .map(tp => prettyPrint(tp, checker))\n      .filter(distinct).length > 1\n  );\n}\n\nfunction hasReturnTypeJSDoc(signature: ts.Signature) {\n  return signature.getJsDocTags().some(tag => ['return', 'returns'].includes(tag.name));\n}\n\nfunction isObjectLikeType(type: ts.Type) {\n  return !!(type.getFlags() & ts.TypeFlags.Object);\n}\n\nfunction distinct<T>(value: T, index: number, self: T[]) {\n  return self.indexOf(value) === index;\n}\n\nfunction prettyPrint(type: ts.Type, checker: ts.TypeChecker): string {\n  if (type.isUnionOrIntersection()) {\n    const delimiter = type.isUnion() ? ' | ' : ' & ';\n    return type.types\n      .map(tp => prettyPrint(tp, checker))\n      .filter(distinct)\n      .join(delimiter);\n  }\n  const typeNode = checker.typeToTypeNode(type, undefined, undefined);\n  if (typeNode !== undefined) {\n    if (ts.isFunctionTypeNode(typeNode)) {\n      return 'function';\n    }\n    if (ts.isArrayTypeNode(typeNode) || isTypedArray(type, checker)) {\n      return 'array';\n    }\n  }\n  if (isObjectLikeType(type)) {\n    return 'object';\n  }\n  return checker.typeToString(checker.getBaseTypeOfLiteralType(type));\n}\n\nfunction isTypedArray(type: ts.Type, checker: ts.TypeChecker) {\n  return checker.typeToString(type).endsWith('Array');\n}\n\nfunction isNullLike(type: ts.Type) {\n  return (\n    (type.flags & ts.TypeFlags.Null) !== 0 ||\n    (type.flags & ts.TypeFlags.Void) !== 0 ||\n    (type.flags & ts.TypeFlags.Undefined) !== 0\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1527/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport estree from 'estree';\n\nconst futureReservedWords = [\n  'implements',\n  'interface',\n  'package',\n  'private',\n  'protected',\n  'public',\n  'enum',\n  'class',\n  'const',\n  'export',\n  'extends',\n  'import',\n  'super',\n  'let',\n  'static',\n  'yield',\n  'await',\n];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      renameReserved:\n        'Rename \"{{reserved}}\" identifier to prevent potential conflicts with future evolutions of the JavaScript language.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    function checkVariable(variable: Scope.Variable) {\n      if (variable.defs.length > 0) {\n        const def = variable.defs[0].name;\n        context.report({\n          node: def,\n          messageId: 'renameReserved',\n          data: {\n            reserved: variable.name,\n          },\n        });\n      }\n    }\n\n    function checkVariablesByScope(scope: Scope.Scope) {\n      scope.variables.filter(v => futureReservedWords.includes(v.name)).forEach(checkVariable);\n\n      scope.childScopes.forEach(childScope => {\n        checkVariablesByScope(childScope);\n      });\n    }\n\n    return {\n      'Program:exit': (node: estree.Node) => {\n        checkVariablesByScope(context.sourceCode.getScope(node));\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3531/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getMainFunctionTokenLocation } from 'eslint-plugin-sonarjs/lib/src/utils/locations';\nimport { getParent, RuleContext } from '../helpers';\nimport { TSESTree } from '@typescript-eslint/utils';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      addYield: 'Add a \"yield\" statement to this generator.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const yieldStack: number[] = [];\n\n    function enterFunction() {\n      yieldStack.push(0);\n    }\n\n    function exitFunction(node: estree.Node) {\n      const functionNode = node as estree.FunctionExpression | estree.FunctionDeclaration;\n      const countYield = yieldStack.pop();\n      if (countYield === 0 && functionNode.body.body.length > 0) {\n        context.report({\n          messageId: 'addYield',\n          loc: getMainFunctionTokenLocation(\n            functionNode as TSESTree.FunctionLike,\n            getParent(context, node) as TSESTree.Node,\n            context as unknown as RuleContext,\n          ),\n        });\n      }\n    }\n\n    return {\n      ':function[generator=true]': enterFunction,\n      ':function[generator=true]:exit': exitFunction,\n      YieldExpression() {\n        if (yieldStack.length > 0) {\n          yieldStack[yieldStack.length - 1] += 1;\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4790/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getFullyQualifiedName, getUniqueWriteUsageOrNode, isStringLiteral } from '../helpers';\n\nconst message = 'Make sure this weak hash algorithm is not used in a sensitive context here.';\nconst CRYPTO_UNSECURE_HASH_ALGORITHMS = new Set([\n  'md2',\n  'md4',\n  'md5',\n  'md6',\n  'haval128',\n  'hmacmd5',\n  'dsa',\n  'ripemd',\n  'ripemd128',\n  'ripemd160',\n  'hmacripemd160',\n  'sha1',\n]);\nconst SUBTLE_UNSECURE_HASH_ALGORITHMS = new Set(['sha-1']);\n\nexport const rule: Rule.RuleModule = {\n  create(context: Rule.RuleContext) {\n    function checkNodejsCrypto(fqn: string | null, node: estree.CallExpression) {\n      // crypto#createHash\n      const { callee, arguments: args } = node;\n      if (fqn === 'crypto.createHash') {\n        checkUnsecureAlgorithm(callee, args[0], CRYPTO_UNSECURE_HASH_ALGORITHMS);\n      }\n    }\n\n    function checkSubtleCrypto(fqn: string | null, node: estree.CallExpression) {\n      // crypto.subtle#digest\n      const { callee, arguments: args } = node;\n      if (fqn === 'crypto.subtle.digest') {\n        checkUnsecureAlgorithm(callee, args[0], SUBTLE_UNSECURE_HASH_ALGORITHMS);\n      }\n    }\n\n    function checkUnsecureAlgorithm(\n      method: estree.Node,\n      hash: estree.Node,\n      unsecureAlgorithms: Set<string>,\n    ) {\n      const hashAlgorithm = getUniqueWriteUsageOrNode(context, hash);\n      if (\n        isStringLiteral(hashAlgorithm) &&\n        unsecureAlgorithms.has(hashAlgorithm.value.toLocaleLowerCase())\n      ) {\n        context.report({\n          message,\n          node: method,\n        });\n      }\n    }\n\n    return {\n      'CallExpression[arguments.length > 0]': (node: estree.Node) => {\n        const callExpr = node as estree.CallExpression;\n        const fqn = getFullyQualifiedName(context, callExpr);\n        checkNodejsCrypto(fqn, callExpr);\n        checkSubtleCrypto(fqn, callExpr);\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5691/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getUniqueWriteUsage, getFullyQualifiedName, getProperty } from '../helpers';\n\nconst SERVE_STATIC = 'serve-static';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      safeHiddenFile: 'Make sure serving hidden files is safe here.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      CallExpression(node: estree.Node) {\n        // serveStatic(...)\n        const { callee, arguments: args } = node as estree.CallExpression;\n        if (getFullyQualifiedName(context, callee) === SERVE_STATIC && args.length > 1) {\n          let options: estree.Node | undefined = args[1];\n          if (options.type === 'Identifier') {\n            options = getUniqueWriteUsage(context, options.name, node);\n          }\n\n          const dotfilesProperty = getProperty(options, 'dotfiles', context);\n          if (\n            dotfilesProperty?.value.type === 'Literal' &&\n            dotfilesProperty.value.value === 'allow'\n          ) {\n            context.report({ node: dotfilesProperty, messageId: 'safeHiddenFile' });\n          }\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6754/javascript\n\nimport { Rule } from 'eslint';\nimport { interceptReportForReact } from '../helpers';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReportForReact(rule, (context, descriptor) => {\n    const { node } = descriptor as any;\n    if (node.type === 'ArrayPattern' && node.elements.length === 1) {\n      return;\n    }\n    context.report(descriptor);\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport react from 'eslint-plugin-react';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(react.rules['hook-use-state']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5254/javascript\n\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { Rule } from 'eslint';\nimport jsxA11y from 'eslint-plugin-jsx-a11y';\nimport { interceptReport, mergeRules } from '../helpers';\n\nconst langRule = jsxA11y.rules['lang'];\nconst htmlHasLangRule = jsxA11y.rules['html-has-lang'];\nconst decoratedHasLangRule = decorate(htmlHasLangRule);\n\nfunction decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, (context, reportDescriptor) => {\n    const node = (reportDescriptor as any).node as TSESTree.JSXOpeningElement;\n    (reportDescriptor as any).node = node.name;\n    context.report(reportDescriptor);\n  });\n}\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      ...langRule.meta!.messages,\n      ...decoratedHasLangRule.meta!.messages,\n    },\n  },\n\n  create(context: Rule.RuleContext) {\n    const langListener: Rule.RuleListener = langRule.create(context);\n    const htmlHasLangListener: Rule.RuleListener = decoratedHasLangRule.create(context);\n\n    return mergeRules(langListener, htmlHasLangListener);\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3785/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport * as ts from 'typescript';\nimport { isRequiredParserServices, getTypeFromTreeNode, toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n    function isPrimitive(node: estree.Node) {\n      const type = getTypeFromTreeNode(node, services);\n      return (\n        (type.flags & ts.TypeFlags.StringLike) !== 0 ||\n        (type.flags & ts.TypeFlags.NumberLike) !== 0 ||\n        (type.flags & ts.TypeFlags.BooleanLike) !== 0 ||\n        (type.flags & ts.TypeFlags.Null) !== 0 ||\n        (type.flags & ts.TypeFlags.Undefined) !== 0\n      );\n    }\n    return {\n      'BinaryExpression[operator=\"in\"]': (node: estree.Node) => {\n        const { left, right, operator } = node as estree.BinaryExpression;\n        if (isPrimitive(right)) {\n          const opToken = context.sourceCode\n            .getTokensBetween(left, right)\n            .find(token => token.type === 'Keyword' && token.value === operator)!;\n          context.report({\n            message: toEncodedMessage(\n              'TypeError can be thrown as this operand might have primitive type.',\n              [opToken],\n            ),\n            node: right,\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3686/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { getVariableFromName, toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n\n  create(context: Rule.RuleContext) {\n    const usedInNew: Map<Scope.Variable, estree.SimpleCallExpression> = new Map();\n    const usedInCall: Map<Scope.Variable, estree.SimpleCallExpression> = new Map();\n    const hasIssue: Scope.Variable[] = [];\n\n    return {\n      NewExpression: (node: estree.Node) => {\n        checkExpression(\n          node as estree.SimpleCallExpression,\n          usedInNew,\n          usedInCall,\n          hasIssue,\n          'out',\n          context,\n        );\n      },\n      CallExpression: (node: estree.Node) => {\n        checkExpression(\n          node as estree.SimpleCallExpression,\n          usedInCall,\n          usedInNew,\n          hasIssue,\n          '',\n          context,\n        );\n      },\n    };\n  },\n};\n\nfunction checkExpression(\n  callExpression: estree.SimpleCallExpression,\n  thisTypeUsageMap: Map<Scope.Variable, estree.SimpleCallExpression>,\n  otherTypeUsageMap: Map<Scope.Variable, estree.SimpleCallExpression>,\n  hasIssue: Scope.Variable[],\n  tail: string,\n  context: Rule.RuleContext,\n) {\n  const variable = getVariable(callExpression, context);\n  if (variable && variable.defs.length !== 0) {\n    const otherTypeUsage = otherTypeUsageMap.get(variable);\n    if (otherTypeUsage?.loc && !hasIssue.includes(variable)) {\n      const message =\n        `Correct the use of this function; ` +\n        `on line ${otherTypeUsage.loc.start.line} it was called with${tail} \"new\".`;\n\n      context.report({\n        node: callExpression.callee,\n        message: toEncodedMessage(message, [otherTypeUsage.callee as TSESTree.Node]),\n      });\n\n      hasIssue.push(variable);\n    } else {\n      thisTypeUsageMap.set(variable, callExpression);\n    }\n  }\n}\n\nfunction getVariable(node: estree.SimpleCallExpression, context: Rule.RuleContext) {\n  if (node.callee.type === 'Identifier') {\n    return getVariableFromName(context, node.callee.name, node);\n  }\n  return undefined;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2692/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isArray, isRequiredParserServices, RequiredParserServices } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      considerIncludes:\n        \"This check ignores index 0; consider using 'includes' method to make this check safe and explicit.\",\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n    return {\n      BinaryExpression(node: estree.Node) {\n        const expression = node as estree.BinaryExpression;\n        if (\n          expression.operator === '>' &&\n          isZero(expression.right) &&\n          isArrayIndexOfCall(expression.left, services)\n        ) {\n          context.report({ node, messageId: 'considerIncludes' });\n        }\n      },\n    };\n  },\n};\n\nfunction isZero(node: estree.Expression): boolean {\n  return node.type === 'Literal' && node.value === 0;\n}\n\nfunction isArrayIndexOfCall(node: estree.Expression, services: RequiredParserServices): boolean {\n  return (\n    node.type === 'CallExpression' &&\n    node.arguments.length === 1 &&\n    node.callee.type === 'MemberExpression' &&\n    node.callee.property.type === 'Identifier' &&\n    node.callee.property.name === 'indexOf' &&\n    isArray(node.callee.object, services)\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2092/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { CookieFlagCheck } from '../helpers/cookie-flag-check';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      CallExpression: (node: estree.Node) =>\n        new CookieFlagCheck(context, 'secure').checkCookiesFromCallExpression(node),\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5659/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  getPropertyWithValue,\n  getValueOfExpression,\n  toEncodedMessage,\n  isNullLiteral,\n  getFullyQualifiedName,\n  getProperty,\n} from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const SIGN_MESSAGE = 'Use only strong cipher algorithms when signing this JWT.';\n    const VERIFY_MESSAGE =\n      'Use only strong cipher algorithms when verifying the signature of this JWT.';\n    const SECONDARY_MESSAGE = `The \"algorithms\" option should be defined and should not contain 'none'.`;\n\n    function checkCallToSign(\n      callExpression: estree.CallExpression,\n      thirdArgumentValue: estree.ObjectExpression,\n      secondaryLocations: estree.Node[],\n    ) {\n      const unsafeAlgorithmProperty = getPropertyWithValue(\n        context,\n        thirdArgumentValue,\n        'algorithm',\n        'none',\n      );\n      if (unsafeAlgorithmProperty) {\n        const unsafeAlgorithmValue = getValueOfExpression(\n          context,\n          unsafeAlgorithmProperty.value,\n          'Literal',\n        );\n        if (unsafeAlgorithmValue && unsafeAlgorithmValue !== unsafeAlgorithmProperty.value) {\n          secondaryLocations.push(unsafeAlgorithmValue);\n        }\n        raiseIssueOn(callExpression.callee, SIGN_MESSAGE, secondaryLocations);\n      }\n    }\n\n    function checkCallToVerify(\n      callExpression: estree.CallExpression,\n      publicKey: estree.Node,\n      thirdArgumentValue: estree.ObjectExpression,\n      secondaryLocations: estree.Node[],\n    ) {\n      const algorithmsProperty = getProperty(thirdArgumentValue, 'algorithms', context);\n      if (!algorithmsProperty) {\n        if (isNullLiteral(publicKey)) {\n          raiseIssueOn(callExpression.callee, VERIFY_MESSAGE, secondaryLocations);\n        }\n        return;\n      }\n      const algorithmsValue = getValueOfExpression(\n        context,\n        algorithmsProperty.value,\n        'ArrayExpression',\n      );\n      if (!algorithmsValue) {\n        return;\n      }\n      const algorithmsContainNone = algorithmsValue.elements.some(e => {\n        const value = getValueOfExpression(context, e, 'Literal');\n        return value?.value === 'none';\n      });\n      if (algorithmsContainNone) {\n        if (algorithmsProperty.value !== algorithmsValue) {\n          secondaryLocations.push(algorithmsValue);\n        }\n        raiseIssueOn(callExpression.callee, VERIFY_MESSAGE, secondaryLocations);\n      }\n    }\n\n    function raiseIssueOn(node: estree.Node, message: string, secondaryLocations: estree.Node[]) {\n      context.report({\n        node,\n        message: toEncodedMessage(\n          message,\n          secondaryLocations,\n          Array(secondaryLocations.length).fill(SECONDARY_MESSAGE),\n        ),\n      });\n    }\n\n    return {\n      CallExpression: (node: estree.Node) => {\n        const callExpression: estree.CallExpression = node as estree.CallExpression;\n        const fqn = getFullyQualifiedName(context, callExpression);\n        const isCallToSign = fqn === 'jsonwebtoken.sign';\n        const isCallToVerify = fqn === 'jsonwebtoken.verify';\n        if (!isCallToSign && !isCallToVerify) {\n          return;\n        }\n        if (callExpression.arguments.length < 3) {\n          // algorithm(s) property is contained in third argument of \"sign\" and \"verify\" calls\n          return;\n        }\n        const thirdArgument = callExpression.arguments[2];\n        const thirdArgumentValue = getValueOfExpression(context, thirdArgument, 'ObjectExpression');\n        if (!thirdArgumentValue) {\n          return;\n        }\n        const secondaryLocations: estree.Node[] = [thirdArgumentValue];\n        if (thirdArgumentValue !== thirdArgument) {\n          secondaryLocations.push(thirdArgument);\n        }\n        if (isCallToSign) {\n          checkCallToSign(callExpression, thirdArgumentValue, secondaryLocations);\n        }\n        const secondArgument = callExpression.arguments[1];\n        if (isCallToVerify) {\n          checkCallToVerify(callExpression, secondArgument, thirdArgumentValue, secondaryLocations);\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3415/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isIdentifier, isLiteral, isMethodCall, Mocha, toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nconst ASSERT_FUNCTIONS = [\n  'equal',\n  'notEqual',\n  'strictEqual',\n  'notStrictEqual',\n  'deepEqual',\n  'notDeepEqual',\n  'closeTo',\n  'approximately',\n];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const testCases: estree.Node[] = [];\n    return {\n      CallExpression(node: estree.Node) {\n        if (Mocha.isTestCase(node)) {\n          testCases.push(node);\n          return;\n        }\n        if (testCases.length > 0) {\n          checkInvertedArguments(node as estree.CallExpression, context);\n        }\n      },\n      'CallExpression:exit': (node: estree.Node) => {\n        if (Mocha.isTestCase(node)) {\n          testCases.pop();\n        }\n      },\n    };\n  },\n};\n\nfunction checkInvertedArguments(node: estree.CallExpression, context: Rule.RuleContext) {\n  const args = extractAssertionsArguments(node);\n  if (args) {\n    const [actual, expected, format] = args;\n    if (isLiteral(actual) && !isLiteral(expected)) {\n      const message = toEncodedMessage(\n        `Swap these 2 arguments so they are in the correct order: ${format}.`,\n        [actual],\n        ['Other argument to swap.'],\n      );\n      context.report({\n        node: expected,\n        message,\n        suggest: [\n          {\n            desc: 'Swap arguments',\n            fix: fixer => [\n              fixer.replaceText(actual, context.sourceCode.getText(expected)),\n              fixer.replaceText(expected, context.sourceCode.getText(actual)),\n            ],\n          },\n        ],\n      });\n    }\n  }\n}\n\nfunction extractAssertionsArguments(\n  node: estree.CallExpression,\n): [estree.Node, estree.Node, string] | null {\n  return extractAssertArguments(node) ?? extractExpectArguments(node) ?? extractFailArguments(node);\n}\n\nfunction extractAssertArguments(\n  node: estree.CallExpression,\n): [estree.Node, estree.Node, string] | null {\n  if (isMethodCall(node) && node.arguments.length > 1) {\n    const {\n      callee: { object, property },\n      arguments: [actual, expected],\n    } = node;\n    if (isIdentifier(object, 'assert') && isIdentifier(property, ...ASSERT_FUNCTIONS)) {\n      return [actual, expected, `${object.name}.${property.name}(actual, expected)`];\n    }\n  }\n  return null;\n}\n\nfunction extractExpectArguments(\n  node: estree.CallExpression,\n): [estree.Node, estree.Node, string] | null {\n  if (node.callee.type !== 'MemberExpression') {\n    return null;\n  }\n  let { object, property } = node.callee;\n  if (!isIdentifier(property, 'equal', 'eql', 'closeTo')) {\n    return null;\n  }\n  while (object.type === 'MemberExpression') {\n    object = object.object;\n  }\n  if (object.type === 'CallExpression' && isIdentifier(object.callee, 'expect')) {\n    return [\n      object.arguments[0],\n      node.arguments[0],\n      `${object.callee.name}(actual).to.${property.name}(expected)`,\n    ];\n  }\n  return null;\n}\n\nfunction extractFailArguments(\n  node: estree.CallExpression,\n): [estree.Node, estree.Node, string] | null {\n  if (isMethodCall(node) && node.arguments.length > 1) {\n    const {\n      callee: { object, property },\n      arguments: [actual, expected],\n    } = node;\n    if (isIdentifier(object, 'assert', 'expect', 'should') && isIdentifier(property, 'fail')) {\n      return [actual, expected, `${object.name}.${property.name}(actual, expected)`];\n    }\n  }\n  return null;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { Rule } from 'eslint';\nimport { interceptReportForReact } from '../helpers';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReportForReact(rule, reportExempting(hasSpreadOperator));\n}\n\nfunction reportExempting(exemptionCondition: (property: TSESTree.Node) => boolean) {\n  return (context: Rule.RuleContext, reportDescriptor: Rule.ReportDescriptor) => {\n    // check if node has attribute containing spread operator\n    if ('node' in reportDescriptor) {\n      const { node, ...rest } = reportDescriptor;\n      if (exemptionCondition(node as TSESTree.Node)) {\n        return;\n      }\n      context.report({\n        node,\n        ...rest,\n      });\n    }\n  };\n}\n\nfunction hasSpreadOperator(node: TSESTree.Node) {\n  return (\n    node.type === 'JSXElement' &&\n    node.openingElement.attributes.some(attribute => attribute.type === 'JSXSpreadAttribute')\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport react from 'eslint-plugin-react';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(react.rules['jsx-key']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6481/javascript\n\nimport { Rule } from 'eslint';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return changeRuleMessagesWith(rule, lineRemover());\n}\n\nfunction changeRuleMessagesWith(\n  rule: Rule.RuleModule,\n  messageChanger: (message: string) => string,\n) {\n  if (rule.meta?.messages) {\n    const messages = rule.meta.messages;\n    const newMessages = Object.fromEntries(\n      Object.entries(messages).map(([key, value]) => [key, messageChanger(value)]),\n    );\n    rule.meta.messages = newMessages;\n  }\n  return rule;\n}\n\nfunction lineRemover() {\n  const lineRegexp = / \\(at line [^)]+\\)/g;\n  return (message: string) => message.replace(lineRegexp, '');\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport react from 'eslint-plugin-react';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(react.rules['jsx-no-constructed-context-values']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6749/javascript\n\nimport { Rule } from 'eslint';\nimport { interceptReport } from '../helpers';\n\n/**\n * The core implementation of the rule reports on empty React fragments.\n * Also, one of the two issue messages include a Unicode character.\n */\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.hasSuggestions = true;\n  rule.meta!.messages = {\n    ...rule.meta!.messages,\n    /* Map to a more friendly message */\n    NeedsMoreChildren: 'A fragment with only one child is redundant.',\n  };\n  return interceptReport(rule, (context, descriptor) => {\n    const { node } = descriptor as any;\n\n    /* Ignore empty fragments */\n    if (node.type === 'JSXFragment' && node.children.length === 0) {\n      return;\n    }\n\n    context.report(descriptor);\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport react from 'eslint-plugin-react';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(react.rules['jsx-no-useless-fragment']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6853/javascript\nimport { Rule } from 'eslint';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { Node } from 'estree';\nimport { interceptReport } from '../helpers';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, (context, reportDescriptor) => {\n    const { node } = reportDescriptor as unknown as { node: TSESTree.JSXOpeningElement };\n    const parent = node.parent as TSESTree.JSXElement;\n    if (parent.children !== undefined) {\n      for (const child of parent.children) {\n        if (child.type === 'JSXElement' && isCustomComponent(child)) {\n          // we ignore the issue\n          return;\n        }\n      }\n    }\n    const name = node.name as unknown as Node;\n    context.report({ ...reportDescriptor, node: name });\n  });\n}\n\nfunction isCustomComponent(node: TSESTree.JSXElement) {\n  return !KNOWN_HTML_TAGS.has((node.openingElement.name as any).name);\n}\n\nconst KNOWN_HTML_TAGS: Set<string> = new Set([\n  'a',\n  'area',\n  'abbr',\n  'address',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'menu',\n  'meta',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'search',\n  'section',\n  'select',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'svg',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport jsxA11y from 'eslint-plugin-jsx-a11y';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(jsxA11y.rules['label-has-associated-control']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1439/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      removeLabel: 'Remove this \"{{label}}\" label.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      LabeledStatement: (node: estree.Node) =>\n        checkLabeledStatement(node as estree.LabeledStatement, context),\n    };\n  },\n};\n\nfunction checkLabeledStatement(node: estree.LabeledStatement, context: Rule.RuleContext) {\n  if (!isLoopStatement(node.body) && !isSwitchStatement(node.body)) {\n    context.report({\n      messageId: 'removeLabel',\n      data: {\n        label: node.label.name,\n      },\n      node: node.label,\n    });\n  }\n}\n\nfunction isLoopStatement(node: estree.Node) {\n  return (\n    node.type === 'WhileStatement' ||\n    node.type === 'DoWhileStatement' ||\n    node.type === 'ForStatement' ||\n    node.type === 'ForOfStatement' ||\n    node.type === 'ForInStatement'\n  );\n}\n\nfunction isSwitchStatement(node: estree.Node) {\n  return node.type === 'SwitchStatement';\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5148/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getValueOfExpression, isIdentifier, isMethodCall, isStringLiteral } from '../helpers';\n\nconst REQUIRED_OPTION = 'noopener';\nconst REQUIRED_OPTION_INDEX = 2;\nconst URL_INDEX = 0;\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      missingNoopener: 'Make sure not using \"noopener\" is safe here.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      CallExpression: (node: estree.CallExpression) => {\n        if (!isMethodCall(node)) {\n          return;\n        }\n        const { object, property } = node.callee;\n\n        const isWindowOpen =\n          isIdentifier(property, 'open') &&\n          (isIdentifier(object, 'window') || isThisWindow(object));\n\n        if (!isWindowOpen) {\n          return;\n        }\n\n        const args = node.arguments;\n        const hasHttpUrl = URL_INDEX < args.length && isHttpUrl(context, args[URL_INDEX]);\n        if (!hasHttpUrl) {\n          return;\n        }\n\n        if (\n          args.length <= REQUIRED_OPTION_INDEX ||\n          !hasRequiredOption(context, args[REQUIRED_OPTION_INDEX])\n        ) {\n          context.report({\n            messageId: 'missingNoopener',\n            node: property,\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction isThisWindow(node: estree.Node) {\n  return (\n    node.type === 'MemberExpression' &&\n    node.object.type === 'ThisExpression' &&\n    isIdentifier(node.property, 'window')\n  );\n}\n\nfunction hasRequiredOption(context: Rule.RuleContext, argument: estree.Node) {\n  const stringOrNothing = extractString(context, argument);\n  return stringOrNothing?.includes(REQUIRED_OPTION);\n}\n\nfunction isHttpUrl(context: Rule.RuleContext, argument: estree.Node): boolean {\n  const stringOrNothing = extractString(context, argument);\n  return (\n    stringOrNothing !== undefined &&\n    (stringOrNothing.startsWith('http://') || stringOrNothing.startsWith('https://'))\n  );\n}\n\nfunction extractString(context: Rule.RuleContext, node: estree.Node): string | undefined {\n  const literalNodeOrNothing = getValueOfExpression(context, node, 'Literal');\n  if (literalNodeOrNothing === undefined || !isStringLiteral(literalNodeOrNothing)) {\n    return undefined;\n  } else {\n    return literalNodeOrNothing.value;\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4622/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { UTILITY_TYPES, isIdentifier } from '../helpers';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nexport type Options = [\n  {\n    threshold: number;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    messages: {\n      refactorUnion: 'Refactor this union type to have less than {{threshold}} elements.',\n    },\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          threshold: {\n            type: 'integer',\n          },\n        },\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      TSUnionType: (node: estree.Node) => {\n        const union = node as unknown as TSESTree.TSUnionType;\n        if (isUsedWithUtilityType(union)) {\n          return;\n        }\n        const [{ threshold }] = context.options as Options;\n        if (union.types.length > threshold && !isFromTypeStatement(union)) {\n          context.report({\n            messageId: 'refactorUnion',\n            data: {\n              threshold: `${threshold}`,\n            },\n            node,\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction isFromTypeStatement(node: TSESTree.TSUnionType): boolean {\n  return node.parent!.type === 'TSTypeAliasDeclaration';\n}\n\nfunction isUsedWithUtilityType(node: TSESTree.TSUnionType): boolean {\n  return (\n    node.parent!.type === 'TSTypeParameterInstantiation' &&\n    node.parent!.parent!.type === 'TSTypeReference' &&\n    isIdentifier(node.parent!.parent!.typeName, ...UTILITY_TYPES)\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4084/javascript\n\nimport { Rule } from 'eslint';\nimport { Node } from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { interceptReport } from '../helpers';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, (context, descriptor) => {\n    const { node } = descriptor as unknown as { node: TSESTree.JSXOpeningElement };\n    const name = node.name as unknown as Node;\n    context.report({ ...descriptor, node: name });\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport jsxA11y from 'eslint-plugin-jsx-a11y';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(jsxA11y.rules['media-has-caption']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1994/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { areEquivalent } from 'eslint-plugin-sonarjs/lib/src/utils/equivalence';\nimport { getParent, RuleContext } from '../helpers';\nimport { TSESTree } from '@typescript-eslint/utils';\n\nclass ForInfo {\n  updatedExpressions: estree.Node[] = [];\n  testedExpressions: estree.Node[] = [];\n\n  constructor(readonly forLoop: estree.ForStatement) {}\n}\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      misplacedCounter: `This loop's stop condition tests \"{{test}}\" but the incrementer updates \"{{update}}\".`,\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const forLoopStack: ForInfo[] = [];\n\n    function join(expressions: estree.Node[]) {\n      return expressions.map(expr => context.sourceCode.getText(expr)).join(', ');\n    }\n\n    function isInsideUpdate(node: estree.Node) {\n      return isInside(node, f => f.update);\n    }\n\n    function isInsideTest(node: estree.Node) {\n      return isInside(node, f => f.test);\n    }\n\n    function isInside(\n      node: estree.Node,\n      getChild: (loop: estree.ForStatement) => estree.Expression | null | undefined,\n    ) {\n      if (forLoopStack.length > 0) {\n        const currentLoop = peekFor();\n        const parentChain = context.sourceCode.getAncestors(node);\n        parentChain.push(node);\n        const forLoopChild = getChild(currentLoop.forLoop);\n        if (forLoopChild) {\n          return parentChain.some(parentChainNode => forLoopChild === parentChainNode);\n        }\n      }\n      return false;\n    }\n\n    function peekFor() {\n      return forLoopStack[forLoopStack.length - 1];\n    }\n\n    return {\n      ForStatement: (node: estree.Node) => {\n        forLoopStack.push(new ForInfo(node as estree.ForStatement));\n      },\n      'ForStatement:exit': () => {\n        const forInfo = forLoopStack.pop()!;\n        if (forInfo.updatedExpressions.length === 0 || !forInfo.forLoop.test) {\n          return;\n        }\n        const hasIntersection = forInfo.testedExpressions.some(testedExpr =>\n          forInfo.updatedExpressions.some(updatedExpr =>\n            areEquivalent(\n              updatedExpr as TSESTree.Node,\n              testedExpr as TSESTree.Node,\n              (context as unknown as RuleContext).getSourceCode(),\n            ),\n          ),\n        );\n\n        if (!hasIntersection) {\n          context.report({\n            loc: context.sourceCode.getFirstToken(forInfo.forLoop)!.loc,\n            messageId: 'misplacedCounter',\n            data: {\n              test: join(forInfo.testedExpressions),\n              update: join(forInfo.updatedExpressions),\n            },\n          });\n        }\n      },\n\n      'ForStatement AssignmentExpression': (node: estree.Node) => {\n        if (isInsideUpdate(node)) {\n          const left = (node as estree.AssignmentExpression).left;\n          const assignedExpressions: estree.Node[] = [];\n          computeAssignedExpressions(left, assignedExpressions);\n          const { updatedExpressions } = peekFor();\n          assignedExpressions.forEach(ass => updatedExpressions.push(ass));\n        }\n      },\n\n      'ForStatement UpdateExpression': (node: estree.Node) => {\n        if (isInsideUpdate(node)) {\n          peekFor().updatedExpressions.push((node as estree.UpdateExpression).argument);\n        }\n      },\n\n      'ForStatement CallExpression': (node: estree.Node) => {\n        if (!isInsideUpdate(node)) {\n          return;\n        }\n        const callee = getCalleeObject(node as estree.CallExpression);\n        if (callee) {\n          peekFor().updatedExpressions.push(callee);\n        }\n      },\n\n      'ForStatement Identifier': (node: estree.Node) => {\n        if (isInsideTest(node)) {\n          const parent = getParent(context, node)!;\n          if (parent.type !== 'MemberExpression' || parent.computed || parent.object === node) {\n            peekFor().testedExpressions.push(node);\n          }\n        }\n      },\n\n      'ForStatement MemberExpression': (node: estree.Node) => {\n        if (\n          isInsideTest(node) &&\n          getParent(context, node)!.type !== 'MemberExpression' &&\n          getParent(context, node)!.type !== 'CallExpression'\n        ) {\n          peekFor().testedExpressions.push(node);\n        }\n      },\n    };\n  },\n};\n\nfunction getCalleeObject(node: estree.CallExpression) {\n  let callee = node.callee;\n  while (callee.type === 'MemberExpression') {\n    callee = callee.object;\n  }\n  if (callee.type === 'Identifier' && callee !== node.callee) {\n    return callee;\n  }\n  return null;\n}\n\nfunction computeAssignedExpressions(node: estree.Node | null, assigned: Array<estree.Node | null>) {\n  switch (node?.type) {\n    case 'ArrayPattern':\n      node.elements.forEach(element => computeAssignedExpressions(element, assigned));\n      break;\n    case 'ObjectPattern':\n      node.properties.forEach(property => computeAssignedExpressions(property, assigned));\n      break;\n    case 'Property':\n      computeAssignedExpressions(node.value, assigned);\n      break;\n    case 'AssignmentPattern':\n      computeAssignedExpressions(node.left, assigned);\n      break;\n    default:\n      assigned.push(node);\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1082/javascript\n\nimport { Rule } from 'eslint';\nimport { mergeRules } from '../helpers';\nimport jsxA11y from 'eslint-plugin-jsx-a11y';\n\nconst mouseEventsHaveKeyEvents = jsxA11y.rules['mouse-events-have-key-events'];\nconst clickEventsHaveKeyEvents = jsxA11y.rules['click-events-have-key-events'];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      ...mouseEventsHaveKeyEvents.meta!.messages,\n      ...clickEventsHaveKeyEvents.meta!.messages,\n    },\n  },\n\n  create(context: Rule.RuleContext) {\n    const mouseEventsHaveKeyEventsListener = mouseEventsHaveKeyEvents.create(context);\n    const clickEventsHaveKeyEventsListener = clickEventsHaveKeyEvents.create(context);\n\n    return mergeRules(mouseEventsHaveKeyEventsListener, clickEventsHaveKeyEventsListener);\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S134/javascript\n\nimport { Rule, AST } from 'eslint';\nimport * as estree from 'estree';\nimport { last, toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nexport type Options = [\n  {\n    maximumNestingLevel: number;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          maximumNestingLevel: {\n            type: 'integer',\n          },\n        },\n      },\n      {\n        type: 'string',\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n\n  create(context: Rule.RuleContext) {\n    const sourceCode = context.sourceCode;\n    const [{ maximumNestingLevel: threshold }] = context.options as Options;\n    const nodeStack: AST.Token[] = [];\n    function push(n: AST.Token) {\n      nodeStack.push(n);\n    }\n    function pop() {\n      return nodeStack.pop();\n    }\n    function check(node: estree.Node) {\n      if (nodeStack.length === threshold) {\n        context.report({\n          message: toEncodedMessage(\n            `Refactor this code to not nest more than ${threshold} if/for/while/switch/try statements.`,\n            nodeStack,\n            nodeStack.map(_n => '+1'),\n          ),\n          loc: sourceCode.getFirstToken(node)!.loc,\n        });\n      }\n    }\n    function isElseIf(node: estree.Node) {\n      const parent = last(context.sourceCode.getAncestors(node));\n      return (\n        node.type === 'IfStatement' && parent.type === 'IfStatement' && node === parent.alternate\n      );\n    }\n    const controlFlowNodes = [\n      'ForStatement',\n      'ForInStatement',\n      'ForOfStatement',\n      'WhileStatement',\n      'DoWhileStatement',\n      'IfStatement',\n      'TryStatement',\n      'SwitchStatement',\n    ].join(',');\n    return {\n      [controlFlowNodes]: (node: estree.Node) => {\n        if (isElseIf(node)) {\n          pop();\n          push(sourceCode.getFirstToken(node)!);\n        } else {\n          check(node);\n          push(sourceCode.getFirstToken(node)!);\n        }\n      },\n      [`${controlFlowNodes}:exit`]: (node: estree.Node) => {\n        if (!isElseIf(node)) {\n          pop();\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2430/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getVariableFromName, interceptReport } from '../helpers';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, reportExempting(isNotClassOrFunction));\n}\n\nfunction reportExempting(\n  exemptionCondition: (context: Rule.RuleContext, node: estree.CallExpression) => boolean,\n): (context: Rule.RuleContext, reportDescriptor: Rule.ReportDescriptor) => void {\n  return (context, reportDescriptor) => {\n    if ('node' in reportDescriptor) {\n      const node = reportDescriptor['node'] as estree.CallExpression;\n      if (!exemptionCondition(context, node)) {\n        context.report(reportDescriptor);\n      }\n    }\n  };\n}\n\nfunction isNotClassOrFunction(context: Rule.RuleContext, node: estree.CallExpression) {\n  const callee = node.callee;\n  if (callee.type !== 'Identifier') {\n    return false;\n  }\n  const variable = getVariableFromName(context, callee.name, node);\n  if (variable) {\n    for (const def of variable.defs) {\n      if (!(def.type === 'ClassName' || def.type === 'FunctionName')) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { eslintRules } from '../core';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(eslintRules['new-cap']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2999/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport * as ts from 'typescript';\nimport {\n  isRequiredParserServices,\n  getTypeFromTreeNode,\n  getSignatureFromCallee,\n  toEncodedMessage,\n} from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nexport type Options = [\n  {\n    considerJSDoc: boolean;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          considerJSDoc: {\n            type: 'boolean',\n          },\n        },\n      },\n      {\n        type: 'string',\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const { considerJSDoc } = (context.options as Options)[0];\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n    return {\n      'NewExpression[callee.type!=\"ThisExpression\"]': (node: estree.Node) => {\n        const { callee } = node as estree.NewExpression;\n        const type = getTypeFromTreeNode(callee, services);\n        const signature = getSignatureFromCallee(node, services);\n        if (!isInstantiable(type, signature, considerJSDoc) && !isAny(type)) {\n          const functionToken = context.sourceCode.getFirstToken(\n            node,\n            token => token.type === 'Keyword' && token.value === 'function',\n          );\n          const newToken = context.sourceCode.getFirstToken(\n            node,\n            token => token.type === 'Keyword' && token.value === 'new',\n          )!;\n          const text = isFunction(type) ? 'this function' : context.sourceCode.getText(callee);\n          const loc = callee.type === 'FunctionExpression' ? functionToken!.loc : callee.loc!;\n          context.report({\n            message: toEncodedMessage(`Replace ${text} with a constructor function.`, [newToken]),\n            loc,\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction isInstantiable(\n  type: ts.Type,\n  signature: ts.Signature | undefined,\n  considerJSDoc: boolean,\n): boolean {\n  return (\n    isClass(type) ||\n    isModule(type) ||\n    isConstructor(type, signature, considerJSDoc) ||\n    (type.isUnionOrIntersection() &&\n      type.types.some(tp => isInstantiable(tp, signature, considerJSDoc)))\n  );\n}\n\nfunction isClass(type: ts.Type) {\n  return (\n    type.symbol &&\n    ((type.symbol.flags & ts.SymbolFlags.Class) !== 0 ||\n      (type.symbol.flags & ts.SymbolFlags.Type) !== 0)\n  );\n}\n\nfunction isModule(type: ts.Type) {\n  return type.symbol && (type.symbol.flags & ts.SymbolFlags.Module) !== 0;\n}\n\nfunction isFunction(type: ts.Type) {\n  return type.symbol && (type.symbol.flags & ts.SymbolFlags.Function) !== 0;\n}\n\nfunction isConstructor(type: ts.Type, signature: ts.Signature | undefined, considerJSDoc: boolean) {\n  return isFunction(type) && (!considerJSDoc || hasJSDocAnnotation(signature));\n}\n\nfunction hasJSDocAnnotation(signature: ts.Signature | undefined) {\n  return signature?.getJsDocTags().some(tag => ['constructor', 'class'].includes(tag.name));\n}\n\nfunction isAny(type: ts.Type) {\n  return type.flags === ts.TypeFlags.Any;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4275/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport {\n  getVariableFromName,\n  isMethodInvocation,\n  isStringLiteral,\n  interceptReport,\n  mergeRules,\n  toEncodedMessage,\n} from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\nimport { eslintRules } from '../core';\n\ntype AccessorNode = TSESTree.Property | TSESTree.MethodDefinition;\n\nfunction isAccessorNode(node: TSESTree.Node | null | undefined): node is AccessorNode {\n  return node?.type === 'Property' || node?.type === 'MethodDefinition';\n}\n\n// The 'definition' property says how the accessor is defined: that's to say if it's part of a class definition,\n// an object literal or a property descriptor passed to one of the Object.defineProperty() variants.\n// The 'refResolver' property is used to extract the reference name used by the accessor.\ninterface AccessorInfo {\n  name: string;\n  type: 'getter' | 'setter';\n  definition: 'class' | 'object' | 'descriptor';\n  refResolver: (expression: TSESTree.Expression | null) => string | null;\n}\n\ninterface Accessor {\n  info: AccessorInfo;\n  statement: TSESTree.Statement | null;\n  matchingFields: Field[];\n  node: AccessorNode;\n}\n\ninterface Field {\n  name: string;\n  node: TSESTree.Node;\n}\n\n// The rule is the merger of a decorated ESLint 'getter-return' with the SonarJS 'no-accessor-field-mismatch'.\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext): Rule.RuleListener {\n    const getterReturnListener = getterReturnDecorator.create(context);\n    const noAccessorFieldMismatchListener = noAccessorFieldMismatchRule.create(context);\n    return mergeRules(getterReturnListener, noAccessorFieldMismatchListener);\n  },\n};\n\n// The decorator adds secondary location to ESLint 'getter-return'\n// as found in issues raised by SonarJS 'no-accessor-field-mismatch'.\nfunction decorateGetterReturn(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, (context, descriptor) => {\n    const props: { messageId?: string; node?: estree.Node } & Rule.ReportDescriptor = descriptor;\n    const { node, messageId } = props;\n\n    // The ESLint reports on functions, so the accessor might be the parent.\n    // And if it's an accessor with a matching field, report with secondary location pointing to the field.\n    if (node != null && reportWithFieldLocation(context, (node as TSESTree.Node).parent)) {\n      return;\n    }\n\n    // Otherwise convert the message to the Sonar format.\n    if (messageId === 'expected') {\n      reportWithSonarFormat(context, descriptor, 'Refactor this getter to return a value.');\n    } else if (messageId === 'expectedAlways') {\n      reportWithSonarFormat(context, descriptor, 'Refactor this getter to always return a value.');\n    }\n  });\n}\n\nconst getterReturnDecorator = decorateGetterReturn(eslintRules['getter-return']);\n\nconst noAccessorFieldMismatchRule: Rule.RuleModule = {\n  create(context: Rule.RuleContext) {\n    // Stack of nested object or class fields\n    const currentFieldsStack = [new Map<string, Field>()];\n\n    // Selector of a single property descriptor used in Object.defineProperty() or Reflect.defineProperty()\n    const singleDescriptorAccessorSelector = [\n      'CallExpression[arguments.1.type=Literal]',\n      'ObjectExpression:nth-child(3)',\n      'Property[value.type=FunctionExpression][key.name=/^[gs]et$/]',\n    ].join(' > ');\n\n    // Selector of multiple property descriptors used in Object.defineProperties() or Object.create()\n    const multiDescriptorsAccessorSelector = [\n      'CallExpression',\n      'ObjectExpression:nth-child(2)',\n      'Property:matches([key.type=Identifier], [key.type=Literal])',\n      'ObjectExpression',\n      'Property[value.type=FunctionExpression][key.name=/^[gs]et$/]',\n    ].join(' > ');\n\n    return {\n      // Check Object literal properties or Class method definitions\n      'Property,MethodDefinition': (node: estree.Node) => {\n        const accessorNode = node as AccessorNode;\n        const accessorInfo = getObjectOrClassAccessorInfo(accessorNode);\n        if (accessorInfo) {\n          const fieldMap = currentFieldsStack[currentFieldsStack.length - 1];\n          checkAccessorNode(context, accessorNode, fieldMap, accessorInfo);\n        }\n      },\n\n      // Check Object.defineProperty() or Reflect.defineProperty()\n      [singleDescriptorAccessorSelector]: (node: estree.Node) => {\n        const accessorNode = node as TSESTree.Property;\n        const accessorInfo = getSingleDescriptorAccessorInfo(accessorNode);\n        if (accessorInfo) {\n          const fieldMap = getSingleVariableFieldMap(context, accessorInfo.name, node);\n          checkAccessorNode(context, accessorNode, fieldMap, accessorInfo);\n        }\n      },\n\n      // Check Object.defineProperties() or Object.create()\n      [multiDescriptorsAccessorSelector]: (node: estree.Node) => {\n        const accessorNode = node as TSESTree.Property;\n        const accessorInfo = getMultiDescriptorsAccessorInfo(accessorNode);\n        if (accessorInfo) {\n          const fieldMap = getSingleVariableFieldMap(context, accessorInfo.name, node);\n          checkAccessorNode(context, accessorNode, fieldMap, accessorInfo);\n        }\n      },\n\n      ClassBody: (node: estree.Node) => {\n        currentFieldsStack.push(getClassBodyFieldMap(node as TSESTree.ClassBody));\n      },\n      ObjectExpression: (node: estree.Node) => {\n        currentFieldsStack.push(getObjectExpressionFieldMap(node as TSESTree.ObjectExpression));\n      },\n      ':matches(ClassBody, ObjectExpression):exit': () => {\n        currentFieldsStack.pop();\n      },\n    };\n  },\n};\n\nfunction checkAccessorNode(\n  context: Rule.RuleContext,\n  node: AccessorNode,\n  fieldMap: Map<string, Field>,\n  info: AccessorInfo,\n) {\n  const accessor = getAccessor(node, fieldMap, info);\n  if (accessor == null || isReportedByGetterReturnDecorator(accessor)) {\n    return;\n  }\n\n  if (!isUsingAccessorFieldInBody(accessor)) {\n    reportWithSecondaryLocation(context, accessor);\n  }\n}\n\n// ESLint 'getter-return' reports for empty getters\n// or empty property descriptor get functions.\nfunction isReportedByGetterReturnDecorator(accessor: Accessor) {\n  const info = accessor.info;\n  const emptyGetter = info.type === 'getter' && accessor.statement == null;\n  return emptyGetter && (info.definition === 'descriptor' || accessor.node.kind === 'get');\n}\n\nfunction reportWithFieldLocation(context: Rule.RuleContext, node: TSESTree.Node | undefined) {\n  if (!node || !isAccessorNode(node)) {\n    return false;\n  }\n  const info = getNodeAccessorInfo(node);\n  if (!info) {\n    return false;\n  }\n  const fieldMap = getNodeFieldMap(context, node.parent, info);\n  const accessor = getAccessor(node, fieldMap, info);\n  if (!accessor) {\n    return false;\n  }\n  reportWithSecondaryLocation(context, accessor);\n  return true;\n}\n\nfunction reportWithSonarFormat(\n  context: Rule.RuleContext,\n  descriptor: Rule.ReportDescriptor,\n  message: string,\n) {\n  context.report({ ...descriptor, messageId: undefined, message: toEncodedMessage(message) });\n}\n\nfunction reportWithSecondaryLocation(context: Rule.RuleContext, accessor: Accessor) {\n  const fieldToRefer = accessor.matchingFields[0];\n  const ref = accessor.info.definition === 'descriptor' ? 'variable' : 'property';\n  const primaryMessage =\n    `Refactor this ${accessor.info.type} ` +\n    `so that it actually refers to the ${ref} '${fieldToRefer.name}'.`;\n  const secondaryLocations = [fieldToRefer.node];\n  const secondaryMessages = [`${ref[0].toUpperCase()}${ref.slice(1)} which should be referred.`];\n\n  context.report({\n    message: toEncodedMessage(primaryMessage, secondaryLocations, secondaryMessages),\n    loc: accessor.node.key.loc,\n  });\n}\n\nfunction isPropertyDefinitionCall(call: estree.CallExpression | undefined) {\n  const objects = ['Object', 'Reflect'];\n  const method = 'defineProperty';\n  const minArgs = 3;\n  return call && objects.some(object => isMethodInvocation(call, object, method, minArgs));\n}\n\nfunction isPropertiesDefinitionCall(call: estree.CallExpression | undefined) {\n  const object = 'Object';\n  const methods = ['defineProperties', 'create'];\n  const minArgs = 2;\n  return call && methods.some(methodName => isMethodInvocation(call, object, methodName, minArgs));\n}\n\nfunction getAccessor(\n  accessor: AccessorNode,\n  fieldMap: Map<string, Field> | null,\n  info: AccessorInfo,\n) {\n  const accessorIsPublic =\n    accessor.type !== 'MethodDefinition' ||\n    accessor.accessibility == null ||\n    accessor.accessibility === 'public';\n  const statements = getFunctionBody(accessor.value);\n  if (!fieldMap || !accessorIsPublic || !statements || statements.length > 1) {\n    return null;\n  }\n\n  const matchingFields = findMatchingFields(fieldMap, info.name);\n  if (matchingFields.length === 0) {\n    return null;\n  }\n\n  return {\n    statement: statements.length === 0 ? null : statements[0],\n    info,\n    matchingFields,\n    node: accessor,\n  };\n}\n\nfunction getNodeAccessorInfo(accessorNode: AccessorNode) {\n  if (accessorNode.type === 'MethodDefinition') {\n    return getObjectOrClassAccessorInfo(accessorNode);\n  } else {\n    return (\n      getMultiDescriptorsAccessorInfo(accessorNode) ??\n      getSingleDescriptorAccessorInfo(accessorNode) ??\n      getObjectOrClassAccessorInfo(accessorNode)\n    );\n  }\n}\n\nfunction getSingleDescriptorAccessorInfo(accessorNode: TSESTree.Property) {\n  const callNode = findParentCallExpression(accessorNode);\n  const propertyNode = callNode?.arguments[1];\n  if (!isPropertyDefinitionCall(callNode) || !propertyNode || !isStringLiteral(propertyNode)) {\n    return null;\n  }\n  return getDescriptorAccessorInfo(String(propertyNode.value), accessorNode);\n}\n\nfunction getMultiDescriptorsAccessorInfo(accessorNode: TSESTree.Property) {\n  const callNode = findParentCallExpression(accessorNode);\n  const propertyNode = accessorNode.parent?.parent;\n  if (!isPropertiesDefinitionCall(callNode) || propertyNode?.type !== 'Property') {\n    return null;\n  }\n  const propertyName = getName(propertyNode.key);\n  if (!propertyName) {\n    return null;\n  }\n  return getDescriptorAccessorInfo(propertyName, accessorNode);\n}\n\nfunction getDescriptorAccessorInfo(name: string, accessor: TSESTree.Property): AccessorInfo | null {\n  const key = getName(accessor.key);\n  if (key == null) {\n    return null;\n  } else {\n    // Name is not set to lower-case as we can't search variables in a case-insensitive way.\n    return {\n      type: key === 'get' ? 'getter' : 'setter',\n      name,\n      definition: 'descriptor',\n      refResolver: getIdentifierName,\n    };\n  }\n}\n\nfunction getObjectOrClassAccessorInfo(accessor: AccessorNode): AccessorInfo | null {\n  let name = getName(accessor.key);\n  if (!name) {\n    return null;\n  }\n\n  name = name.toLowerCase();\n  let type: AccessorInfo['type'] | null = null;\n\n  if (accessor.kind === 'get') {\n    type = 'getter';\n  } else if (accessor.kind === 'set') {\n    type = 'setter';\n  } else if (accessor.value.type === 'FunctionExpression') {\n    const offset = 3;\n    const params = accessor.value.params;\n    if (name.startsWith('set') && name.length > offset && params.length === 1) {\n      type = 'setter';\n      name = name.substring(offset);\n    } else if (name.startsWith('get') && name.length > offset && params.length === 0) {\n      type = 'getter';\n      name = name.substring(offset);\n    }\n  }\n\n  if (type == null) {\n    return null;\n  }\n\n  return {\n    type,\n    name,\n    definition: accessor.type === 'Property' ? 'object' : 'class',\n    refResolver: getPropertyName,\n  };\n}\n\nfunction findParentCallExpression(node: TSESTree.Property) {\n  const parent = node.parent?.parent;\n  const candidates = [parent, parent?.parent?.parent];\n  return candidates.find(node => node?.type === 'CallExpression') as estree.CallExpression;\n}\n\nfunction getName(key: TSESTree.Node) {\n  if (key.type === 'Literal') {\n    return String(key.value);\n  } else if (key.type === 'Identifier' || key.type === 'PrivateIdentifier') {\n    return key.name;\n  }\n  return null;\n}\n\nfunction getNodeFieldMap(context: Rule.RuleContext, node: TSESTree.Node, info: AccessorInfo) {\n  if (info.definition === 'descriptor') {\n    return getSingleVariableFieldMap(context, info.name, node as estree.Node);\n  } else if (node?.type === 'ObjectExpression') {\n    return getObjectExpressionFieldMap(node);\n  } else if (node?.type === 'ClassBody') {\n    return getClassBodyFieldMap(node);\n  } else {\n    return null;\n  }\n}\n\nfunction getSingleVariableFieldMap(context: Rule.RuleContext, name: string, node: estree.Node) {\n  const fieldMap = new Map<string, Field>();\n  for (const candidate of [name, `_${name}`, `${name}_`]) {\n    const variable = getVariableFromName(context, candidate, node);\n    if (variable != null && variable.defs.length > 0) {\n      fieldMap.set(candidate, { name: candidate, node: variable.defs[0].node });\n      break;\n    }\n  }\n  return fieldMap;\n}\n\nfunction getObjectExpressionFieldMap(node: TSESTree.ObjectExpression) {\n  return getFieldMap(node.properties, prop => (isValidObjectField(prop) ? prop.key : null));\n}\n\nfunction getClassBodyFieldMap(classBody: TSESTree.ClassBody) {\n  const fields = getFieldMap(classBody.body, classElement =>\n    (classElement.type === 'PropertyDefinition' ||\n      classElement.type === 'TSAbstractPropertyDefinition') &&\n    !classElement.static\n      ? classElement.key\n      : null,\n  );\n  const fieldsFromConstructor = fieldsDeclaredInConstructorParameters(classBody);\n  return new Map([...fields, ...fieldsFromConstructor]);\n}\n\nfunction getFieldMap<T extends TSESTree.Node>(\n  elements: T[],\n  getPropertyName: (arg: T) => TSESTree.PropertyName | null,\n) {\n  const fields = new Map<string, Field>();\n  for (const element of elements) {\n    const propertyNameNode = getPropertyName(element);\n    if (propertyNameNode) {\n      const name = getName(propertyNameNode);\n      if (name) {\n        fields.set(name.toLowerCase(), {\n          name,\n          node: element,\n        });\n      }\n    }\n  }\n  return fields;\n}\n\nfunction isValidObjectField(prop: TSESTree.Node): prop is TSESTree.Property {\n  return prop.type === 'Property' && !prop.method && prop.kind === 'init';\n}\n\nfunction fieldsDeclaredInConstructorParameters(containingClass: TSESTree.ClassBody) {\n  const fieldsFromConstructor = new Map<string, Field>();\n  const constr = getConstructorOf(containingClass);\n  if (!constr) {\n    return fieldsFromConstructor;\n  }\n  for (const parameter of constr.params) {\n    if (\n      parameter.type === 'TSParameterProperty' &&\n      (parameter.accessibility || parameter.readonly)\n    ) {\n      const parameterName = getName(parameter.parameter);\n      if (parameterName) {\n        fieldsFromConstructor.set(parameterName, {\n          name: parameterName,\n          node: parameter,\n        });\n      }\n    }\n  }\n  return fieldsFromConstructor;\n}\n\nfunction getConstructorOf(\n  containingClass: TSESTree.ClassBody,\n): TSESTree.FunctionExpression | TSESTree.TSEmptyBodyFunctionExpression | undefined {\n  for (const classElement of containingClass.body) {\n    if (classElement.type === 'MethodDefinition' && getName(classElement.key) === 'constructor') {\n      return classElement.value;\n    }\n  }\n}\n\nfunction findMatchingFields(currentFields: Map<string, Field>, name: string) {\n  const underscoredTargetName1 = `_${name}`;\n  const underscoredTargetName2 = `${name}_`;\n  const exactFieldName = currentFields.get(name);\n  const underscoreFieldName1 = currentFields.get(underscoredTargetName1);\n  const underscoreFieldName2 = currentFields.get(underscoredTargetName2);\n  return [exactFieldName, underscoreFieldName1, underscoreFieldName2].filter(\n    field => field,\n  ) as Field[];\n}\n\nfunction getFunctionBody(node: TSESTree.Node) {\n  if (node.type !== 'FunctionExpression' || !node.body) {\n    return null;\n  }\n  return node.body.body;\n}\n\nfunction getPropertyName(expression: TSESTree.Expression | null): string | null {\n  if (\n    expression &&\n    expression.type === 'MemberExpression' &&\n    expression.object.type === 'ThisExpression'\n  ) {\n    return getName(expression.property);\n  }\n  return null;\n}\n\nfunction getIdentifierName(expression: TSESTree.Expression | null): string | null {\n  return expression?.type === 'Identifier' ? expression.name : null;\n}\n\nfunction getFieldUsedInsideSimpleBody(statement: TSESTree.Statement, accessorInfo: AccessorInfo) {\n  if (accessorInfo.type === 'setter') {\n    if (\n      statement.type === 'ExpressionStatement' &&\n      statement.expression.type === 'AssignmentExpression'\n    ) {\n      return accessorInfo.refResolver(statement.expression.left);\n    }\n  } else if (statement.type === 'ReturnStatement') {\n    return accessorInfo.refResolver(statement.argument);\n  }\n  return null;\n}\n\nfunction isUsingAccessorFieldInBody(accessor: Accessor) {\n  if (accessor.statement == null) {\n    return false;\n  }\n  const usedField = getFieldUsedInsideSimpleBody(accessor.statement, accessor.info);\n  if (!usedField) {\n    return true;\n  }\n  return accessor.matchingFields.some(matchingField => usedField === matchingField.name);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2871/javascript\n\nimport { Rule } from 'eslint';\nimport ts from 'typescript';\nimport * as estree from 'estree';\nimport {\n  getTypeFromTreeNode,\n  isArrayLikeType,\n  isBigIntArray,\n  isNumberArray,\n  isRequiredParserServices,\n  isStringArray,\n  sortLike,\n  copyingSortLike,\n} from '../helpers';\n\nconst compareNumberFunctionPlaceholder = '(a, b) => (a - b)';\nconst compareBigIntFunctionPlaceholder = [\n  '(a, b) => {',\n  '  if (a < b) {',\n  '    return -1;',\n  '  } else if (a > b) {',\n  '    return 1;',\n  '  } else {',\n  '    return 0;',\n  '  }',\n  '}',\n];\nconst languageSensitiveOrderPlaceholder = '(a, b) => a.localeCompare(b)';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      provideCompareFunction:\n        'Provide a compare function to avoid sorting elements alphabetically.',\n      provideCompareFunctionForArrayOfStrings:\n        'Provide a compare function that depends on \"String.localeCompare\", to reliably sort elements alphabetically.',\n      suggestNumericOrder: 'Add a comparator function to sort in ascending order',\n      suggestLanguageSensitiveOrder:\n        'Add a comparator function to sort in ascending language-sensitive order',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const sourceCode = context.sourceCode;\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n\n    return {\n      'CallExpression[arguments.length=0][callee.type=\"MemberExpression\"]': (\n        call: estree.CallExpression,\n      ) => {\n        const { object, property: node } = call.callee as estree.MemberExpression;\n        const text = sourceCode.getText(node);\n        const type = getTypeFromTreeNode(object, services);\n\n        if ([...sortLike, ...copyingSortLike].includes(text) && isArrayLikeType(type, services)) {\n          const suggest = getSuggestions(call, type);\n          const messageId = getMessageId(type);\n          context.report({ node, suggest, messageId });\n        }\n      },\n    };\n\n    function getSuggestions(call: estree.CallExpression, type: ts.Type) {\n      const suggestions: Rule.SuggestionReportDescriptor[] = [];\n      if (isNumberArray(type, services)) {\n        suggestions.push({\n          messageId: 'suggestNumericOrder',\n          fix: fixer(call, compareNumberFunctionPlaceholder),\n        });\n      } else if (isBigIntArray(type, services)) {\n        suggestions.push({\n          messageId: 'suggestNumericOrder',\n          fix: fixer(call, ...compareBigIntFunctionPlaceholder),\n        });\n      } else if (isStringArray(type, services)) {\n        suggestions.push({\n          messageId: 'suggestLanguageSensitiveOrder',\n          fix: fixer(call, languageSensitiveOrderPlaceholder),\n        });\n      }\n      return suggestions;\n    }\n\n    function getMessageId(type: ts.Type) {\n      if (isStringArray(type, services)) {\n        return 'provideCompareFunctionForArrayOfStrings';\n      }\n\n      return 'provideCompareFunction';\n    }\n\n    function fixer(call: estree.CallExpression, ...placeholder: string[]): Rule.ReportFixer {\n      const closingParenthesis = sourceCode.getLastToken(call, token => token.value === ')')!;\n      const indent = ' '.repeat(call.loc?.start.column!);\n      const text = placeholder.join(`\\n${indent}`);\n      return fixer => fixer.insertTextBefore(closingParenthesis, text);\n    }\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6268/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isMemberWithProperty, isLiteral } from '../helpers';\n\nconst bypassMethods = [\n  'bypassSecurityTrustHtml',\n  'bypassSecurityTrustStyle',\n  'bypassSecurityTrustScript',\n  'bypassSecurityTrustUrl',\n  'bypassSecurityTrustResourceUrl',\n];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      checkAngularBypass: 'Make sure disabling Angular built-in sanitization is safe here.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      CallExpression: (node: estree.Node) => {\n        const { callee, arguments: args } = node as estree.CallExpression;\n\n        if (\n          isMemberWithProperty(callee, ...bypassMethods) &&\n          args.length === 1 &&\n          !isHardcodedLiteral(args[0])\n        ) {\n          context.report({\n            messageId: 'checkAngularBypass',\n            node: (callee as estree.MemberExpression).property,\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction isHardcodedLiteral(node: estree.Node) {\n  if (node.type === 'TemplateLiteral') {\n    return node.expressions.length === 0;\n  } else {\n    return isLiteral(node);\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2870/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getParent, isArray, isRequiredParserServices } from '../helpers';\n\nconst ArrayDeleteExpression =\n  \"UnaryExpression[operator='delete'] > MemberExpression[computed=true]\";\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      removeDelete: 'Remove this use of \"delete\".',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (isRequiredParserServices(services)) {\n      return {\n        [ArrayDeleteExpression]: (node: estree.Node) => {\n          const member = node as estree.MemberExpression;\n          const object = member.object;\n          if (isArray(object, services)) {\n            raiseIssue(context, node);\n          }\n        },\n      };\n    }\n    return {};\n  },\n};\n\nfunction raiseIssue(context: Rule.RuleContext, node: estree.Node): void {\n  const deleteKeyword = context.sourceCode.getFirstToken(getParent(context, node)!);\n  context.report({\n    messageId: 'removeDelete',\n    loc: deleteKeyword!.loc,\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6479/javascript\n\n// inspired from `no-array-index` from `eslint-plugin-react`:\n// https://github.com/jsx-eslint/eslint-plugin-react/blob/0a2f6b7e9df32215fcd4e3061ec69ea3f2eef793/lib/rules/no-array-index-key.js#L16\n\nimport react from 'eslint-plugin-react';\nimport { interceptReportForReact } from '../helpers';\nimport { Rule } from 'eslint';\n\nexport const rule = interceptReportForReact(\n  react.rules['no-array-index-key'],\n  (context, reportDescriptor) => {\n    const { node } = reportDescriptor as Rule.ReportDescriptor & {\n      node: Rule.Node;\n    };\n\n    if (node.type === 'BinaryExpression') {\n      return;\n    }\n\n    // we got a report from ESLint, hence one of the expressions included in the literal _is_ the array index\n    // we can then safely bail if there is another expression in the literal\n    if (node.type === 'TemplateLiteral' && node.expressions.length > 1) {\n      return;\n    }\n\n    context.report(reportDescriptor);\n  },\n);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3579/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isArray, isString, isRequiredParserServices } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      noAssociativeArray:\n        'Make it an object if it must have named properties; otherwise, use a numeric index here.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n\n    return {\n      'AssignmentExpression[left.type=\"MemberExpression\"]'(node: estree.Node) {\n        const { property, object } = (node as estree.AssignmentExpression)\n          .left as estree.MemberExpression;\n        if (isString(property, services) && isArray(object, services)) {\n          context.report({\n            messageId: 'noAssociativeArray',\n            node,\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6551/javascript\n\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { Rule } from 'eslint';\nimport { isGenericType, interceptReport } from '../helpers';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, (context, reportDescriptor) => {\n    if ('node' in reportDescriptor) {\n      const services = context.sourceCode.parserServices;\n      if (isGenericType(reportDescriptor.node as TSESTree.Node, services)) {\n        // we skip\n      } else {\n        context.report(reportDescriptor);\n      }\n    }\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { tsEslintRules } from '../typescript-eslint';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(tsEslintRules['no-base-to-string']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2424/javascript\n\nimport { globalsByLibraries } from '../helpers';\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      removeOverride: 'Remove this override of \"{{overridden}}\".',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const overriden: Set<estree.Identifier> = new Set();\n\n    function isBuiltIn(variable: Scope.Variable) {\n      return globalsByLibraries.builtin.includes(variable.name);\n    }\n\n    function checkVariable(variable: Scope.Variable) {\n      if (isBuiltIn(variable)) {\n        variable.defs.forEach(def => overriden.add(def.name));\n        variable.references\n          .filter(ref => ref.isWrite())\n          .forEach(ref => overriden.add(ref.identifier));\n      }\n    }\n\n    function checkScope(scope: Scope.Scope) {\n      scope.variables.forEach(checkVariable);\n      scope.childScopes.forEach(checkScope);\n    }\n\n    function isTSEnumMemberId(node: estree.Identifier) {\n      const id = node as TSESTree.Identifier;\n      return id.parent?.type === 'TSEnumMember';\n    }\n\n    return {\n      Program: (node: estree.Node) => {\n        checkScope(context.sourceCode.getScope(node));\n      },\n      'Program:exit': () => {\n        overriden.forEach(node => {\n          if (!isTSEnumMemberId(node)) {\n            context.report({\n              messageId: 'removeOverride',\n              data: {\n                overridden: node.name,\n              },\n              node,\n            });\n          }\n        });\n        overriden.clear();\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1219/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      removeLabel: 'Remove this misleading \"{{label}}\" label.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const stack: number[] = [0];\n    function enterCase() {\n      stack.push(stack.pop()! + 1);\n    }\n    function leaveCase() {\n      stack.push(stack.pop()! - 1);\n    }\n    function inCase() {\n      return stack[stack.length - 1] > 0;\n    }\n    return {\n      SwitchCase: () => {\n        enterCase();\n      },\n      LabeledStatement: (node: estree.Node) => {\n        if (inCase()) {\n          const label = (node as estree.LabeledStatement).label;\n          context.report({\n            messageId: 'removeLabel',\n            data: {\n              label: label.name,\n            },\n            node: label,\n          });\n        }\n      },\n      'FunctionExpression, FunctionDeclaration': () => {\n        stack.push(0);\n      },\n      'SwitchCase:exit': () => {\n        leaveCase();\n      },\n      'FunctionExpression, FunctionDeclaration :exit': () => {\n        stack.pop();\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5332/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { URL } from 'url';\nimport { getValueOfExpression, getParent, getFullyQualifiedName, getProperty } from '../helpers';\nimport { normalizeFQN } from '../helpers/aws/cdk';\n\nconst INSECURE_PROTOCOLS = ['http://', 'ftp://', 'telnet://'];\nconst LOOPBACK_PATTERN = /localhost|127(?:\\.\\d+){0,2}\\.\\d+$|\\/\\/(?:0*:)*?:?0*1$/;\nconst EXCEPTION_FULL_HOSTS = [\n  'www.w3.org',\n  'xml.apache.org',\n  'schemas.xmlsoap.org',\n  'schemas.openxmlformats.org',\n  'rdfs.org',\n  'purl.org',\n  'xmlns.com',\n  'schemas.google.com',\n  'a9.com',\n  'ns.adobe.com',\n  'ltsc.ieee.org',\n  'docbook.org',\n  'graphml.graphdrawing.org',\n  'json-schema.org',\n];\nconst EXCEPTION_TOP_HOSTS = [\n  /\\.example$/,\n  /\\.?example\\.com$/,\n  /\\.?example\\.org$/,\n  /\\.test$/,\n  /\\.?test\\.com$/,\n];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      insecureProtocol: 'Using {{protocol}} protocol is insecure. Use {{alternative}} instead.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    function checkNodemailer(callExpression: estree.CallExpression) {\n      const firstArg = callExpression.arguments.length > 0 ? callExpression.arguments[0] : null;\n      if (!firstArg) {\n        return;\n      }\n\n      const firstArgValue = getValueOfExpression(context, firstArg, 'ObjectExpression');\n\n      const ses = getProperty(firstArgValue, 'SES', context);\n      if (ses && usesSesCommunication(ses)) {\n        return;\n      }\n\n      const secure = getProperty(firstArgValue, 'secure', context);\n      if (secure && (secure.value.type !== 'Literal' || secure.value.raw !== 'false')) {\n        return;\n      }\n\n      const requireTls = getProperty(firstArgValue, 'requireTLS', context);\n      if (requireTls && (requireTls.value.type !== 'Literal' || requireTls.value.raw !== 'false')) {\n        return;\n      }\n\n      const port = getProperty(firstArgValue, 'port', context);\n      if (port && (port.value.type !== 'Literal' || port.value.raw === '465')) {\n        return;\n      }\n\n      context.report({ node: callExpression.callee, ...getMessageAndData('http') });\n    }\n\n    function usesSesCommunication(sesProperty: estree.Property) {\n      const configuration = getValueOfExpression(context, sesProperty.value, 'ObjectExpression');\n      if (!configuration) {\n        return false;\n      }\n\n      const ses = getValueOfExpression(\n        context,\n        getProperty(configuration, 'ses', context)?.value,\n        'NewExpression',\n      );\n      if (!ses || normalizeFQN(getFullyQualifiedName(context, ses)) !== '@aws_sdk.client_ses.SES') {\n        return false;\n      }\n\n      const aws = getProperty(configuration, 'aws', context);\n      if (\n        !aws ||\n        normalizeFQN(getFullyQualifiedName(context, aws.value)) !== '@aws_sdk.client_ses'\n      ) {\n        return false;\n      }\n\n      return true;\n    }\n\n    function checkCallToFtp(callExpression: estree.CallExpression) {\n      if (\n        callExpression.callee.type === 'MemberExpression' &&\n        callExpression.callee.property.type === 'Identifier' &&\n        callExpression.callee.property.name === 'connect'\n      ) {\n        const newExpression = getValueOfExpression(\n          context,\n          callExpression.callee.object,\n          'NewExpression',\n        );\n        if (!!newExpression && getFullyQualifiedName(context, newExpression.callee) === 'ftp') {\n          const firstArg = callExpression.arguments.length > 0 ? callExpression.arguments[0] : null;\n          if (!firstArg) {\n            return;\n          }\n          const firstArgValue = getValueOfExpression(context, firstArg, 'ObjectExpression');\n          const secure = getProperty(firstArgValue, 'secure', context);\n          if (secure && secure.value.type === 'Literal' && secure.value.raw === 'false') {\n            context.report({\n              node: callExpression.callee,\n              ...getMessageAndData('ftp'),\n            });\n          }\n        }\n      }\n    }\n\n    function checkCallToRequire(callExpression: estree.CallExpression) {\n      if (callExpression.callee.type === 'Identifier' && callExpression.callee.name === 'require') {\n        const firstArg = callExpression.arguments.length > 0 ? callExpression.arguments[0] : null;\n        if (\n          firstArg &&\n          firstArg.type === 'Literal' &&\n          typeof firstArg.value === 'string' &&\n          firstArg.value === 'telnet-client'\n        ) {\n          context.report({\n            node: firstArg,\n            ...getMessageAndData('telnet'),\n          });\n        }\n      }\n    }\n\n    function isExceptionUrl(value: string, node: estree.Node) {\n      if (INSECURE_PROTOCOLS.includes(value)) {\n        const parent = getParent(context, node);\n        return !(parent?.type === 'BinaryExpression' && parent.operator === '+');\n      }\n      return hasExceptionHost(value);\n    }\n\n    function hasExceptionHost(value: string) {\n      let url;\n\n      try {\n        url = new URL(value);\n      } catch (err) {\n        return false;\n      }\n\n      const host = url.hostname;\n      return (\n        host.length === 0 ||\n        LOOPBACK_PATTERN.test(host) ||\n        EXCEPTION_FULL_HOSTS.some(exception => exception === host) ||\n        EXCEPTION_TOP_HOSTS.some(exception => exception.test(host))\n      );\n    }\n\n    return {\n      Literal: (node: estree.Node) => {\n        const literal = node as estree.Literal;\n        if (typeof literal.value === 'string') {\n          const value = literal.value.trim().toLocaleLowerCase();\n          const insecure = INSECURE_PROTOCOLS.find(protocol => value.startsWith(protocol));\n          if (insecure && !isExceptionUrl(value, node)) {\n            const protocol = insecure.substring(0, insecure.indexOf(':'));\n            context.report({\n              ...getMessageAndData(protocol),\n              node,\n            });\n          }\n        }\n      },\n      CallExpression: (node: estree.Node) => {\n        const callExpression = node as estree.CallExpression;\n        if (getFullyQualifiedName(context, callExpression) === 'nodemailer.createTransport') {\n          checkNodemailer(callExpression);\n        }\n        checkCallToFtp(callExpression);\n        checkCallToRequire(callExpression);\n      },\n      ImportDeclaration: (node: estree.Node) => {\n        const importDeclaration = node as estree.ImportDeclaration;\n        if (\n          typeof importDeclaration.source.value === 'string' &&\n          importDeclaration.source.value === 'telnet-client'\n        ) {\n          context.report({\n            node: importDeclaration.source,\n            ...getMessageAndData('telnet'),\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction getMessageAndData(protocol: string) {\n  let alternative;\n  switch (protocol) {\n    case 'http':\n      alternative = 'https';\n      break;\n    case 'ftp':\n      alternative = 'sftp, scp or ftps';\n      break;\n    default:\n      alternative = 'ssh';\n  }\n  return { messageId: 'insecureProtocol', data: { protocol, alternative } };\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5332/javascript\n\nimport { Rule } from 'eslint';\nimport { AwsCdkCheckArguments, AwsCdkTemplate } from '../helpers/aws/cdk';\nimport * as estree from 'estree';\n\nconst sensitivePorts = [80, 8080, 8000, 8008];\n\nexport const rule: Rule.RuleModule = AwsCdkTemplate(\n  {\n    'aws-cdk-lib.aws_elasticache.CfnReplicationGroup': AwsCdkCheckArguments(\n      'replicationGroup',\n      true,\n      'transitEncryptionEnabled',\n      { primitives: { invalid: [false] } },\n    ),\n    'aws-cdk-lib.aws_kinesis.Stream': AwsCdkCheckArguments(\n      'streamEncryptionDisabled',\n      false,\n      'encryption',\n      { fqns: { invalid: ['aws_cdk_lib.aws_kinesis.StreamEncryption.UNENCRYPTED'] } },\n    ),\n    'aws-cdk-lib.aws_kinesis.CfnStream': AwsCdkCheckArguments(\n      'streamEncryptionDisabled',\n      true,\n      'streamEncryption',\n    ),\n    'aws-cdk-lib.aws_elasticloadbalancing.LoadBalancer': {\n      callExpression: AwsCdkCheckArguments(\n        'noSSLTLS',\n        false,\n        'externalProtocol',\n        {\n          fqns: {\n            invalid: [\n              'aws-cdk-lib.aws_elasticloadbalancing.LoadBalancingProtocol.TCP',\n              'aws-cdk-lib.aws_elasticloadbalancing.LoadBalancingProtocol.HTTP',\n            ],\n          },\n        },\n        false,\n        0,\n      ),\n      functionName: 'addListener',\n      newExpression: AwsCdkCheckArguments('noSSLTLS', false, ['listeners', 'externalProtocol'], {\n        fqns: {\n          invalid: [\n            'aws-cdk-lib.aws_elasticloadbalancing.LoadBalancingProtocol.TCP',\n            'aws-cdk-lib.aws_elasticloadbalancing.LoadBalancingProtocol.HTTP',\n          ],\n        },\n      }),\n    },\n    'aws-cdk-lib.aws_elasticloadbalancing.CfnLoadBalancer': AwsCdkCheckArguments(\n      'noSSLTLS',\n      false,\n      ['listeners', 'protocol'],\n      { primitives: { invalid: ['tcp', 'http'], case_insensitive: true } },\n    ),\n    'aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationLoadBalancer': {\n      callExpression: httpOrSensitivePort(1),\n      functionName: 'addListener',\n    },\n    'aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListener': httpOrSensitivePort(2),\n    'aws-cdk-lib.aws_elasticloadbalancingv2.NetworkLoadBalancer': {\n      callExpression: (expr: estree.NewExpression, ctx: Rule.RuleContext) => {\n        const httpProtocol = AwsCdkCheckArguments(\n          'noSSLTLS',\n          false,\n          'protocol',\n          {\n            fqns: {\n              invalid: [\n                'aws-cdk-lib.aws_elasticloadbalancingv2.Protocol.HTTP',\n                'aws-cdk-lib.aws_elasticloadbalancingv2.Protocol.TCP',\n                'aws-cdk-lib.aws_elasticloadbalancingv2.Protocol.UDP',\n                'aws-cdk-lib.aws_elasticloadbalancingv2.Protocol.TCP_UDP',\n              ],\n            },\n          },\n          true,\n          1,\n        );\n        const node = httpProtocol(expr, ctx);\n        if (node) {\n          ctx.report({ messageId: 'noSSLTLS', node });\n        } else {\n          const missingProtocol = AwsCdkCheckArguments(\n            'noSSLTLS',\n            true,\n            'protocol',\n            undefined,\n            true,\n            1,\n          );\n          if (missingProtocol(expr, ctx)) {\n            const certificatesChecker = AwsCdkCheckArguments(\n              'noSSLTLS',\n              true,\n              'certificates',\n              undefined,\n              true,\n              1,\n            );\n            const portNode = certificatesChecker(expr, ctx);\n            if (portNode) {\n              ctx.report({ messageId: 'noSSLTLS', node: portNode });\n            }\n          }\n        }\n      },\n      functionName: 'addListener',\n    },\n    'aws-cdk-lib.aws_elasticloadbalancingv2.NetworkListener': (\n      expr: estree.NewExpression,\n      ctx: Rule.RuleContext,\n    ) => {\n      const httpProtocol = AwsCdkCheckArguments(\n        'noSSLTLS',\n        false,\n        'protocol',\n        {\n          fqns: {\n            invalid: [\n              'aws-cdk-lib.aws_elasticloadbalancingv2.Protocol.TCP',\n              'aws-cdk-lib.aws_elasticloadbalancingv2.Protocol.UDP',\n              'aws-cdk-lib.aws_elasticloadbalancingv2.Protocol.TCP_UDP',\n            ],\n          },\n        },\n        true,\n      );\n      const node = httpProtocol(expr, ctx);\n      if (node) {\n        ctx.report({ messageId: 'noSSLTLS', node });\n      } else {\n        const missingProtocol = AwsCdkCheckArguments('noSSLTLS', true, 'protocol', undefined, true);\n        if (missingProtocol(expr, ctx)) {\n          const certificatesChecker = AwsCdkCheckArguments(\n            'noSSLTLS',\n            true,\n            'certificates',\n            undefined,\n            true,\n          );\n          const portNode = certificatesChecker(expr, ctx);\n          if (portNode) {\n            ctx.report({ messageId: 'noSSLTLS', node: portNode });\n          }\n        }\n      }\n    },\n    'aws-cdk-lib.aws_elasticloadbalancingv2.CfnListener': AwsCdkCheckArguments(\n      'noSSLTLS',\n      false,\n      'protocol',\n      { primitives: { invalid: ['HTTP', 'TCP', 'UDP', 'TCP_UDP'], case_insensitive: true } },\n    ),\n  },\n  {\n    meta: {\n      messages: {\n        replicationGroup: 'Make sure that disabling transit encryption is safe here.',\n        noSSLTLS:\n          'Make sure that using network protocols without an SSL/TLS underlay is safe here.',\n        streamEncryptionDisabled: 'Make sure that disabling stream encryption is safe here.',\n      },\n    },\n  },\n);\n\nfunction httpOrSensitivePort(position: number) {\n  return function (expr: estree.NewExpression, ctx: Rule.RuleContext) {\n    const httpProtocol = AwsCdkCheckArguments(\n      'noSSLTLS',\n      false,\n      'protocol',\n      { fqns: { invalid: ['aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationProtocol.HTTP'] } },\n      true,\n      position,\n    );\n    const node = httpProtocol(expr, ctx);\n    if (node) {\n      ctx.report({ messageId: 'noSSLTLS', node });\n    } else {\n      const missingProtocol = AwsCdkCheckArguments(\n        'noSSLTLS',\n        true,\n        'protocol',\n        undefined,\n        true,\n        position,\n      );\n      if (missingProtocol(expr, ctx)) {\n        const portChecker = AwsCdkCheckArguments(\n          'noSSLTLS',\n          false,\n          'port',\n          { primitives: { invalid: sensitivePorts } },\n          true,\n          position,\n        );\n        const portNode = portChecker(expr, ctx);\n        if (portNode) {\n          ctx.report({ messageId: 'noSSLTLS', node: portNode });\n        }\n      }\n    }\n  };\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5332/javascript\n\nimport { Rule } from 'eslint';\nimport { mergeRules } from '../helpers';\nimport { rule as networkProtocolsRule } from './rule.lib';\nimport { rule as awsRule } from './rule.aws';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: { ...networkProtocolsRule.meta!.messages, ...awsRule.meta!.messages },\n  },\n  create(context: Rule.RuleContext) {\n    return mergeRules(networkProtocolsRule.create(context), awsRule.create(context));\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6079/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport { getVariableFromIdentifier, Mocha, toEncodedMessage } from '../helpers';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    let currentDoneVariable: Scope.Variable | undefined;\n    let doneCall: estree.Node | undefined;\n    let doneSegment: Rule.CodePathSegment | undefined;\n\n    let currentSegment: Rule.CodePathSegment | undefined;\n    let currentCase: Mocha.TestCase;\n    const segmentFirstStatement: Map<Rule.CodePathSegment, estree.Node> = new Map();\n\n    function checkForTestCase(node: estree.Node) {\n      const testCase = Mocha.extractTestCase(node);\n      if (!testCase) {\n        return;\n      }\n\n      currentCase = testCase;\n      currentDoneVariable = undefined;\n      if (testCase.callback.params.length === 0) {\n        return;\n      }\n      const [done] = testCase.callback.params;\n      if (done.type !== 'Identifier') {\n        return;\n      }\n      const callbackScope = context.sourceCode\n        .getScope(node)\n        .childScopes.find(scope => scope.block === testCase.callback);\n      if (!callbackScope) {\n        return;\n      }\n      currentDoneVariable = getVariableFromIdentifier(done, callbackScope);\n    }\n\n    function checkForDoneCall(node: estree.CallExpression) {\n      const { callee } = node;\n      if (currentDoneVariable?.references.some(ref => ref.identifier === callee)) {\n        doneCall = node;\n        doneSegment = currentSegment;\n      }\n    }\n\n    function report(statementAfterDone: estree.Node) {\n      context.report({\n        node: statementAfterDone,\n        message: toEncodedMessage(`Move this code before the call to \"done\".`, [\n          doneCall as TSESTree.Node,\n        ]),\n      });\n\n      doneSegment = undefined;\n      doneCall = undefined;\n      currentDoneVariable = undefined;\n    }\n\n    return {\n      CallExpression: (node: estree.Node) => {\n        checkForTestCase(node);\n        checkForDoneCall(node as estree.CallExpression);\n      },\n\n      ExpressionStatement: (node: estree.Node) => {\n        if (currentSegment && currentSegment === doneSegment) {\n          report(node);\n        }\n\n        if (currentSegment && !segmentFirstStatement.has(currentSegment)) {\n          segmentFirstStatement.set(currentSegment, node);\n        }\n      },\n\n      onCodePathSegmentStart(segment: Rule.CodePathSegment) {\n        currentSegment = segment;\n      },\n\n      onCodePathEnd(_codePath: Rule.CodePath, node: estree.Node) {\n        currentSegment = undefined;\n        if (currentCase?.callback === node && doneSegment) {\n          // we report an issue if one of 'doneSegment.nextSegments' is not empty\n          const statementAfterDone = doneSegment.nextSegments\n            .map(segment => segmentFirstStatement.get(segment))\n            .find(stmt => !!stmt);\n          if (statementAfterDone) {\n            report(statementAfterDone);\n          }\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Linter } from 'eslint';\n\n/**\n * Builds ESLint parser options\n *\n * ESLint parser options allows for customizing the behaviour of\n * the ESLint-based parser used to parse JavaScript or TypeScript\n * code. It configures the ECMAScript version, specific syntax or\n * features to consider as valid during parsing, and additional\n * contents in the abstract syntax tree, among other things.\n *\n * @param initialOptions the analysis options to use\n * @param usingBabel a flag to indicate if we intend to parse with Babel\n * @returns the parser options for the input\n */\nexport function buildParserOptions(initialOptions: Linter.ParserOptions, usingBabel = false) {\n  const options: Linter.ParserOptions = {\n    tokens: true,\n    comment: true,\n    loc: true,\n    range: true,\n    ecmaVersion: 2018,\n    sourceType: 'module',\n    codeFrame: false,\n    ecmaFeatures: {\n      jsx: true,\n      globalReturn: false,\n      legacyDecorators: true,\n    },\n    // for Vue parser\n    extraFileExtensions: ['.vue'],\n    ...initialOptions,\n  };\n\n  if (usingBabel) {\n    return babelParserOptions(options);\n  }\n\n  return options;\n}\n\n/**\n * Extends parser options with Babel's specific options\n *\n * Babel's parser is able to parse non-standard syntaxes and features.\n * However, the support of such constructs are extracted into dedicated\n * plugins, which need to be explictly included in the parser options,\n * among other things.\n *\n * @param options the parser options to extend\n * @returns the extend parser options\n */\nfunction babelParserOptions(options: Linter.ParserOptions) {\n  const pluginPath = `${__dirname}/../../../../node_modules`;\n  const babelOptions = {\n    targets: 'defaults',\n    presets: [\n      `${pluginPath}/@babel/preset-react`,\n      `${pluginPath}/@babel/preset-flow`,\n      `${pluginPath}/@babel/preset-env`,\n    ],\n    plugins: [[`${pluginPath}/@babel/plugin-proposal-decorators`, { version: '2022-03' }]],\n    babelrc: false,\n    configFile: false,\n    parserOpts: {\n      allowReturnOutsideFunction: true,\n    },\n  };\n  return { ...options, requireConfigFile: false, babelOptions };\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport default abstract class Detector {\n  probability: number;\n\n  constructor(probability: number) {\n    if (probability < 0 || probability > 1) {\n      throw new Error('probability should be between [0 .. 1]');\n    }\n    this.probability = probability;\n  }\n\n  abstract scan(line: string): number;\n\n  recognition(line: string): number {\n    const matchers = this.scan(line);\n    if (matchers === 0) {\n      return 0;\n    } else {\n      return 1 - Math.pow(1 - this.probability, matchers);\n    }\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport Detector from '../Detector';\n\nexport default class CamelCaseDetector extends Detector {\n  scan(line: string): number {\n    let previousChar = ' ';\n    let currentChar;\n    for (let i = 0; i < line.length; i++) {\n      currentChar = line.charAt(i);\n      if (isLowerCaseThenUpperCase(previousChar, currentChar)) {\n        return 1;\n      }\n      previousChar = currentChar;\n    }\n    return 0;\n  }\n}\n\nfunction isLowerCaseThenUpperCase(previousChar: string, char: string): boolean {\n  return isLowercase(previousChar) && isUpprcase(char);\n\n  function isLowercase(char: string): boolean {\n    return char.toLowerCase() === char;\n  }\n  function isUpprcase(char: string): boolean {\n    return char.toUpperCase() === char;\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport Detector from '../Detector';\n\nexport default class ContainsDetector extends Detector {\n  strings: (string | RegExp)[];\n\n  constructor(probability: number, ...strings: (string | RegExp)[]) {\n    super(probability);\n    this.strings = strings;\n  }\n\n  scan(line: string): number {\n    const lineWithoutSpaces = line.replace(/\\s+/, '');\n    let matchers = 0;\n    for (const str of this.strings) {\n      let regex = str;\n      if (typeof str === 'string') {\n        regex = new RegExp(escapeRegex(str), 'g');\n      }\n      matchers += (lineWithoutSpaces.match(regex) ?? []).length;\n    }\n    return matchers;\n  }\n}\n\nfunction escapeRegex(value: string) {\n  return value.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport Detector from '../Detector';\n\nexport default class EndWithDetector extends Detector {\n  endOfLines: string[];\n\n  constructor(probability: number, ...endOfLines: string[]) {\n    super(probability);\n    this.endOfLines = endOfLines;\n  }\n\n  scan(line: string): number {\n    for (let i = line.length - 1; i >= 0; i--) {\n      const char = line.charAt(i);\n      for (const endOfLine of this.endOfLines) {\n        if (char === endOfLine) {\n          return 1;\n        }\n      }\n      if (!isWhitespace(char) && char !== '*' && char !== '/') {\n        return 0;\n      }\n    }\n    return 0;\n\n    function isWhitespace(char: string): boolean {\n      return /\\s/.test(char);\n    }\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport Detector from '../Detector';\n\nexport default class KeywordsDetector extends Detector {\n  keywords: string[];\n\n  constructor(probability: number, ...keywords: string[]) {\n    super(probability);\n    this.keywords = keywords;\n  }\n\n  scan(line: string): number {\n    let matchers = 0;\n    const words = line.split(/[ \\t(),{}]/);\n    for (const word of words) {\n      if (this.keywords.includes(word)) {\n        matchers++;\n      }\n    }\n    return matchers;\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport Detector from './Detector';\nimport CamelCaseDetector from './detectors/CamelCaseDetector';\nimport ContainsDetector from './detectors/ContainsDetector';\nimport EndWithDetector from './detectors/EndWithDetector';\nimport KeywordsDetector from './detectors/KeywordsDetector';\nimport LanguageFootprint from './LanguageFootprint';\n\nexport class JavaScriptFootPrint implements LanguageFootprint {\n  detectors: Set<Detector> = new Set();\n\n  constructor() {\n    this.detectors.add(new EndWithDetector(0.95, '}', ';', '{'));\n    this.detectors.add(new KeywordsDetector(0.7, '++', '||', '&&', '===', '?.', '??'));\n    this.detectors.add(\n      new KeywordsDetector(\n        0.3,\n        'public',\n        'abstract',\n        'class',\n        'implements',\n        'extends',\n        'return',\n        'throw',\n        'private',\n        'protected',\n        'enum',\n        'continue',\n        'assert',\n        'boolean',\n        'this',\n        'instanceof',\n        'interface',\n        'static',\n        'void',\n        'super',\n        'true',\n        'case:',\n        'let',\n        'const',\n        'var',\n        'async',\n        'await',\n        'break',\n        'yield',\n        'typeof',\n        'import',\n        'export',\n      ),\n    );\n    this.detectors.add(\n      new ContainsDetector(\n        0.95,\n        'for(',\n        'if(',\n        'while(',\n        'catch(',\n        'switch(',\n        'try{',\n        'else{',\n        'this.',\n        'window.',\n        /;\\s+\\/\\//,\n        \"import '\",\n        'import \"',\n        'require(',\n      ),\n    );\n    this.detectors.add(new CamelCaseDetector(0.5));\n  }\n\n  getDetectors(): Set<Detector> {\n    return this.detectors;\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport LanguageFootprint from './LanguageFootprint';\n\nexport class CodeRecognizer {\n  language: LanguageFootprint;\n  threshold: number;\n\n  constructor(threshold: number, language: LanguageFootprint) {\n    this.language = language;\n    this.threshold = threshold;\n  }\n\n  recognition(line: string) {\n    let probability = 0;\n    for (const pattern of this.language.getDetectors()) {\n      probability = 1 - (1 - probability) * (1 - pattern.recognition(line));\n    }\n    return probability;\n  }\n\n  extractCodeLines(lines: string[]): string[] {\n    return lines.filter(line => this.recognition(line) >= this.threshold);\n  }\n\n  isLineOfCode(line: string): boolean {\n    return this.recognition(line) - this.threshold > 0;\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S125/javascript\n\nimport { Rule, SourceCode } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport * as babel from '@babel/eslint-parser';\nimport { buildParserOptions } from '../../parsers';\nimport { CodeRecognizer, JavaScriptFootPrint } from '../../linter/recognizers';\n\nconst EXCLUDED_STATEMENTS = ['BreakStatement', 'LabeledStatement', 'ContinueStatement'];\n\nconst recognizer = new CodeRecognizer(0.9, new JavaScriptFootPrint());\n\ninterface GroupComment {\n  value: string;\n  nodes: TSESTree.Comment[];\n}\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      commentedCode: 'Remove this commented out code.',\n      commentedCodeFix: 'Remove this commented out code',\n    },\n    hasSuggestions: true,\n  },\n  create(context: Rule.RuleContext) {\n    function getGroupedComments(comments: TSESTree.Comment[]): GroupComment[] {\n      const groupedComments: GroupComment[] = [];\n      let currentGroup: TSESTree.Comment[] = [];\n      for (const comment of comments) {\n        if (comment.type === 'Block') {\n          groupedComments.push({ value: comment.value, nodes: [comment] });\n        } else if (\n          currentGroup.length === 0 ||\n          areAdjacentLineComments(currentGroup[currentGroup.length - 1], comment)\n        ) {\n          currentGroup.push(comment);\n        } else {\n          groupedComments.push({\n            value: currentGroup.map(lineComment => lineComment.value).join('\\n'),\n            nodes: currentGroup,\n          });\n          currentGroup = [comment];\n        }\n      }\n\n      if (currentGroup.length > 0) {\n        groupedComments.push({\n          value: currentGroup.map(lineComment => lineComment.value).join('\\n'),\n          nodes: currentGroup,\n        });\n      }\n\n      return groupedComments;\n    }\n\n    function areAdjacentLineComments(previous: TSESTree.Comment, next: TSESTree.Comment) {\n      const nextCommentLine = next.loc.start.line;\n      if (previous.loc.start.line + 1 === nextCommentLine) {\n        const nextCodeToken = context.sourceCode.getTokenAfter(previous);\n        return !nextCodeToken || nextCodeToken.loc.start.line > nextCommentLine;\n      }\n      return false;\n    }\n\n    return {\n      'Program:exit': () => {\n        const groupedComments = getGroupedComments(\n          context.sourceCode.getAllComments() as TSESTree.Comment[],\n        );\n        groupedComments.forEach(groupComment => {\n          const rawTextTrimmed = groupComment.value.trim();\n          if (rawTextTrimmed !== '}' && containsCode(injectMissingBraces(rawTextTrimmed))) {\n            context.report({\n              messageId: 'commentedCode',\n              loc: getCommentLocation(groupComment.nodes),\n              suggest: [\n                {\n                  messageId: 'commentedCodeFix',\n                  fix(fixer) {\n                    const start = groupComment.nodes[0].range[0];\n                    const end = groupComment.nodes[groupComment.nodes.length - 1].range[1];\n                    return fixer.removeRange([start, end]);\n                  },\n                },\n              ],\n            });\n          }\n        });\n      },\n    };\n  },\n};\n\nfunction isExpressionExclusion(statement: estree.Node, code: SourceCode) {\n  if (statement.type === 'ExpressionStatement') {\n    const expression = statement.expression;\n    if (\n      expression.type === 'Identifier' ||\n      expression.type === 'SequenceExpression' ||\n      isUnaryPlusOrMinus(expression) ||\n      isExcludedLiteral(expression) ||\n      !code.getLastToken(statement, token => token.value === ';')\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isExclusion(parsedBody: Array<estree.Node>, code: SourceCode) {\n  if (parsedBody.length === 1) {\n    const singleStatement = parsedBody[0];\n    return (\n      EXCLUDED_STATEMENTS.includes(singleStatement.type) ||\n      isReturnThrowExclusion(singleStatement) ||\n      isExpressionExclusion(singleStatement, code)\n    );\n  }\n  return false;\n}\n\nfunction containsCode(value: string) {\n  if (!couldBeJsCode(value)) {\n    return false;\n  }\n\n  try {\n    const options = buildParserOptions(\n      { filePath: 'some/filePath', tsConfigs: [], fileContent: '', fileType: 'MAIN' },\n      true,\n    );\n    const result = babel.parse(value, options);\n    const parseResult = new SourceCode(value, result);\n    return parseResult.ast.body.length > 0 && !isExclusion(parseResult.ast.body, parseResult);\n  } catch (exception) {\n    return false;\n  }\n\n  function couldBeJsCode(input: string): boolean {\n    return recognizer.extractCodeLines(input.split('\\n')).length > 0;\n  }\n}\n\nfunction injectMissingBraces(value: string) {\n  const openCurlyBraceNum = (value.match(/{/g) ?? []).length;\n  const closeCurlyBraceNum = (value.match(/}/g) ?? []).length;\n  const missingBraces = openCurlyBraceNum - closeCurlyBraceNum;\n  if (missingBraces > 0) {\n    return value + Array(missingBraces).fill('}').join('');\n  } else if (missingBraces < 0) {\n    return Array(-missingBraces).fill('{').join('') + value;\n  } else {\n    return value;\n  }\n}\n\nfunction getCommentLocation(nodes: TSESTree.Comment[]) {\n  return {\n    start: nodes[0].loc.start,\n    end: nodes[nodes.length - 1].loc.end,\n  };\n}\n\nfunction isReturnThrowExclusion(statement: estree.Node) {\n  if (statement.type === 'ReturnStatement' || statement.type === 'ThrowStatement') {\n    return statement.argument == null || statement.argument.type === 'Identifier';\n  }\n  return false;\n}\n\nfunction isUnaryPlusOrMinus(expression: estree.Expression) {\n  return (\n    expression.type === 'UnaryExpression' &&\n    (expression.operator === '+' || expression.operator === '-')\n  );\n}\n\nfunction isExcludedLiteral(expression: estree.Expression) {\n  if (expression.type === 'Literal') {\n    return typeof expression.value === 'string' || typeof expression.value === 'number';\n  }\n  return false;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1854/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport CodePath = Rule.CodePath;\nimport Variable = Scope.Variable;\nimport CodePathSegment = Rule.CodePathSegment;\nimport { LiveVariables, lva, ReferenceLike, isNullLiteral } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      removeAssignment: 'Remove this useless assignment to variable \"{{variable}}\".',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const codePathStack: CodePathContext[] = [];\n    const liveVariablesMap = new Map<string, LiveVariables>();\n    const readVariables = new Set<Variable>();\n    // map from Variable to CodePath ids where variable is used\n    const variableUsages = new Map<Variable, Set<string>>();\n    const referencesUsedInDestructuring = new Set<ReferenceLike>();\n    const destructuringStack: DestructuringContext[] = [];\n    const codePathSegments: CodePathSegment[][] = [];\n    let currentCodePathSegments: CodePathSegment[] = [];\n\n    return {\n      ':matches(AssignmentExpression, VariableDeclarator[init])': (node: estree.Node) => {\n        pushAssignmentContext(node as AssignmentLike);\n      },\n      ':matches(AssignmentExpression, VariableDeclarator[init]):exit': () => {\n        popAssignmentContext();\n      },\n      Identifier: (node: estree.Node) => {\n        if (isEnumConstant(node)) {\n          return;\n        }\n        checkIdentifierUsage(node as estree.Identifier);\n      },\n      JSXIdentifier: (node: unknown) => {\n        checkIdentifierUsage(node as TSESTree.JSXIdentifier);\n      },\n      ObjectPattern: () => {\n        destructuringStack.push(new DestructuringContext());\n      },\n      'ObjectPattern > Property > Identifier': (node: estree.Node) => {\n        const destructuring = peek(destructuringStack)!;\n        const { ref } = resolveReference(node as estree.Identifier);\n        if (ref) {\n          destructuring.references.push(ref);\n        }\n      },\n      'ObjectPattern > :matches(RestElement, ExperimentalRestProperty)': () => {\n        peek(destructuringStack).hasRest = true;\n      },\n      'ObjectPattern:exit': () => {\n        const destructuring = destructuringStack.pop();\n        if (destructuring?.hasRest) {\n          destructuring.references.forEach(ref => referencesUsedInDestructuring.add(ref));\n        }\n      },\n\n      'Program:exit': () => {\n        lva(liveVariablesMap);\n        liveVariablesMap.forEach(lva => {\n          checkSegment(lva);\n          reportNeverReadVariables(lva);\n        });\n      },\n\n      // CodePath events\n      onCodePathSegmentStart: (segment: CodePathSegment) => {\n        liveVariablesMap.set(segment.id, new LiveVariables(segment));\n        currentCodePathSegments.push(segment);\n      },\n      onCodePathStart: codePath => {\n        pushContext(new CodePathContext(codePath));\n        codePathSegments.push(currentCodePathSegments);\n        currentCodePathSegments = [];\n      },\n      onCodePathSegmentEnd() {\n        currentCodePathSegments.pop();\n      },\n      onCodePathEnd: () => {\n        popContext();\n        currentCodePathSegments = codePathSegments.pop() || [];\n      },\n    };\n\n    function pushAssignmentContext(node: AssignmentLike) {\n      peek(codePathStack).assignmentStack.push(new AssignmentContext(node));\n    }\n\n    function popAssignmentContext() {\n      const assignment = peek(codePathStack).assignmentStack.pop()!;\n      assignment.rhs.forEach(r => processReference(r));\n      assignment.lhs.forEach(r => processReference(r));\n    }\n\n    function checkSegment(liveVariables: LiveVariables) {\n      const willBeRead = new Set<Variable>(liveVariables.out);\n      const references = [...liveVariables.references].reverse();\n      references.forEach(ref => {\n        const variable = ref.resolved;\n        if (!variable) {\n          return;\n        }\n        if (ref.isWrite()) {\n          if (!willBeRead.has(variable) && shouldReport(ref)) {\n            report(ref);\n          }\n          willBeRead.delete(variable);\n        }\n        if (ref.isRead()) {\n          willBeRead.add(variable);\n        }\n      });\n    }\n\n    function reportNeverReadVariables(lva: LiveVariables) {\n      lva.references.forEach(ref => {\n        if (shouldReportReference(ref) && !readVariables.has(ref.resolved!)) {\n          report(ref);\n        }\n      });\n    }\n\n    function shouldReport(ref: ReferenceLike) {\n      const variable = ref.resolved;\n      return (\n        variable &&\n        shouldReportReference(ref) &&\n        !variableUsedOutsideOfCodePath(variable) &&\n        readVariables.has(variable)\n      );\n    }\n\n    function shouldReportReference(ref: ReferenceLike) {\n      const variable = ref.resolved;\n      return (\n        variable &&\n        isLocalVar(variable) &&\n        !isReferenceWithBasicValue(ref) &&\n        !isDefaultParameter(ref) &&\n        !referencesUsedInDestructuring.has(ref) &&\n        !variable.name.startsWith('_') &&\n        !isIncrementOrDecrement(ref) &&\n        !isNullAssignment(ref)\n      );\n    }\n\n    function isIncrementOrDecrement(ref: ReferenceLike) {\n      const parent = (ref.identifier as TSESTree.Identifier).parent;\n      return parent && parent.type === 'UpdateExpression';\n    }\n\n    function isNullAssignment(ref: ReferenceLike) {\n      const parent = (ref.identifier as TSESTree.Identifier).parent;\n      return (\n        parent &&\n        parent.type === 'AssignmentExpression' &&\n        isNullLiteral(parent.right as estree.Node)\n      );\n    }\n\n    function isEnumConstant(node: estree.Node) {\n      return (context.sourceCode.getAncestors(node) as TSESTree.Node[]).some(\n        n => n.type === 'TSEnumDeclaration',\n      );\n    }\n\n    function isDefaultParameter(ref: ReferenceLike) {\n      if (ref.identifier.type !== 'Identifier') {\n        return false;\n      }\n      const parent = (ref.identifier as TSESTree.Identifier).parent;\n      return parent && parent.type === 'AssignmentPattern';\n    }\n\n    function isLocalVar(variable: Variable) {\n      // @ts-ignore\n      const scope = variable.scope;\n      const node = scope.block as TSESTree.Node;\n      return node.type !== 'Program' && node.type !== 'TSModuleDeclaration';\n    }\n\n    function variableUsedOutsideOfCodePath(variable: Scope.Variable) {\n      return variableUsages.get(variable)!.size > 1;\n    }\n\n    function isReferenceWithBasicValue(ref: ReferenceLike) {\n      return ref.init && ref.writeExpr && isBasicValue(ref.writeExpr as TSESTree.Node);\n    }\n\n    function isBasicValue(node: TSESTree.Node): boolean {\n      switch (node.type) {\n        case 'Literal':\n          return node.value === '' || [0, 1, null, true, false].includes(node.value as any);\n        case 'Identifier':\n          return node.name === 'undefined';\n        case 'UnaryExpression':\n          return isBasicValue(node.argument);\n        case 'ObjectExpression':\n          return node.properties.length === 0;\n        case 'ArrayExpression':\n          return node.elements.length === 0;\n        default:\n          return false;\n      }\n    }\n\n    function report(ref: ReferenceLike) {\n      context.report({\n        messageId: 'removeAssignment',\n        data: {\n          variable: ref.identifier.name,\n        },\n        loc: ref.identifier.loc!,\n      });\n    }\n\n    function checkIdentifierUsage(node: estree.Identifier | TSESTree.JSXIdentifier) {\n      const { ref, variable } =\n        node.type === 'Identifier' ? resolveReference(node) : resolveJSXReference(node);\n      if (ref) {\n        processReference(ref);\n        if (variable) {\n          updateReadVariables(ref);\n        }\n      }\n      if (variable) {\n        updateVariableUsages(variable);\n      }\n    }\n\n    function resolveJSXReference(node: TSESTree.JSXIdentifier) {\n      if (isJSXAttributeName(node)) {\n        return {};\n      }\n      const jsxReference = new JSXReference(\n        node,\n        context.sourceCode.getScope(node as unknown as estree.Node),\n      );\n      return { ref: jsxReference, variable: jsxReference.resolved };\n    }\n\n    function isJSXAttributeName(node: TSESTree.JSXIdentifier) {\n      const parent = node.parent;\n      return parent && parent.type === 'JSXAttribute' && parent.name === node;\n    }\n\n    function processReference(ref: ReferenceLike) {\n      const assignmentStack = peek(codePathStack).assignmentStack;\n      if (assignmentStack.length > 0) {\n        const assignment = peek(assignmentStack);\n        assignment.add(ref);\n      } else {\n        [...currentCodePathSegments].forEach(segment => {\n          lvaForSegment(segment).add(ref);\n        });\n      }\n    }\n\n    function lvaForSegment(segment: CodePathSegment) {\n      let lva;\n      if (liveVariablesMap.has(segment.id)) {\n        lva = liveVariablesMap.get(segment.id)!;\n      } else {\n        lva = new LiveVariables(segment);\n        liveVariablesMap.set(segment.id, lva);\n      }\n      return lva;\n    }\n\n    function updateReadVariables(reference: ReferenceLike) {\n      const variable = reference.resolved!;\n      if (reference.isRead()) {\n        readVariables.add(variable);\n      }\n    }\n\n    function updateVariableUsages(variable: Scope.Variable) {\n      const codePathId = peek(codePathStack).codePath.id;\n      if (variableUsages.has(variable)) {\n        variableUsages.get(variable)!.add(codePathId);\n      } else {\n        variableUsages.set(variable, new Set<string>([codePathId]));\n      }\n    }\n\n    function popContext() {\n      codePathStack.pop();\n    }\n\n    function pushContext(codePathContext: CodePathContext) {\n      codePathStack.push(codePathContext);\n    }\n\n    function resolveReference(node: estree.Identifier) {\n      return resolveReferenceRecursively(node, context.sourceCode.getScope(node));\n    }\n\n    function resolveReferenceRecursively(\n      node: estree.Identifier,\n      scope: Scope.Scope | null,\n      depth = 0,\n    ): { ref: ReferenceLike | null; variable: Scope.Variable | null } {\n      if (scope === null || depth > 2) {\n        return { ref: null, variable: null };\n      }\n      const ref = scope.references.find(r => r.identifier === node);\n      if (ref) {\n        return { ref, variable: ref.resolved };\n      } else {\n        // if it's not a reference, it can be just declaration without initializer\n        const variable = scope.variables.find(v => v.defs.find(def => def.name === node));\n        if (variable) {\n          return { ref: null, variable };\n        }\n        // we only need 1-level recursion, only for switch expression, which is likely a bug in eslint\n        return resolveReferenceRecursively(node, scope.upper, depth + 1);\n      }\n    }\n  },\n};\n\nclass CodePathContext {\n  codePath: CodePath;\n  segments = new Map<string, CodePathSegment>();\n  assignmentStack: AssignmentContext[] = [];\n\n  constructor(codePath: CodePath) {\n    this.codePath = codePath;\n  }\n}\n\nclass DestructuringContext {\n  hasRest = false;\n  references: ReferenceLike[] = [];\n}\n\ntype AssignmentLike = TSESTree.AssignmentExpression | TSESTree.VariableDeclarator;\n\nclass AssignmentContext {\n  node: AssignmentLike;\n\n  constructor(node: AssignmentLike) {\n    this.node = node;\n  }\n\n  lhs = new Set<ReferenceLike>();\n  rhs = new Set<ReferenceLike>();\n\n  isRhs(node: TSESTree.Node) {\n    return this.node.type === 'AssignmentExpression'\n      ? this.node.right === node\n      : this.node.init === node;\n  }\n\n  isLhs(node: TSESTree.Node) {\n    return this.node.type === 'AssignmentExpression'\n      ? this.node.left === node\n      : this.node.id === node;\n  }\n\n  add(ref: ReferenceLike) {\n    let parent = ref.identifier as TSESTree.Node | undefined;\n    while (parent) {\n      if (this.isLhs(parent)) {\n        this.lhs.add(ref);\n        break;\n      }\n      if (this.isRhs(parent)) {\n        this.rhs.add(ref);\n        break;\n      }\n      parent = parent.parent;\n    }\n    if (parent === null) {\n      throw new Error('failed to find assignment lhs/rhs');\n    }\n  }\n}\n\nclass JSXReference implements ReferenceLike {\n  from: Scope.Scope;\n  identifier: TSESTree.JSXIdentifier;\n  init = false;\n  resolved: Scope.Variable | null;\n  writeExpr: estree.Node | null = null;\n\n  constructor(node: TSESTree.JSXIdentifier, scope: Scope.Scope) {\n    this.from = scope;\n    this.identifier = node;\n    this.resolved = findJSXVariableInScope(node, scope);\n  }\n\n  isRead(): boolean {\n    return true;\n  }\n\n  isReadOnly(): boolean {\n    return true;\n  }\n\n  isReadWrite(): boolean {\n    return false;\n  }\n\n  isWrite(): boolean {\n    return false;\n  }\n\n  isWriteOnly(): boolean {\n    return false;\n  }\n}\n\nfunction findJSXVariableInScope(\n  node: TSESTree.JSXIdentifier,\n  scope: Scope.Scope | null,\n): Scope.Variable | null {\n  return (\n    scope &&\n    (scope.variables.find(v => v.name === node.name) || findJSXVariableInScope(node, scope.upper))\n  );\n}\n\nfunction peek<T>(arr: Array<T>) {\n  return arr[arr.length - 1];\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3001/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      removeDelete: 'Remove this \"delete\" operator or pass an object property to it.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      \"UnaryExpression[operator='delete'][argument.type!='MemberExpression'][argument.type!='ChainExpression']\":\n        (node: estree.Node) => {\n          const { argument } = node as estree.UnaryExpression;\n          if (!isGlobalProperty(argument, context.sourceCode.getScope(node).references)) {\n            context.report({\n              messageId: 'removeDelete',\n              node,\n            });\n          }\n        },\n    };\n  },\n};\n\nfunction isGlobalProperty(expr: estree.Expression, references: Scope.Reference[]) {\n  return (\n    expr.type === 'Identifier' &&\n    references.filter(ref => ref.identifier.name === expr.name && ref.resolved).length === 0\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n/**\n * This file provides an API to take control over TypeScript's Program instances\n * in the context of program-based analysis for JavaScript / TypeScript.\n *\n * A TypeScript's Program instance is used by TypeScript ESLint parser in order\n * to make available TypeScript's type checker for rules willing to use type\n * information for the sake of precision. It works similarly as using TSConfigs\n * except it gives the control over the lifecycle of this internal data structure\n * used by the parser and improves performance.\n */\n\nimport path from 'path';\nimport ts from 'typescript';\nimport {\n  addTsConfigIfDirectory,\n  debug,\n  error,\n  readFileSync,\n  toUnixPath,\n  warn,\n} from '@sonar/shared';\nimport tmp from 'tmp';\nimport { promisify } from 'util';\nimport fs from 'fs/promises';\nimport { TsConfigJson } from 'type-fest';\n\nexport type ProgramResult = {\n  files: string[];\n  projectReferences: string[];\n  missingTsConfig: boolean;\n  program: ts.Program;\n  programId?: string;\n};\n\n/**\n * Gets the files resolved by a TSConfig\n *\n * The resolving of the files for a given TSConfig file is done\n * by invoking TypeScript compiler.\n *\n * @param tsConfig TSConfig to parse\n * @param tsconfigContents TSConfig contents that we want to provide to TSConfig\n * @returns the resolved TSConfig files\n */\nexport function createProgramOptions(\n  tsConfig: string,\n  tsconfigContents?: string,\n): ts.CreateProgramOptions & { missingTsConfig: boolean } {\n  let missingTsConfig = false;\n\n  const parseConfigHost: ts.ParseConfigHost = {\n    useCaseSensitiveFileNames: true,\n    readDirectory: ts.sys.readDirectory,\n    fileExists: file => {\n      // When Typescript checks for the very last tsconfig.json, we will always return true,\n      // If the file does not exist in FS, we will return an empty configuration\n      if (isLastTsConfigCheck(file)) {\n        return true;\n      }\n      return ts.sys.fileExists(file);\n    },\n    readFile: file => {\n      if (file === tsConfig && tsconfigContents) {\n        return tsconfigContents;\n      }\n      const fileContents = ts.sys.readFile(file);\n      // When Typescript search for tsconfig which does not exist, return empty configuration\n      // only when the check is for the last location at the root node_modules\n      if (!fileContents && isLastTsConfigCheck(file)) {\n        missingTsConfig = true;\n        console.log(\n          `WARN Could not find tsconfig.json: ${file}; falling back to an empty configuration.`,\n        );\n        return '{}';\n      }\n      return fileContents;\n    },\n  };\n  const config = ts.readConfigFile(tsConfig, parseConfigHost.readFile);\n\n  if (config.error) {\n    error(`Failed to parse tsconfig: ${tsConfig} (${diagnosticToString(config.error)})`);\n    throw Error(diagnosticToString(config.error));\n  }\n\n  const parsedConfigFile = ts.parseJsonConfigFileContent(\n    config.config,\n    parseConfigHost,\n    path.resolve(path.dirname(tsConfig)),\n    {\n      noEmit: true,\n    },\n    tsConfig,\n    undefined,\n    [\n      {\n        extension: 'vue',\n        isMixedContent: true,\n        scriptKind: ts.ScriptKind.Deferred,\n      },\n    ],\n  );\n\n  if (parsedConfigFile.errors.length > 0) {\n    const message = parsedConfigFile.errors.map(diagnosticToString).join('; ');\n    throw Error(message);\n  }\n\n  return {\n    rootNames: parsedConfigFile.fileNames,\n    options: { ...parsedConfigFile.options, allowNonTsExtensions: true },\n    projectReferences: parsedConfigFile.projectReferences,\n    missingTsConfig,\n  };\n}\n\n/**\n * Creates a TypeScript's Program instance\n *\n * TypeScript creates a Program instance per TSConfig file. This means that one\n * needs a TSConfig to create such a program. Therefore, the function expects a\n * TSConfig as an input, parses it and uses it to create a TypeScript's Program\n * instance. The program creation delegates to TypeScript the resolving of input\n * files considered by the TSConfig as well as any project references.\n *\n * @param tsConfig the TSConfig input to create a program for\n * @param tsconfigContents TSConfig contents that we want to provide to TSConfig\n * @returns the identifier of the created TypeScript's Program along with the\n *          program itself, the resolved files, project references and a boolean\n *          'missingTsConfig' which is true when an extended tsconfig.json path\n *          was not found, which defaulted to default Typescript configuration\n */\nexport function createProgram(tsConfig: string, tsconfigContents?: string): ProgramResult {\n  if (!tsconfigContents) {\n    tsconfigContents = readFileSync(tsConfig);\n  }\n  const programOptions = createProgramOptions(tsConfig, tsconfigContents);\n  const program = ts.createProgram(programOptions);\n  const inputProjectReferences = program.getProjectReferences() ?? [];\n  const projectReferences: string[] = [];\n\n  for (const reference of inputProjectReferences) {\n    const sanitizedReference = addTsConfigIfDirectory(reference.path);\n    if (!sanitizedReference) {\n      warn(`Skipping missing referenced tsconfig.json: ${reference.path}`);\n    } else {\n      projectReferences.push(sanitizedReference);\n    }\n  }\n  const files = program\n    .getSourceFiles()\n    .map(sourceFile => sourceFile.fileName)\n    .filter(exceptions);\n\n  return {\n    files,\n    projectReferences,\n    missingTsConfig: programOptions.missingTsConfig,\n    program,\n  };\n\n  function exceptions(filename: string) {\n    const { dir, ext } = path.parse(filename);\n\n    /* JSON files */\n    if (ext === '.json') {\n      return false;\n    }\n\n    /* Node modules */\n    if (toUnixPath(dir).split('/').includes('node_modules')) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\n/**\n * A cache of created TypeScript's Program instances\n *\n * It associates a program identifier to an instance of a TypeScript's Program.\n */\nconst programs = new Map<string, ts.Program>();\n\n/**\n * A counter of created TypeScript's Program instances\n */\nlet programCount = 0;\n\n/**\n * Computes the next identifier available for a TypeScript's Program.\n * @returns\n */\nfunction nextId() {\n  programCount++;\n  return programCount.toString();\n}\n\n/**\n * Creates a TypeScript's Program instance and saves it in memory\n *\n * To be removed once Java part does not handle program creation\n */\nexport function createAndSaveProgram(tsConfig: string): ProgramResult & { programId: string } {\n  const program = createProgram(tsConfig);\n\n  const programId = nextId();\n  programs.set(programId, program.program);\n  debug(`program from ${tsConfig} with id ${programId} is created`);\n  return { ...program, programId };\n}\n\n/**\n * Gets an existing TypeScript's Program by its identifier\n * @param programId the identifier of the TypeScript's Program to retrieve\n * @throws a runtime error if there is no such program\n * @returns the retrieved TypeScript's Program\n */\nexport function getProgramById(programId: string): ts.Program {\n  const program = programs.get(programId);\n  if (!program) {\n    throw Error(`Failed to find program ${programId}`);\n  }\n  return program;\n}\n\n/**\n * Deletes an existing TypeScript's Program by its identifier\n * @param programId the identifier of the TypeScript's Program to delete\n */\nexport function deleteProgram(programId: string): void {\n  programs.delete(programId);\n}\n\nfunction diagnosticToString(diagnostic: ts.Diagnostic): string {\n  const text =\n    typeof diagnostic.messageText === 'string'\n      ? diagnostic.messageText\n      : diagnostic.messageText.messageText;\n  if (diagnostic.file) {\n    return `${text}  ${diagnostic.file?.fileName}:${diagnostic.start}`;\n  } else {\n    return text;\n  }\n}\n\n/**\n * Typescript resolution will always start searching by first looking for package.json files\n * starting in $TSCONFIG_PATH/package.json and on each parent until root folder.\n * 1 - $TSCONFIG_PATH/package.json\n * 2 - $TSCONFIG_PATH/../package.json\n * 3 - $TSCONFIG_PATH/../../package.json\n * ...\n * N - /package.json\n *\n * Then, Typescript resolution will always search for extended tsconfigs in these 5 paths (in order):\n *\n * 1 - $TSCONFIG_PATH/node_modules/$EXTENDED_TSCONFIG_VALUE/package.json\n * 2 - $TSCONFIG_PATH/node_modules/$EXTENDED_TSCONFIG_VALUE/../package.json\n * 3 - $TSCONFIG_PATH/node_modules/$EXTENDED_TSCONFIG_VALUE\n * 4 - $TSCONFIG_PATH/node_modules/$EXTENDED_TSCONFIG_VALUE.json\n * 5 - $TSCONFIG_PATH/node_modules/$EXTENDED_TSCONFIG_VALUE/tsconfig.json\n *\n * If not found in all 4, $TSCONFIG_PATH will be assigned to its parent and the same search will be performed,\n * until $TSCONFIG_PATH is the system root. Meaning, the very last search Typescript will perform is (5) when\n * TSCONFIG_PATH === '/':\n *\n * /node_modules/$EXTENDED_TSCONFIG_VALUE/tsconfig.json\n *\n * @param file\n */\nfunction isLastTsConfigCheck(file: string) {\n  return path.basename(file) === 'tsconfig.json' && isRootNodeModules(file);\n}\n\nexport function isRootNodeModules(file: string) {\n  const root = process.platform === 'win32' ? file.slice(0, file.indexOf(':') + 1) : '/';\n  const normalizedFile = toUnixPath(file);\n  const topNodeModules = toUnixPath(path.resolve(path.join(root, 'node_modules')));\n  return normalizedFile.startsWith(topNodeModules);\n}\n\nexport function isRoot(file: string) {\n  return toUnixPath(file) === toUnixPath(path.parse(file).root);\n}\n\n/**\n * Any temporary file created with the `tmp` library will be removed once the Node.js process terminates.\n */\ntmp.setGracefulCleanup();\n\n/**\n * Create the TSConfig file and returns its path.\n *\n * The file is written in a temporary location in the file system\n * and is marked to be removed after Node.js process terminates.\n *\n * @param tsConfig TSConfig to write\n * @returns the resolved TSConfig file path\n */\nexport async function writeTSConfigFile(tsConfig: TsConfigJson): Promise<{ filename: string }> {\n  const filename = await promisify(tmp.file)();\n  await fs.writeFile(filename, JSON.stringify(tsConfig), 'utf-8');\n  return { filename };\n}\n\n/**\n * Create and return a TSConfig object.\n *\n * @param files array of files included in the TS program\n * @param include inclusion paths of the TS Program\n * @returns the TSConfig object\n */\nexport function createTSConfigFile(files?: string[], include?: string[]): TsConfigJson {\n  return {\n    compilerOptions: {\n      allowJs: true,\n      noImplicitAny: true,\n    },\n    include,\n    files,\n  } as TsConfigJson;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport path from 'path';\nimport { File, searchFiles, toUnixPath } from '@sonar/shared';\nimport { PackageJson } from 'type-fest';\n\nexport const PACKAGE_JSON = 'package.json';\nexport const parsePackageJson = (_filename: string, contents: string | null) =>\n  contents ? (JSON.parse(contents) as PackageJson) : {};\n\nconst DefinitelyTyped = '@types/';\n\n/**\n * Cache for each dirname the dependencies of the package.json in this directory, empty set when no package.json.\n */\nconst dirCache: Map<string, Set<string>> = new Map();\n\n/**\n * Cache for the available dependencies by dirname.\n */\nconst cache: Map<string, Set<string>> = new Map();\n\nlet PackageJsonsByBaseDir: Record<string, File<PackageJson>[]>;\n\nexport function loadPackageJsons(baseDir: string, exclusions: string[]) {\n  const { packageJsons } = searchFiles(\n    baseDir,\n    {\n      packageJsons: {\n        pattern: PACKAGE_JSON,\n        parser: parsePackageJson,\n      },\n    },\n    exclusions,\n  );\n\n  PackageJsonsByBaseDir = packageJsons as Record<string, File<PackageJson>[]>;\n}\n\nexport function getAllPackageJsons() {\n  return PackageJsonsByBaseDir;\n}\n\nexport function getPackageJsonsCount() {\n  return Object.keys(PackageJsonsByBaseDir).length;\n}\n\nexport function clearPackageJsons() {\n  PackageJsonsByBaseDir = {};\n}\n\nexport function setPackageJsons(db: Record<string, File<PackageJson>[]>) {\n  PackageJsonsByBaseDir = db;\n}\n\n/**\n * Retrieve the dependencies of all the package.json files available for the given file.\n *\n * @param fileName context.filename\n * @returns\n */\nexport function getDependencies(fileName: string) {\n  let dirname = path.posix.dirname(toUnixPath(fileName));\n  const cached = cache.get(dirname);\n  if (cached) {\n    return cached;\n  }\n\n  const result = new Set<string>();\n  cache.set(dirname, result);\n\n  for (const packageJson of getNearestPackageJsons(fileName)) {\n    dirname = path.posix.dirname(packageJson.filename);\n    const dirCached = dirCache.get(dirname);\n    if (dirCached) {\n      dirCached.forEach(d => result.add(d));\n    } else {\n      const dep = getDependenciesFromPackageJson(packageJson.contents);\n      dep.forEach(d => result.add(d));\n      dirCache.set(dirname, dep);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Given a filename, return all package.json files in the ancestor paths\n * ordered from nearest to furthest\n *\n * @param file source file for which we need a package.json\n */\nexport function getNearestPackageJsons(file: string) {\n  if (!getAllPackageJsons()) {\n    return [];\n  }\n  const results: File<PackageJson>[] = [];\n  if (getPackageJsonsCount() === 0) {\n    return results;\n  }\n  let currentDir = path.posix.dirname(path.posix.normalize(toUnixPath(file)));\n  do {\n    const packageJson = PackageJsonsByBaseDir[currentDir];\n    if (packageJson?.length) {\n      results.push(...packageJson);\n    }\n    currentDir = path.posix.dirname(currentDir);\n  } while (currentDir !== path.posix.dirname(currentDir));\n  return results;\n}\n\nfunction getDependenciesFromPackageJson(content: PackageJson) {\n  const result = new Set<string>();\n  if (content.name) {\n    addDependencies(result, { [content.name]: '*' });\n  }\n  if (content.dependencies !== undefined) {\n    addDependencies(result, content.dependencies);\n  }\n  if (content.devDependencies !== undefined) {\n    addDependencies(result, content.devDependencies);\n  }\n  if (content.peerDependencies !== undefined) {\n    addDependencies(result, content.peerDependencies);\n  }\n  return result;\n}\n\nfunction addDependencies(result: Set<string>, dependencies: any) {\n  Object.keys(dependencies).forEach(name =>\n    result.add(name.startsWith(DefinitelyTyped) ? name.substring(DefinitelyTyped.length) : name),\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport * from './package-json';\n\nimport { getNearestPackageJsons } from '.';\nimport * as semver from 'semver';\n\n/**\n * Minimum version per reference\n */\ntype MinimumVersions = {\n  node?: string;\n};\n\n/**\n * Checks if context where the filename is located supports the provided\n * minimum versions.\n */\nexport function isSupported(filename: string, minVersions: MinimumVersions): boolean {\n  validateVersions(minVersions);\n  return isSupportedNodeVersion(filename, minVersions.node);\n}\n\n/**\n * Check if the versions are valid semver\n */\nfunction validateVersions(versions: MinimumVersions) {\n  for (const [ref, version] of Object.entries(versions)) {\n    if (semver.valid(version) === null) {\n      throw new Error(`Invalid semver version: \"${version}\" for \"${ref}\"`);\n    }\n  }\n}\n\n/**\n * Check if the feature is supported by the minimum Node.js version of the project.\n *\n * @param filename\n * @param requiredVersion\n * @returns\n */\nfunction isSupportedNodeVersion(filename: string, requiredVersion?: string): boolean {\n  if (!requiredVersion) {\n    return true;\n  }\n  const packageJsons = getNearestPackageJsons(filename);\n  const versionRange = packageJsons.find(pj => pj.contents.engines?.node)?.contents.engines?.node;\n  if (!versionRange) {\n    return true;\n  }\n  const projectMinVersion = semver.minVersion(versionRange);\n  if (!projectMinVersion) {\n    return true;\n  }\n  return semver.gte(projectMinVersion, requiredVersion);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6957/javascript\n\nimport { Rule } from 'eslint';\nimport react from 'eslint-plugin-react';\nimport { getNearestPackageJsons } from '@sonar/jsts';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nconst reactNoDeprecated = react.rules['no-deprecated'];\n\nexport const rule: RuleModule = {\n  meta: {\n    messages: {\n      deprecated: '{{oldMethod}} is deprecated since React {{version}}{{newMethod}}',\n    },\n    schema: [\n      {\n        type: 'object',\n        properties: {},\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    function getVersionFromOptions() {\n      return context.options?.[0]?.['react-version'];\n    }\n    function getVersionFromPackageJson() {\n      for (const { contents: packageJson } of getNearestPackageJsons(context.filename)) {\n        if (packageJson.dependencies?.react) {\n          return packageJson.dependencies.react;\n        }\n        if (packageJson.devDependencies?.react) {\n          return packageJson.devDependencies.react;\n        }\n      }\n      return null;\n    }\n\n    const reactVersion = getVersionFromOptions() || getVersionFromPackageJson();\n\n    const patchedContext = reactVersion\n      ? Object.create(context, {\n          settings: {\n            value: { react: { version: reactVersion } },\n            writable: false,\n          },\n        })\n      : context;\n    return reactNoDeprecated.create(patchedContext);\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4621/javascript\n\nimport { Rule, AST } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n\n  create(context: Rule.RuleContext) {\n    return {\n      'TSUnionType, TSIntersectionType'(node: estree.Node) {\n        const sourceCode = context.sourceCode;\n        const compositeType = node as unknown as TSESTree.TSUnionType | TSESTree.TSIntersectionType;\n        const groupedTypes: Map<string, Array<TSESTree.Node>> = new Map();\n\n        compositeType.types.forEach(typescriptType => {\n          const nodeValue = sourceCode.getText(typescriptType as unknown as estree.Node);\n          const nodesWithGivenType = groupedTypes.get(nodeValue);\n          const nodeType = typescriptType as TSESTree.Node;\n          if (!nodesWithGivenType) {\n            groupedTypes.set(nodeValue, [nodeType]);\n          } else {\n            nodesWithGivenType.push(nodeType);\n          }\n        });\n\n        groupedTypes.forEach(duplicates => {\n          if (duplicates.length > 1) {\n            const suggest = getSuggestions(compositeType, duplicates, context);\n            const primaryNode = duplicates.splice(1, 1)[0];\n            const secondaryMessages = Array(duplicates.length);\n            secondaryMessages[0] = `Original`;\n            secondaryMessages.fill(`Another duplicate`, 1, duplicates.length);\n\n            context.report({\n              message: toEncodedMessage(\n                `Remove this duplicated type or replace with another one.`,\n                duplicates,\n                secondaryMessages,\n              ),\n              loc: primaryNode.loc,\n              suggest,\n            });\n          }\n        });\n      },\n    };\n  },\n};\n\nfunction getSuggestions(\n  composite: TSESTree.TSUnionType | TSESTree.TSIntersectionType,\n  duplicates: TSESTree.Node[],\n  context: Rule.RuleContext,\n): Rule.SuggestionReportDescriptor[] {\n  const ranges: [number, number][] = duplicates.slice(1).map(duplicate => {\n    const idx = composite.types.indexOf(duplicate as TSESTree.TypeNode);\n    return [\n      getEnd(context, composite.types[idx - 1], composite),\n      getEnd(context, duplicate, composite),\n    ];\n  });\n  return [\n    {\n      desc: 'Remove duplicate types',\n      fix: fixer => ranges.map(r => fixer.removeRange(r)),\n    },\n  ];\n}\n\nfunction getEnd(context: Rule.RuleContext, node: TSESTree.Node, composite: TSESTree.Node) {\n  let end: estree.Node | AST.Token = node as unknown as estree.Node;\n  while (true) {\n    const nextToken: AST.Token | null = context.sourceCode.getTokenAfter(end);\n    if (nextToken && nextToken.value === ')' && nextToken.range[1] <= composite.range[1]) {\n      end = nextToken;\n    } else {\n      break;\n    }\n  }\n  return end.range![1];\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S108/javascript\n\nimport { Rule, AST } from 'eslint';\nimport * as estree from 'estree';\nimport { interceptReport } from '../helpers';\n\n// core implementation of this rule does not provide quick fixes\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.hasSuggestions = true;\n  return interceptReport(rule, (context, reportDescriptor) => {\n    const node = (reportDescriptor as any).node as estree.Node;\n    const type = reportDescriptor.data!.type;\n    let openingBrace: AST.Token;\n    if (node.type === 'SwitchStatement') {\n      openingBrace = context.sourceCode.getTokenAfter(\n        node.discriminant,\n        token => token.value === '{',\n      )!;\n    } /* BlockStatement */ else {\n      openingBrace = context.sourceCode.getFirstToken(node)!;\n    }\n    const closingBrace = context.sourceCode.getLastToken(node)!;\n    suggestEmptyBlockQuickFix(context, reportDescriptor, type, openingBrace, closingBrace);\n  });\n}\n\nexport function suggestEmptyBlockQuickFix(\n  context: Rule.RuleContext,\n  descriptor: Rule.ReportDescriptor,\n  blockType: string,\n  openingBrace: AST.Token,\n  closingBrace: AST.Token,\n) {\n  let commentPlaceholder: string;\n  if (openingBrace.loc.start.line === closingBrace.loc.start.line) {\n    commentPlaceholder = ` /* TODO document why this ${blockType} is empty */ `;\n  } else {\n    const columnOffset = closingBrace.loc.start.column;\n    const padding = ' '.repeat(columnOffset);\n    commentPlaceholder = `\\n${padding}  // TODO document why this ${blockType} is empty\\n${padding}`;\n  }\n  context.report({\n    ...descriptor,\n    suggest: [\n      {\n        desc: 'Insert placeholder comment',\n        fix: fixer => fixer.insertTextAfter(openingBrace, commentPlaceholder),\n      },\n    ],\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { eslintRules } from '../core';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(eslintRules['no-empty']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6019/javascript\n\nimport { Rule } from 'eslint';\nimport * as regexpp from '@eslint-community/regexpp';\nimport { createRegExpRule, RegexRuleContext } from '../helpers/regex';\n\nexport const rule: Rule.RuleModule = createRegExpRule(context => {\n  return {\n    onRegExpLiteralEnter: (node: regexpp.AST.RegExpLiteral) => {\n      node.pattern.alternatives.forEach(({ elements }) => checkElements(elements, context));\n    },\n  };\n});\n\nfunction report(quantifier: regexpp.AST.Quantifier, context: RegexRuleContext) {\n  const ending = quantifier.min === 1 ? '' : 's';\n  const message = `Fix this reluctant quantifier that will only ever match ${quantifier.min} repetition${ending}.`;\n  context.reportRegExpNode({\n    message,\n    regexpNode: quantifier,\n    node: context.node,\n  });\n}\n\nfunction checkElements(elements: regexpp.AST.Element[], context: RegexRuleContext) {\n  if (elements.length === 0) {\n    return;\n  }\n\n  const lastElement = elements[elements.length - 1];\n  if (lastElement.type === 'Quantifier' && !lastElement.greedy) {\n    report(lastElement, context);\n    return;\n  }\n\n  if (elements.length === 1) {\n    return;\n  }\n\n  const lastButOneElement = elements[elements.length - 2];\n  if (lastButOneElement.type === 'Quantifier' && !lastButOneElement.greedy) {\n    if (lastElement.type === 'Assertion' && lastElement.kind === 'end') {\n      context.reportRegExpNode({\n        message: `Remove the '?' from this unnecessarily reluctant quantifier.`,\n        regexpNode: lastButOneElement,\n        node: context.node,\n      });\n    } else if (lastElement.type === 'Quantifier' && lastElement.min === 0) {\n      report(lastButOneElement, context);\n    }\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6323/javascript\n\nimport { Rule } from 'eslint';\nimport * as regexpp from '@eslint-community/regexpp';\nimport { last } from '../helpers';\nimport { Alternation, createRegExpRule } from '../helpers/regex';\n\nexport const rule: Rule.RuleModule = createRegExpRule(context => {\n  function checkAlternation(alternation: Alternation) {\n    const { alternatives: alts } = alternation;\n    if (alts.length <= 1) {\n      return;\n    }\n    for (let i = 0; i < alts.length; i++) {\n      const alt = alts[i];\n      if (alt.elements.length === 0 && !isLastEmptyInGroup(alt)) {\n        context.reportRegExpNode({\n          message: 'Remove this empty alternative.',\n          regexpNode: alt,\n          offset: i === alts.length - 1 ? [-1, 0] : [0, 1], // we want to raise the issue on the |\n          node: context.node,\n        });\n      }\n    }\n  }\n\n  return {\n    onPatternEnter: checkAlternation,\n    onGroupEnter: checkAlternation,\n    onCapturingGroupEnter: checkAlternation,\n  };\n});\n\nfunction isLastEmptyInGroup(alt: regexpp.AST.Alternative) {\n  const group = alt.parent;\n  return (\n    (group.type === 'Group' || group.type === 'CapturingGroup') &&\n    last(group.alternatives) === alt &&\n    group.parent.type !== 'Quantifier'\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1186/javascript\n\nimport * as estree from 'estree';\nimport { Rule } from 'eslint';\nimport { suggestEmptyBlockQuickFix } from '../S108/decorator';\nimport { interceptReport, FunctionNodeType, isFunctionNode, isIdentifier } from '../helpers';\n\ntype RuleFunctionNode = FunctionNodeType & Rule.Node;\n\nfunction isRuleFunctionNode(node: estree.Node): node is RuleFunctionNode {\n  return isFunctionNode(node) && 'parent' in node;\n}\n\n// core implementation of this rule does not provide quick fixes\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.hasSuggestions = true;\n  return interceptReport(rule, reportWithQuickFixIfApplicable);\n}\n\nexport function reportWithQuickFixIfApplicable(\n  context: Rule.RuleContext,\n  reportDescriptor: Rule.ReportDescriptor,\n) {\n  if (!('node' in reportDescriptor) || !isRuleFunctionNode(reportDescriptor.node)) {\n    return;\n  }\n\n  const functionNode = reportDescriptor.node;\n  if (isApplicable(functionNode)) {\n    reportWithQuickFix(context, reportDescriptor, functionNode);\n  }\n}\n\n// This function limits the issues to variable/function/method declarations which name is not like /^on[A-Z].\n// Any lambda expression or arrow function is thus ignored.\nfunction isApplicable(functionNode: RuleFunctionNode) {\n  // Matches identifiers like onClick and more generally onXxx as well as XXXnoopXXX functions\n  function isExceptionalName(node: estree.Node | null) {\n    return (\n      node !== null && isIdentifier(node) && (/^on[A-Z]/.test(node.name) || /noop/i.test(node.name))\n    );\n  }\n  // Matches: function foo() {}\n  // But not: function onClose() {} or function XXXnoopXXX() {}\n  function isFunctionDeclaration() {\n    return functionNode.type === 'FunctionDeclaration' && !isExceptionalName(functionNode.id);\n  }\n\n  // Matches: class A { foo() {} }\n  // But not: class A { onClose() {} }\n  function isMethodDefinition() {\n    const methodNode = functionNode.parent;\n    return (\n      methodNode.type === 'MethodDefinition' &&\n      methodNode.value === functionNode &&\n      !isExceptionalName(methodNode.key)\n    );\n  }\n\n  // Matches: const foo = () => {};\n  // But not: const onClose = () => {};\n  function isVariableDeclarator() {\n    const variableNode = functionNode.parent;\n    return (\n      variableNode.type === 'VariableDeclarator' &&\n      variableNode.init === functionNode &&\n      !isExceptionalName(variableNode.id)\n    );\n  }\n\n  return isFunctionDeclaration() || isMethodDefinition() || isVariableDeclarator();\n}\n\nfunction reportWithQuickFix(\n  context: Rule.RuleContext,\n  reportDescriptor: Rule.ReportDescriptor,\n  func: FunctionNodeType,\n) {\n  const name = reportDescriptor.data!.name;\n  const openingBrace = context.sourceCode.getFirstToken(func.body)!;\n  const closingBrace = context.sourceCode.getLastToken(func.body)!;\n  suggestEmptyBlockQuickFix(context, reportDescriptor, name, openingBrace, closingBrace);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { tsEslintRules } from '../typescript-eslint';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(tsEslintRules['no-empty-function']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6331/javascript\n\nimport { Rule } from 'eslint';\nimport { AST } from '@eslint-community/regexpp';\nimport { createRegExpRule } from '../helpers/regex';\n\nexport const rule: Rule.RuleModule = createRegExpRule(context => {\n  function checkEmptyGroup(group: AST.Group | AST.CapturingGroup) {\n    const { alternatives } = group;\n    if (alternatives.every(alt => alt.elements.length === 0)) {\n      context.reportRegExpNode({\n        message: 'Remove this empty group.',\n        node: context.node,\n        regexpNode: group,\n      });\n    }\n  }\n  return {\n    onGroupEnter: checkEmptyGroup,\n    onCapturingGroupEnter: checkEmptyGroup,\n  };\n});\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4023/javascript\n\nimport { Rule } from 'eslint';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { UTILITY_TYPES, interceptReport } from '../helpers';\n\n// core implementation of this rule raises issues on empty interface extending TypeScript utility types\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, (context, reportDescriptor) => {\n    const id = (reportDescriptor as any).node as TSESTree.Identifier;\n    const decl = id.parent as TSESTree.TSInterfaceDeclaration;\n    if (decl.extends?.length === 1 && isUtilityType(decl.extends[0])) {\n      return;\n    }\n    context.report(reportDescriptor);\n  });\n}\n\nfunction isUtilityType(node: TSESTree.TSInterfaceHeritage) {\n  return node.expression.type === 'Identifier' && UTILITY_TYPES.has(node.expression.name);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { tsEslintRules } from '../typescript-eslint';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(tsEslintRules['no-empty-interface']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2187/javascript\n\nimport { Rule } from 'eslint';\nimport { Node } from 'estree';\n\nconst APIs = new Set([\n  // Jasmine\n  'it',\n  'fit',\n  'xit',\n  // Jest\n  'it',\n  'it.concurrent',\n  'it.concurrent.each',\n  'it.concurrent.only.each',\n  'it.concurrent.skip.each',\n  'it.each',\n  'it.failing',\n  'it.failing.each',\n  'it.only.failing',\n  'it.skip.failing',\n  'it.only',\n  'it.only.each',\n  'it.skip',\n  'it.skip.each',\n  'it.todo',\n  'test',\n  'test.concurrent',\n  'test.concurrent.each',\n  'test.concurrent.only.each',\n  'test.concurrent.skip.each',\n  'test.each',\n  'test.failing',\n  'test.failing.each',\n  'test.only.failing',\n  'test.skip.failing',\n  'test.only',\n  'test.only.each',\n  'test.skip',\n  'test.skip.each',\n  'test.todo',\n  // Mocha\n  'it',\n  'it.skip',\n  'it.only',\n  'test',\n  'test.skip',\n  'test.only',\n  // Node.js\n  'it',\n  'it.skip',\n  'it.todo',\n  'it.only',\n  'test',\n  'test.skip',\n  'test.todo',\n  'test.only',\n]);\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      missingTest: 'Add some tests to this file or delete it.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const { filename } = context;\n    if (!/\\.spec\\.|\\.test\\./.exec(filename)) {\n      return {};\n    }\n\n    let hasTest = false;\n    return {\n      CallExpression(node) {\n        if (hasTest) {\n          return;\n        }\n\n        const fqn = fullyQualifiedName(node.callee);\n        if (APIs.has(fqn)) {\n          hasTest = true;\n        }\n      },\n      'Program:exit'() {\n        if (!hasTest) {\n          context.report({\n            messageId: 'missingTest',\n            loc: { line: 0, column: 0 },\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction fullyQualifiedName(node: Node): string {\n  switch (node.type) {\n    case 'Identifier':\n      return node.name;\n    case 'MemberExpression':\n      return `${fullyQualifiedName(node.object)}.${fullyQualifiedName(node.property)}`;\n    default:\n      return '';\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S888/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getVariableFromName } from '../helpers';\n\nconst allEqualityOperators = ['!=', '==', '!==', '==='];\nconst notEqualOperators = ['!==', '!='];\nconst plusMinusOperators = ['+=', '-='];\n\ninterface CompleteForStatement extends estree.BaseStatement {\n  type: 'ForStatement';\n  init?: estree.VariableDeclaration | estree.Expression | null;\n  test: estree.Expression;\n  update: estree.Expression;\n  body: estree.Statement;\n}\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      replaceOperator:\n        \"Replace '{{operator}}' operator with one of '<=', '>=', '<', or '>' comparison operators.\",\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      ForStatement: (node: estree.Node) => {\n        const forStatement = node as estree.ForStatement;\n        if (!forStatement.test || !forStatement.update) {\n          return;\n        }\n        const completeForStatement = node as CompleteForStatement;\n        const condition = completeForStatement.test;\n        if (\n          isEquality(condition) &&\n          isUpdateIncDec(completeForStatement.update) &&\n          !isException(completeForStatement, context)\n        ) {\n          context.report({\n            messageId: 'replaceOperator',\n            data: {\n              operator: condition.operator,\n            },\n            node: condition,\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction isEquality(expression: estree.Expression): expression is estree.BinaryExpression {\n  return (\n    expression.type === 'BinaryExpression' && allEqualityOperators.includes(expression.operator)\n  );\n}\n\nfunction isUpdateIncDec(expression: estree.Expression): boolean {\n  if (isIncDec(expression) || expression.type === 'UpdateExpression') {\n    return true;\n  } else if (expression.type === 'SequenceExpression') {\n    return expression.expressions.every(isUpdateIncDec);\n  }\n  return false;\n}\n\nfunction isIncDec(expression: estree.Expression): expression is estree.AssignmentExpression {\n  return (\n    expression.type === 'AssignmentExpression' && plusMinusOperators.includes(expression.operator)\n  );\n}\n\nfunction isException(forStatement: CompleteForStatement, context: Rule.RuleContext) {\n  return (\n    isNontrivialConditionException(forStatement) ||\n    isTrivialIteratorException(forStatement, context)\n  );\n}\n\nfunction isNontrivialConditionException(forStatement: CompleteForStatement) {\n  //If we reach this point, we know that test is an equality kind\n  const condition = forStatement.test as estree.BinaryExpression;\n  const counters: Array<string> = [];\n  collectCounters(forStatement.update, counters);\n  return condition.left.type !== 'Identifier' || !counters.includes(condition.left.name);\n}\n\nfunction collectCounters(expression: estree.Expression, counters: Array<string>) {\n  let counter: estree.Node | null | undefined = undefined;\n\n  if (isIncDec(expression)) {\n    counter = expression.left;\n  } else if (expression.type === 'UpdateExpression') {\n    counter = expression.argument;\n  } else if (expression.type === 'SequenceExpression') {\n    expression.expressions.forEach(e => collectCounters(e, counters));\n  }\n\n  if (counter && counter.type === 'Identifier') {\n    counters.push(counter.name);\n  }\n}\n\nfunction isTrivialIteratorException(forStatement: CompleteForStatement, context: Rule.RuleContext) {\n  const init = forStatement.init;\n  const condition = forStatement.test;\n\n  if (init && isNotEqual(condition)) {\n    const updatedByOne = checkForUpdateByOne(forStatement.update, forStatement.body, context);\n    if (updatedByOne !== 0) {\n      const beginValue = getValue(init);\n      const endValue = getValue(condition);\n      return (\n        beginValue !== undefined &&\n        endValue !== undefined &&\n        updatedByOne === Math.sign(endValue - beginValue)\n      );\n    }\n  }\n\n  return false;\n}\n\nfunction isNotEqual(node: estree.Node): node is estree.BinaryExpression {\n  return node.type === 'BinaryExpression' && notEqualOperators.includes(node.operator);\n}\n\nfunction checkForUpdateByOne(\n  update: estree.Expression,\n  loopBody: estree.Node,\n  context: Rule.RuleContext,\n) {\n  if (isUpdateByOne(update, loopBody, context)) {\n    if (update.operator === '++' || update.operator === '+=') {\n      return +1;\n    }\n    if (update.operator === '--' || update.operator === '-=') {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nfunction isUpdateByOne(\n  update: estree.Expression,\n  loopBody: estree.Node,\n  context: Rule.RuleContext,\n): update is estree.UpdateExpression | estree.AssignmentExpression {\n  return (\n    (update.type === 'UpdateExpression' && !isUsedInsideBody(update.argument, loopBody, context)) ||\n    (isUpdateOnOneWithAssign(update) && !isUsedInsideBody(update.left, loopBody, context))\n  );\n}\n\nfunction isUsedInsideBody(id: estree.Node, loopBody: estree.Node, context: Rule.RuleContext) {\n  if (id.type === 'Identifier') {\n    const variable = getVariableFromName(context, id.name, id);\n    const bodyRange = loopBody.range;\n    if (variable && bodyRange) {\n      return variable.references.some(ref => isInBody(ref.identifier, bodyRange));\n    }\n  }\n  return false;\n}\n\nfunction isInBody(id: estree.Identifier, bodyRange: [number, number]) {\n  return id?.range && id.range[0] > bodyRange[0] && id.range[1] < bodyRange[1];\n}\n\nfunction getValue(node: estree.Node) {\n  if (isNotEqual(node)) {\n    return getInteger(node.right);\n  } else if (isOneVarDeclaration(node)) {\n    const variable = node.declarations[0];\n    return getInteger(variable.init);\n  } else if (node.type === 'AssignmentExpression') {\n    return getInteger(node.right);\n  }\n  return undefined;\n}\n\nfunction getInteger(node: estree.Node | undefined | null) {\n  if (node && node.type === 'Literal' && typeof node.value === 'number') {\n    return node.value;\n  }\n  return undefined;\n}\n\nfunction isOneVarDeclaration(node: estree.Node): node is estree.VariableDeclaration {\n  return node.type === 'VariableDeclaration' && node.declarations.length === 1;\n}\n\nfunction isUpdateOnOneWithAssign(\n  expression: estree.Expression,\n): expression is estree.AssignmentExpression {\n  if (isIncDec(expression)) {\n    const right = expression.right;\n    return right.type === 'Literal' && right.value === 1;\n  }\n  return false;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6426/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isMethodCall, isIdentifier } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      issue: 'Remove \".only()\" from your test case.',\n      quickfix: 'Remove .\"only()\".',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      CallExpression: (node: estree.CallExpression) => {\n        if (isMethodCall(node)) {\n          const { property, object } = node.callee;\n          if (isIdentifier(property, 'only') && isIdentifier(object, 'describe', 'it', 'test')) {\n            context.report({\n              messageId: 'issue',\n              node: property,\n              suggest: [\n                {\n                  fix: (fixer: Rule.RuleFixer) => {\n                    const fixes = [fixer.remove(property)];\n                    const dotBeforeOnly = context.sourceCode.getTokenBefore(property);\n                    if (dotBeforeOnly != null) {\n                      fixes.push(fixer.remove(dotBeforeOnly));\n                    }\n                    return fixes;\n                  },\n                  messageId: 'quickfix',\n                },\n              ],\n            });\n          }\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6643/javascript\n\nimport * as estree from 'estree';\nimport { Rule } from 'eslint';\nimport { interceptReport } from '../helpers';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, (context, reportDescriptor) => {\n    const node = (reportDescriptor as any).node as estree.Node;\n    let reportedNode: estree.Node;\n    if (node.type === 'CallExpression') {\n      // `*.prototype` <- CallExpression\n      reportedNode = node.arguments[0];\n    } else {\n      // `*.prototype` <- MemberExpression <- AssignmentExpression\n      reportedNode = (node as estree.AssignmentExpression).left;\n    }\n    context.report({ ...reportDescriptor, node: reportedNode });\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { eslintRules } from '../core';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(eslintRules['no-extend-native']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { AST, Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { interceptReport } from '../helpers';\n\ntype NullableToken = AST.Token | null | undefined;\ntype NodeCondition = (context: Rule.RuleContext, node: estree.Node) => boolean;\n\n// core implementation of this rule raises issues when using semicolon-free style and\n// using semicolon to protect code on purpose.\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, reportExempting(isProtectionSemicolon));\n}\n\nfunction reportExempting(exemptionCondition: NodeCondition) {\n  return (context: Rule.RuleContext, reportDescriptor: Rule.ReportDescriptor): void => {\n    if ('node' in reportDescriptor && !exemptionCondition(context, reportDescriptor.node)) {\n      context.report(reportDescriptor);\n    }\n  };\n}\n\n// Checks that a node is a semicolon inserted to prevent the compiler from merging the\n// following statement with the previous.\nexport function isProtectionSemicolon(context: Rule.RuleContext, node: estree.Node): boolean {\n  if (node.type !== 'EmptyStatement') {\n    return false;\n  }\n\n  // This checks the semicolon is on a new line compared to the previous token if it exists.\n  const previousToken = context.sourceCode.getTokenBefore(node);\n  if (!isNodeOnNewLineAfterToken(node, previousToken)) {\n    return false;\n  }\n\n  const nextToken = context.sourceCode.getTokenAfter(node);\n  return isParenOrBracket(nextToken);\n}\n\nfunction isNodeOnNewLineAfterToken(node: estree.Node, token: NullableToken): boolean {\n  if (node.loc == null) {\n    return false;\n  } else if (token == null) {\n    return true;\n  } else {\n    return token.loc.end.line < node.loc.start.line;\n  }\n}\n\nfunction isParenOrBracket(token: NullableToken): boolean {\n  return token?.type === 'Punctuator' && (token.value === '[' || token.value === '(');\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { tsEslintRules } from '../typescript-eslint';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(tsEslintRules['no-extra-semi']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6788/javascript\n\nimport { Rule } from 'eslint';\nimport { interceptReport } from '../helpers';\n\n// Rewording issue message reported by the core implementation.\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.messages!['noFindDOMNode'] =\n    \"Do not use findDOMNode. It doesn't work with function components and is deprecated in StrictMode.\";\n  return interceptReport(rule, (context, reportDescriptor) => {\n    context.report({\n      ...reportDescriptor,\n    });\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport react from 'eslint-plugin-react';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(react.rules['no-find-dom-node']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4139/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport ts from 'typescript';\nimport {\n  getTypeFromTreeNode,\n  isStringType,\n  isArrayLikeType,\n  isRequiredParserServices,\n} from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      useForOf: 'Use \"for...of\" to iterate over this \"{{iterable}}\".',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n    return {\n      ForInStatement: (node: estree.Node) => {\n        const type = getTypeFromTreeNode((node as estree.ForInStatement).right, services);\n        if (isIterable(type)) {\n          const iterable = type.symbol ? type.symbol.name : 'String';\n          context.report({\n            messageId: 'useForOf',\n            data: { iterable },\n            loc: context.sourceCode.getFirstToken(node)!.loc,\n          });\n        }\n      },\n    };\n\n    function isIterable(type: ts.Type) {\n      return isCollection(type) || isStringType(type) || isArrayLikeType(type, services);\n    }\n  },\n};\n\nfunction isCollection(type: ts.Type) {\n  return (\n    type.symbol !== undefined &&\n    [\n      'Array',\n      'Int8Array',\n      'Uint8Array',\n      'Uint8ClampedArray',\n      'Int16Array',\n      'Uint16Array',\n      'Int32Array',\n      'Uint32Array',\n      'Float32Array',\n      'Float64Array',\n      'BigInt64Array',\n      'BigUint64Array',\n      'Set',\n      'Map',\n    ].includes(type.symbol.name)\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1530/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getMainFunctionTokenLocation } from 'eslint-plugin-sonarjs/lib/src/utils/locations';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { getParent, RuleContext } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      blockedFunction: 'Do not use function declarations within blocks.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      ':not(FunctionDeclaration, FunctionExpression, ArrowFunctionExpression) > BlockStatement > FunctionDeclaration':\n        (node: estree.Node) => {\n          context.report({\n            messageId: 'blockedFunction',\n            loc: getMainFunctionTokenLocation(\n              node as TSESTree.FunctionDeclaration,\n              getParent(context, node) as TSESTree.Node,\n              context as unknown as RuleContext,\n            ),\n          });\n        },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2990/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      removeThis: `Remove the use of \"this\".`,\n      suggestRemoveThis: 'Remove \"this\"',\n      suggestUseWindow: 'Replace \"this\" with \"window\" object',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      'MemberExpression[object.type=\"ThisExpression\"]'(node: estree.Node) {\n        const memberExpression = node as estree.MemberExpression;\n        const scopeType = context.sourceCode.getScope(node).variableScope.type;\n        const isInsideClass = context.sourceCode\n          .getAncestors(node)\n          .some(\n            ancestor => ancestor.type === 'ClassDeclaration' || ancestor.type === 'ClassExpression',\n          );\n        if ((scopeType === 'global' || scopeType === 'module') && !isInsideClass) {\n          const suggest: Rule.SuggestionReportDescriptor[] = [];\n          if (!memberExpression.computed) {\n            const propertyText = context.sourceCode.getText(memberExpression.property);\n            suggest.push(\n              {\n                messageId: 'suggestRemoveThis',\n                fix: fixer => fixer.replaceText(node, propertyText),\n              },\n              {\n                messageId: 'suggestUseWindow',\n                fix: fixer => fixer.replaceText(memberExpression.object, 'window'),\n              },\n            );\n          }\n          context.report({\n            messageId: 'removeThis',\n            node: memberExpression.object,\n            suggest,\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2137/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { globalsByLibraries } from '../helpers';\n\nconst illegalNames = ['arguments'];\nconst objectPrototypeProperties = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf',\n];\nconst deprecatedNames = ['escape', 'unescape'];\n\nconst getDeclarationIssue = (redeclareType: string) => (name: string) => ({\n  messageId: 'forbidDeclaration',\n  data: { symbol: name, type: redeclareType },\n});\n\nconst getModificationIssue = (functionName: string) => ({\n  messageId: 'removeModification',\n  data: { symbol: functionName },\n});\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      removeModification: 'Remove the modification of \"{{symbol}}\".',\n      forbidDeclaration: 'Do not use \"{{symbol}}\" to declare a {{type}} - use another name.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      'FunctionDeclaration, FunctionExpression'(node: estree.Node) {\n        const func = node as estree.FunctionDeclaration | estree.FunctionExpression;\n        reportBadUsageOnFunction(func, func.id, context);\n      },\n      ArrowFunctionExpression(node: estree.Node) {\n        reportBadUsageOnFunction(node as estree.ArrowFunctionExpression, undefined, context);\n      },\n      VariableDeclaration(node: estree.Node) {\n        (node as estree.VariableDeclaration).declarations.forEach(decl => {\n          reportGlobalShadowing(\n            decl.id,\n            getDeclarationIssue('variable'),\n            context,\n            decl.init != null,\n          );\n        });\n      },\n      UpdateExpression(node: estree.Node) {\n        reportGlobalShadowing(\n          (node as estree.UpdateExpression).argument,\n          getModificationIssue,\n          context,\n          true,\n        );\n      },\n      AssignmentExpression(node: estree.Node) {\n        reportGlobalShadowing(\n          (node as estree.AssignmentExpression).left,\n          getModificationIssue,\n          context,\n          true,\n        );\n      },\n      CatchClause(node: estree.Node) {\n        reportGlobalShadowing(\n          (node as estree.CatchClause).param,\n          getDeclarationIssue('variable'),\n          context,\n          true,\n        );\n      },\n    };\n  },\n};\n\nfunction reportBadUsageOnFunction(\n  func: estree.Function,\n  id: estree.Node | null | undefined,\n  context: Rule.RuleContext,\n) {\n  reportGlobalShadowing(id, getDeclarationIssue('function'), context, true);\n  func.params.forEach(p => {\n    reportGlobalShadowing(p, getDeclarationIssue('parameter'), context, false);\n  });\n}\n\nfunction reportGlobalShadowing(\n  node: estree.Node | null | undefined,\n  buildMessageAndData: (name: string) => { messageId: string; data: any },\n  context: Rule.RuleContext,\n  isWrite: boolean,\n) {\n  if (node) {\n    switch (node.type) {\n      case 'Identifier': {\n        if (isGlobalShadowing(node.name, isWrite) && !isShadowingException(node.name)) {\n          context.report({\n            node,\n            ...buildMessageAndData(node.name),\n          });\n        }\n        break;\n      }\n      case 'RestElement':\n        reportGlobalShadowing(node.argument, buildMessageAndData, context, true);\n        break;\n      case 'ObjectPattern':\n        node.properties.forEach(prop => {\n          if (prop.type === 'Property') {\n            reportGlobalShadowing(prop.value, buildMessageAndData, context, true);\n          } else {\n            reportGlobalShadowing(prop.argument, buildMessageAndData, context, true);\n          }\n        });\n        break;\n      case 'ArrayPattern':\n        node.elements.forEach(elem => {\n          reportGlobalShadowing(elem, buildMessageAndData, context, true);\n        });\n        break;\n      case 'AssignmentPattern':\n        reportGlobalShadowing(node.left, buildMessageAndData, context, true);\n        break;\n    }\n  }\n}\n\nfunction isGlobalShadowing(name: string, isWrite: boolean) {\n  return isIllegalName(name) || isBuiltInName(name) || isUndefinedShadowing(isWrite, name);\n}\n\nfunction isIllegalName(name: string) {\n  return illegalNames.includes(name);\n}\n\nfunction isBuiltInName(name: string) {\n  return globalsByLibraries.builtin.includes(name);\n}\n\nfunction isUndefinedShadowing(isWrite: boolean, name: string) {\n  return isWrite && name === 'undefined';\n}\n\nfunction isShadowingException(name: string) {\n  return isObjectPrototypeProperty(name) || isDeprecatedName(name);\n}\n\nfunction isObjectPrototypeProperty(name: string) {\n  return objectPrototypeProperties.includes(name);\n}\n\nfunction isDeprecatedName(name: string) {\n  return deprecatedNames.includes(name);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2068/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isStringLiteral } from '../helpers';\nimport path from 'path';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nexport type Options = [\n  {\n    credentialWords: Array<string>;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    messages: {\n      reviewCredential: 'Review this potentially hardcoded credential.',\n    },\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          credentialWords: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const dir = path.dirname(context.physicalFilename);\n    const parts = dir.split(path.sep).map(part => part.toLowerCase());\n    if (parts.includes('l10n')) {\n      return {};\n    }\n\n    const [{ credentialWords: variableNames }] = context.options as Options;\n    const literalRegExp = variableNames.map(name => new RegExp(`${name}=.+`));\n    return {\n      VariableDeclarator: (node: estree.Node) => {\n        const declaration = node as estree.VariableDeclarator;\n        checkAssignment(context, variableNames, declaration.id, declaration.init);\n      },\n      AssignmentExpression: (node: estree.Node) => {\n        const assignment = node as estree.AssignmentExpression;\n        checkAssignment(context, variableNames, assignment.left, assignment.right);\n      },\n      Property: (node: estree.Node) => {\n        const property = node as estree.Property;\n        checkAssignment(context, variableNames, property.key, property.value);\n      },\n      Literal: (node: estree.Node) => {\n        const literal = node as estree.Literal;\n        checkLiteral(context, literalRegExp, literal);\n      },\n    };\n  },\n};\n\nfunction checkAssignment(\n  context: Rule.RuleContext,\n  patterns: string[],\n  variable: estree.Node,\n  initializer?: estree.Node | null,\n) {\n  if (\n    initializer &&\n    isStringLiteral(initializer) &&\n    (initializer.value as string).length > 0 &&\n    patterns.some(pattern => context.sourceCode.getText(variable).includes(pattern))\n  ) {\n    context.report({\n      messageId: 'reviewCredential',\n      node: initializer,\n    });\n  }\n}\n\nfunction checkLiteral(context: Rule.RuleContext, patterns: RegExp[], literal: estree.Literal) {\n  if (isStringLiteral(literal) && patterns.some(pattern => pattern.test(literal.value as string))) {\n    context.report({\n      messageId: 'reviewCredential',\n      node: literal,\n    });\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1313/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isIP } from 'net';\n\nconst netMaskRegex = /(^[^/]+)\\/\\d{1,3}$/;\nconst acceptedIpAddresses = ['255.255.255.255', '::1', '::', '0:0:0:0:0:0:0:1', '0:0:0:0:0:0:0:0'];\nconst ipV4Octets = 4;\nconst ipV4MappedToV6Prefix = '::ffff:0:';\nconst acceptedIpV6Starts = [\n  // https://datatracker.ietf.org/doc/html/rfc3849\n  '2001:db8:',\n];\nconst acceptedIpV4Starts = [\n  '127.',\n  '0.',\n  // avoid FP for OID http://www.oid-info.com/introduction.htm\n  '2.5',\n  // https://datatracker.ietf.org/doc/html/rfc5737\n  '192.0.2.',\n  '198.51.100.',\n  '203.0.113.',\n];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      checkIP: 'Make sure using a hardcoded IP address {{ip}} is safe here.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    function isException(ip: string) {\n      return (\n        acceptedIpV6Starts.some(prefix => ip.startsWith(prefix)) ||\n        acceptedIpV4Starts.some(\n          prefix => ip.startsWith(ipV4MappedToV6Prefix + prefix) || ip.startsWith(prefix),\n        ) ||\n        acceptedIpAddresses.includes(ip)\n      );\n    }\n    function isIPV4OctalOrHex(ip: string) {\n      const digits = ip.split('.');\n      if (digits.length !== ipV4Octets) {\n        return false;\n      }\n      const decimalDigits = [];\n      for (const digit of digits) {\n        if (digit.match(/^0[0-7]*$/)) {\n          decimalDigits.push(parseInt(digit, 8));\n        } else if (digit.match(/^0[xX][0-9a-fA-F]+$/)) {\n          decimalDigits.push(parseInt(digit, 16));\n        } else {\n          return false;\n        }\n      }\n      const convertedIp = `${decimalDigits[0]}.${decimalDigits[1]}.${decimalDigits[2]}.${decimalDigits[3]}`;\n      return !isException(convertedIp) && isIP(convertedIp) !== 0;\n    }\n    return {\n      Literal(node: estree.Node) {\n        const { value } = node as estree.Literal;\n        if (typeof value !== 'string') {\n          return;\n        }\n        let ip = value;\n        const result = value.match(netMaskRegex);\n        if (result) {\n          ip = result[1];\n        }\n        if ((!isException(ip) && isIP(ip) !== 0) || isIPV4OctalOrHex(ip)) {\n          context.report({\n            node,\n            messageId: 'checkIP',\n            data: {\n              ip: value,\n            },\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6442/javascript\n\nimport { Rule, Scope as ESLintScope } from 'eslint';\nimport Variable = ESLintScope.Variable;\nimport Scope = ESLintScope.Scope;\nimport * as estree from 'estree';\nimport {\n  findFirstMatchingLocalAncestor,\n  getFullyQualifiedName,\n  getVariableFromName,\n  isFunctionNode,\n  isIdentifier,\n} from '../helpers';\nimport { TSESTree } from '@typescript-eslint/utils';\n\ntype HookDeclarator = estree.VariableDeclarator & {\n  id: {\n    elements: estree.Identifier[];\n  };\n  init: estree.CallExpression;\n};\n\ntype SetterCall = estree.CallExpression & {\n  callee: estree.Identifier;\n};\n\nconst REACT_MODULE = 'react';\nconst REACT_PATTERN = /^[^a-z]/;\nconst HOOK_FUNCTION = 'useState';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      noHookSetterInBody:\n        'Remove this state setter call, perhaps move it to an event handler or JSX attribute',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    function isHookCall(node: estree.CallExpression): boolean {\n      return (\n        getFullyQualifiedName(context, node) === `${REACT_MODULE}.${HOOK_FUNCTION}` &&\n        node.arguments.length === 1\n      );\n    }\n\n    function getReactComponentScope(node: estree.Node): Scope | null {\n      const scope = context.sourceCode.getScope(node);\n      const isReact = isFunctionNode(scope.block) && matchesReactComponentName(scope.block, 1);\n      return isReact ? scope : null;\n    }\n\n    function isInsideFunctionScope(scope: Scope | null, node: estree.Node): boolean {\n      function searchUpperFunctionScope(current: Scope | null): Scope | null {\n        if (current === null) {\n          return null;\n        } else if (current.type === 'function') {\n          return current;\n        } else {\n          return searchUpperFunctionScope(current.upper);\n        }\n      }\n\n      return (\n        scope !== null && searchUpperFunctionScope(context.sourceCode.getScope(node)) === scope\n      );\n    }\n\n    function isInsideConditional(node: estree.Node): boolean {\n      return (\n        findFirstMatchingLocalAncestor(node as TSESTree.Node, n => n.type === 'IfStatement') !==\n        undefined\n      );\n    }\n\n    let reactComponentScope: Scope | null; // Scope of the React component render function.\n    const setters: Variable[] = []; // Setter variables returned by the React useState() function.\n\n    return {\n      ':function'(node: estree.Node) {\n        reactComponentScope ??= getReactComponentScope(node); // Store the top-most React component scope.\n      },\n\n      ':function:exit'(node: estree.Node) {\n        if (context.sourceCode.getScope(node) === reactComponentScope) {\n          // Clean variables when leaving the React component scope.\n          reactComponentScope = null;\n          setters.length = 0;\n        }\n      },\n\n      // Selector matching declarations like: const [count, setCount] = useState(0);\n      ['VariableDeclarator[init.type=\"CallExpression\"]' +\n        ':has(ArrayPattern[elements.length=2][elements.0.type=\"Identifier\"][elements.1.type=\"Identifier\"])'](\n        node: estree.VariableDeclarator,\n      ) {\n        if (!isInsideFunctionScope(reactComponentScope, node)) {\n          return;\n        }\n\n        const hookDeclarator = node as HookDeclarator;\n\n        if (isHookCall(hookDeclarator.init)) {\n          const variable = getVariableFromName(context, hookDeclarator.id.elements[1].name, node);\n          if (variable != null) {\n            setters.push(variable);\n          }\n        }\n      },\n\n      // Selector matching function calls like: setCount(1)\n      'CallExpression[callee.type=\"Identifier\"][arguments.length=1]'(node: estree.CallExpression) {\n        if (\n          !isInsideFunctionScope(reactComponentScope, node) ||\n          setters.length === 0 ||\n          isInsideConditional(node)\n        ) {\n          return;\n        }\n\n        const maybeSetterCall = node as SetterCall;\n\n        const calleeVariable = getVariableFromName(context, maybeSetterCall.callee.name, node);\n        if (setters.some(variable => variable === calleeVariable)) {\n          context.report({\n            messageId: 'noHookSetterInBody',\n            node: node.callee,\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction hasParent(node: estree.Node): node is Rule.Node {\n  return (node as Rule.Node).parent != null;\n}\n\nfunction matchesReactComponentName(node: estree.Node | null, max = 0): boolean {\n  if (node == null) {\n    return false;\n  } else if (isIdentifier(node)) {\n    return REACT_PATTERN.test(node.name);\n  } else if (node.type === 'FunctionDeclaration') {\n    return matchesReactComponentName(node.id);\n  } else if (node.type === 'VariableDeclarator') {\n    return matchesReactComponentName(node.id);\n  } else if (node.type === 'AssignmentExpression') {\n    return matchesReactComponentName(node.left);\n  } else if (node.type === 'MemberExpression') {\n    return matchesReactComponentName(node.property);\n  } else if (hasParent(node) && max > 0) {\n    return matchesReactComponentName(node.parent, max - 1);\n  } else {\n    return false;\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2486/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getVariableFromScope } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      handleException: \"Handle this exception or don't catch it at all.\",\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      'CatchClause[param.type=\"Identifier\"]'(node: estree.CatchClause) {\n        const param = node.param as estree.Identifier;\n        const scope = context.sourceCode.getScope(node);\n        const variable = getVariableFromScope(scope, param.name);\n        if (variable?.references.length === 0) {\n          context.report({\n            messageId: 'handleException',\n            node,\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4328/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport builtins from 'builtin-modules';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport * as ts from 'typescript';\nimport { RequiredParserServices } from '../helpers';\nimport { getDependencies } from '@sonar/jsts';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nexport type Options = [\n  {\n    whitelist: Array<string>;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    messages: {\n      removeOrAddDependency: 'Either remove this import or add it as a dependency.',\n    },\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          whitelist: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const options = context.options as Options;\n    const whitelist = options.length > 0 ? options[0].whitelist : [];\n    const dependencies = getDependencies(context.filename);\n    const aliasedPathsMappingPatterns = extractPathMappingPatterns(\n      context.sourceCode.parserServices,\n    );\n    const baseUrl = getBaseUrl(context.sourceCode.parserServices);\n    if (aliasedPathsMappingPatterns === 'matchAll') {\n      // deactivates this rule altogether.\n      return {};\n    }\n    return {\n      CallExpression: (node: estree.Node) => {\n        const call = node as estree.CallExpression;\n        if (\n          call.callee.type === 'Identifier' &&\n          call.callee.name === 'require' &&\n          call.arguments.length === 1\n        ) {\n          const [argument] = call.arguments;\n          if (argument.type === 'Literal') {\n            const requireToken = call.callee;\n            raiseOnImplicitImport(\n              argument,\n              requireToken.loc!,\n              dependencies,\n              whitelist,\n              aliasedPathsMappingPatterns,\n              baseUrl,\n              context,\n            );\n          }\n        }\n      },\n      ImportDeclaration: (node: estree.Node) => {\n        const module = (node as estree.ImportDeclaration).source;\n        const importToken = context.sourceCode.getFirstToken(node);\n        raiseOnImplicitImport(\n          module,\n          importToken!.loc,\n          dependencies,\n          whitelist,\n          aliasedPathsMappingPatterns,\n          baseUrl,\n          context,\n        );\n      },\n    };\n  },\n};\n\nfunction raiseOnImplicitImport(\n  module: estree.Literal,\n  loc: estree.SourceLocation,\n  dependencies: Set<string>,\n  whitelist: string[],\n  aliasedPathsMappingPatterns: PathMappingPattern[],\n  baseUrl: string | undefined,\n  context: Rule.RuleContext,\n) {\n  const moduleName = module.value;\n  if (typeof moduleName !== 'string') {\n    return;\n  }\n\n  if (ts.isExternalModuleNameRelative(moduleName)) {\n    return;\n  }\n\n  if (aliasedPathsMappingPatterns.some(pattern => pattern.isApplicableTo(moduleName))) {\n    return;\n  }\n\n  if (['node:', 'data:', 'file:'].some(prefix => moduleName.startsWith(prefix))) {\n    return;\n  }\n\n  if (baseUrl) {\n    const underBaseUrlPath = path.join(baseUrl, moduleName);\n    const extensions = ['', '.ts', '.d.ts', '.tsx', '.js', '.jsx', '.vue', '.mjs'];\n    if (extensions.some(extension => fs.existsSync(underBaseUrlPath + extension))) {\n      return;\n    }\n  }\n\n  const packageName = getPackageName(moduleName);\n  if (\n    !whitelist.includes(packageName) &&\n    !builtins.includes(packageName) &&\n    !dependencies.has(packageName)\n  ) {\n    context.report({\n      messageId: 'removeOrAddDependency',\n      loc,\n    });\n  }\n}\n\nfunction getPackageName(name: string) {\n  /*\n    - scoped `@namespace/foo/bar` -> package `@namespace/foo`\n    - scope `foo/bar` -> package `foo`\n  */\n  const parts = name.split('/');\n  if (!name.startsWith('@')) {\n    return parts[0];\n  } else {\n    return `${parts[0]}/${parts[1]}`;\n  }\n}\n\n/**\n * The matching pattern part of a path mapping specified\n * in `paths` in `tsconfig.json`.\n */\ninterface PathMappingPattern {\n  isApplicableTo(name: string): boolean;\n}\n\nclass PathMappingNoAsteriskPattern implements PathMappingPattern {\n  constructor(private readonly value: string) {}\n  isApplicableTo(name: string): boolean {\n    return name === this.value;\n  }\n}\n\nclass PathMappingSingleAsteriskPattern implements PathMappingPattern {\n  constructor(\n    private readonly prefix: string,\n    private readonly suffix: string,\n  ) {}\n  isApplicableTo(name: string): boolean {\n    return name.startsWith(this.prefix) && name.endsWith(this.suffix);\n  }\n}\n\nconst PATH_MAPPING_ASTERISK_PATTERN = /^([^*]*)\\*([^*]*)$/; // matches any string with single asterisk '*'\nconst PATH_MAPPING_ASTERISK_PATTERN_PREFIX_IDX = 1;\nconst PATH_MAPPING_ASTERISK_PATTERN_SUFFIX_IDX = 2;\nfunction extractPathMappingPatterns(\n  parserServices: RequiredParserServices,\n): PathMappingPattern[] | 'matchAll' {\n  const compilerOptions = parserServices.program?.getCompilerOptions();\n  const paths = compilerOptions?.paths ?? [];\n  const pathMappingPatterns: PathMappingPattern[] = [];\n  for (const p in paths) {\n    if (p === '*') {\n      return 'matchAll';\n    } else {\n      const m = p.match(PATH_MAPPING_ASTERISK_PATTERN);\n      if (m) {\n        pathMappingPatterns.push(\n          new PathMappingSingleAsteriskPattern(\n            m[PATH_MAPPING_ASTERISK_PATTERN_PREFIX_IDX],\n            m[PATH_MAPPING_ASTERISK_PATTERN_SUFFIX_IDX],\n          ),\n        );\n      } else if (!p.includes('*')) {\n        pathMappingPatterns.push(new PathMappingNoAsteriskPattern(p));\n      } else {\n        // This case should not occur: `tsc` emits error if there is more than one asterisk\n      }\n    }\n  }\n  return pathMappingPatterns;\n}\n\nfunction getBaseUrl(parserServices: RequiredParserServices): string | undefined {\n  return parserServices.program?.getCompilerOptions().baseUrl;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2703/javascript\n\nimport { Rule } from 'eslint';\nimport { flatMap, globalsByLibraries } from '../helpers';\nimport estree from 'estree';\n\nconst excludedNames = new Set(flatMap(Object.values(globalsByLibraries), globals => globals));\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      explicitModifier:\n        'Add the \"let\", \"const\" or \"var\" keyword to this declaration of \"{{variable}}\" to make it explicit.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      'Program:exit'(node: estree.Node) {\n        const globalScope = context.sourceCode.getScope(node);\n        const alreadyReported: Set<string> = new Set();\n        globalScope.through\n          .filter(ref => ref.isWrite())\n          .forEach(ref => {\n            const name = ref.identifier.name;\n            if (!alreadyReported.has(name) && !excludedNames.has(name)) {\n              alreadyReported.add(name);\n              context.report({\n                messageId: 'explicitModifier',\n                data: {\n                  variable: name,\n                },\n                node: ref.identifier,\n              });\n            }\n          });\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4619/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isArray, isNumber, isRequiredParserServices } from '../helpers';\nimport { TSESTree } from '@typescript-eslint/utils';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      inMisuse: 'Use \"indexOf\" or \"includes\" (available from ES2016) instead.',\n      suggestIndexOf: 'Replace with \"indexOf\" method',\n      suggestIncludes: 'Replace with \"includes\" method',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n\n    function prototypeProperty(node: estree.Expression) {\n      const expr = node as TSESTree.Expression;\n      if (expr.type !== 'Literal' || typeof expr.value !== 'string') {\n        return false;\n      }\n\n      return ['indexOf', 'lastIndexOf', 'forEach', 'map', 'filter', 'every', 'some'].includes(\n        expr.value,\n      );\n    }\n\n    if (isRequiredParserServices(services)) {\n      return {\n        \"BinaryExpression[operator='in']\": (node: estree.Node) => {\n          const { left, right } = node as estree.BinaryExpression;\n          if (isArray(right, services) && !prototypeProperty(left) && !isNumber(left, services)) {\n            const leftText = context.sourceCode.getText(left);\n            const rightText = context.sourceCode.getText(right);\n            context.report({\n              messageId: 'inMisuse',\n              node,\n              suggest: [\n                {\n                  messageId: 'suggestIndexOf',\n                  fix: fixer => fixer.replaceText(node, `${rightText}.indexOf(${leftText}) > -1`),\n                },\n                {\n                  messageId: 'suggestIncludes',\n                  fix: fixer => fixer.replaceText(node, `${rightText}.includes(${leftText})`),\n                },\n              ],\n            });\n          }\n        },\n      };\n    }\n    return {};\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2970/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isIdentifier, isNumberLiteral } from '../helpers';\n\nconst assertionFunctions = [\n  'a',\n  'an',\n  'include',\n  'includes',\n  'contain',\n  'contains',\n  'equal',\n  'equals',\n  'eq',\n  'eql',\n  'eqls',\n  'above',\n  'gt',\n  'greaterThan',\n  'least',\n  'gte',\n  'below',\n  'lt',\n  'lessThan',\n  'most',\n  'lte',\n  'within',\n  'instanceof',\n  'instanceOf',\n  'property',\n  'ownPropertyDescriptor',\n  'haveOwnPropertyDescriptor',\n  'lengthOf',\n  'length',\n  'match',\n  'matches',\n  'string',\n  'key',\n  'keys',\n  'throw',\n  'throws',\n  'Throw',\n  'respondTo',\n  'respondsTo',\n  'satisfy',\n  'satisfies',\n  'closeTo',\n  'approximately',\n  'members',\n  'oneOf',\n  'change',\n  'changes',\n  'increase',\n  'increases',\n  'decrease',\n  'decreases',\n  'by',\n  'fail',\n];\n\nconst gettersOrModifiers = [\n  'to',\n  'be',\n  'been',\n  'is',\n  'that',\n  'which',\n  'and',\n  'has',\n  'have',\n  'with',\n  'at',\n  'of',\n  'same',\n  'but',\n  'does',\n  'still',\n\n  // Modifier functions\n  'not',\n  'deep',\n  'nested',\n  'own',\n  'ordered',\n  'any',\n  'all',\n  'itself',\n\n  'should',\n];\n\nexport const rule: Rule.RuleModule = {\n  create(context: Rule.RuleContext) {\n    return {\n      ExpressionStatement(node: estree.Node) {\n        const exprStatement = node as estree.ExpressionStatement;\n        if (exprStatement.expression.type === 'MemberExpression') {\n          const { property } = exprStatement.expression;\n          if (isTestAssertion(exprStatement.expression)) {\n            if (isIdentifier(property, ...assertionFunctions)) {\n              context.report({\n                node: property,\n                message: `Call this '${property.name}' assertion.`,\n              });\n            }\n            if (isIdentifier(property, ...gettersOrModifiers)) {\n              context.report({\n                node: property,\n                message: `Complete this assertion; '${property.name}' doesn't assert anything by itself.`,\n              });\n            }\n          }\n        }\n        if (isExpectCall(exprStatement.expression)) {\n          const { callee } = exprStatement.expression;\n          context.report({\n            node: callee,\n            message: `Complete this assertion; '${callee.name}' doesn't assert anything by itself.`,\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction isTestAssertion(node: estree.MemberExpression): boolean {\n  const { object, property } = node;\n  // Chai's BDD style where 'should' extends Object.prototype https://www.chaijs.com/guide/styles/\n  if (isIdentifier(object) && isIdentifier(property, 'should')) {\n    return true;\n  }\n  if (isExpectCall(object) || isIdentifier(object, 'assert', 'expect', 'should')) {\n    return true;\n  } else if (object.type === 'MemberExpression') {\n    return isTestAssertion(object);\n  } else if (object.type === 'CallExpression' && object.callee.type === 'MemberExpression') {\n    return isTestAssertion(object.callee);\n  }\n  return false;\n}\n\nfunction isExpectCall(\n  node: estree.Node,\n): node is estree.CallExpression & { callee: estree.Identifier } {\n  return (\n    node.type === 'CallExpression' &&\n    isIdentifier(node.callee, 'expect') &&\n    !isNumberLiteral(node.arguments[0])\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3801/javascript\n\nimport { AST, Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { getMainFunctionTokenLocation } from 'eslint-plugin-sonarjs/lib/src/utils/locations';\nimport { getParent, RuleContext, toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\ninterface FunctionContext {\n  codePath: Rule.CodePath;\n  containsReturnWithValue: boolean;\n  containsReturnWithoutValue: boolean;\n  containsImplicitReturn: boolean;\n  returnStatements: estree.ReturnStatement[];\n}\n\ninterface FunctionLikeDeclaration {\n  type: string;\n  id?: estree.Node | null;\n  returnType?: TSESTree.TSTypeAnnotation;\n}\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n\n  create(context: Rule.RuleContext) {\n    const sourceCode = context.sourceCode;\n    const functionContextStack: FunctionContext[] = [];\n    const checkOnFunctionExit = (node: estree.Node) =>\n      checkFunctionLikeDeclaration(\n        node as FunctionLikeDeclaration,\n        functionContextStack[functionContextStack.length - 1],\n      );\n\n    function checkFunctionLikeDeclaration(\n      node: FunctionLikeDeclaration,\n      functionContext?: FunctionContext,\n    ) {\n      if (\n        !functionContext ||\n        (!!node.returnType &&\n          declaredReturnTypeContainsVoidOrNeverTypes(node.returnType.typeAnnotation))\n      ) {\n        return;\n      }\n\n      checkFunctionForImplicitReturn(functionContext);\n\n      if (hasInconsistentReturns(functionContext)) {\n        const [secondaryLocationsHolder, secondaryLocationMessages] = getSecondaryLocations(\n          functionContext,\n          node as estree.Node,\n        );\n        const message = toEncodedMessage(\n          `Refactor this function to use \"return\" consistently.`,\n          secondaryLocationsHolder,\n          secondaryLocationMessages,\n        );\n\n        context.report({\n          message,\n          loc: getMainFunctionTokenLocation(\n            node as TSESTree.FunctionLike,\n            getParent(context, node as estree.Node) as TSESTree.Node,\n            context as unknown as RuleContext,\n          ),\n        });\n      }\n    }\n\n    function checkFunctionForImplicitReturn(functionContext: FunctionContext) {\n      // As this method is called at the exit point of a function definition, the current\n      // segments are the ones leading to the exit point at the end of the function. If they\n      // are reachable, it means there is an implicit return.\n      functionContext.containsImplicitReturn = functionContext.codePath.currentSegments.some(\n        segment => segment.reachable,\n      );\n    }\n\n    function getSecondaryLocations(\n      functionContext: FunctionContext,\n      node: estree.Node,\n    ): [Array<AST.Token | TSESTree.Node>, Array<string>] {\n      const secondaryLocationsHolder = functionContext.returnStatements.slice() as TSESTree.Node[];\n      const secondaryLocationMessages: string[] = functionContext.returnStatements.map(\n        returnStatement =>\n          returnStatement.argument ? 'Return with value' : 'Return without value',\n      );\n\n      if (functionContext.containsImplicitReturn) {\n        const closeCurlyBraceToken = sourceCode.getLastToken(node, token => token.value === '}');\n        if (!!closeCurlyBraceToken) {\n          secondaryLocationsHolder.push(closeCurlyBraceToken as TSESTree.Node);\n          secondaryLocationMessages.push('Implicit return without value');\n        }\n      }\n\n      return [secondaryLocationsHolder, secondaryLocationMessages];\n    }\n\n    return {\n      onCodePathStart(codePath: Rule.CodePath) {\n        functionContextStack.push({\n          codePath,\n          containsReturnWithValue: false,\n          containsReturnWithoutValue: false,\n          containsImplicitReturn: false,\n          returnStatements: [],\n        });\n      },\n      onCodePathEnd() {\n        functionContextStack.pop();\n      },\n\n      ReturnStatement(node: estree.Node) {\n        const currentContext = functionContextStack[functionContextStack.length - 1];\n        if (!!currentContext) {\n          const returnStatement = node as estree.ReturnStatement;\n          currentContext.containsReturnWithValue =\n            currentContext.containsReturnWithValue || !!returnStatement.argument;\n          currentContext.containsReturnWithoutValue =\n            currentContext.containsReturnWithoutValue || !returnStatement.argument;\n          currentContext.returnStatements.push(returnStatement);\n        }\n      },\n      'FunctionDeclaration:exit': checkOnFunctionExit,\n      'FunctionExpression:exit': checkOnFunctionExit,\n      'ArrowFunctionExpression:exit': checkOnFunctionExit,\n    };\n  },\n};\n\nfunction hasInconsistentReturns(functionContext: FunctionContext) {\n  return (\n    functionContext.containsReturnWithValue &&\n    (functionContext.containsReturnWithoutValue || functionContext.containsImplicitReturn)\n  );\n}\n\nfunction declaredReturnTypeContainsVoidOrNeverTypes(returnTypeNode: TSESTree.TypeNode): boolean {\n  return (\n    isVoidType(returnTypeNode) ||\n    (returnTypeNode.type === 'TSUnionType' &&\n      returnTypeNode.types.some(declaredReturnTypeContainsVoidOrNeverTypes))\n  );\n}\n\nfunction isVoidType(typeNode: TSESTree.TypeNode) {\n  return (\n    typeNode.type === 'TSUndefinedKeyword' ||\n    typeNode.type === 'TSVoidKeyword' ||\n    typeNode.type === 'TSNeverKeyword'\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3402/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport * as tsTypes from 'typescript';\nimport {\n  RequiredParserServices,\n  isRequiredParserServices,\n  getTypeFromTreeNode,\n  toEncodedMessage,\n  isStringLiteral,\n} from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nconst message = `Review this expression to be sure that the concatenation was intended.`;\nconst objectLikeTypes = new Set(['object', 'Object']);\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const services: RequiredParserServices = context.sourceCode.parserServices;\n\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n\n    const checker = services.program.getTypeChecker();\n\n    function isStringPlusNonString(type1: tsTypes.Type, type2: tsTypes.Type) {\n      if (isLiteralType(type1) || isLiteralType(type2)) {\n        return false;\n      }\n      const isObjectLike = objectLikeTypes.has(checker.typeToString(type2));\n      // @ts-ignore private API, see https://github.com/microsoft/TypeScript/issues/9879\n      return isStringType(type1) && !isObjectLike && !checker.isTypeAssignableTo(type1, type2);\n    }\n\n    function getOperatorLocation(left: estree.Node, right: estree.Node) {\n      return context.sourceCode\n        .getTokensBetween(left, right)\n        .find(token => token.value === '+' || token.value === '+=')!.loc;\n    }\n\n    function checkConcatenation(left: estree.Node, right: estree.Node) {\n      if (\n        isStringLiteral(left) ||\n        isStringLiteral(right) ||\n        isConcatenation(left) ||\n        isConcatenation(right)\n      ) {\n        return;\n      }\n\n      const leftType = getTypeFromTreeNode(left, services);\n      const rightType = getTypeFromTreeNode(right, services);\n      if (\n        isStringPlusNonString(leftType, rightType) ||\n        isStringPlusNonString(rightType, leftType)\n      ) {\n        context.report({\n          message: toEncodedMessage(\n            message,\n            [left, right],\n            [\n              `left operand has type ${checker.typeToString(leftType)}.`,\n              `right operand has type ${checker.typeToString(rightType)}.`,\n            ],\n          ),\n          loc: getOperatorLocation(left, right),\n        });\n      }\n    }\n\n    return {\n      'AssignmentExpression[operator=\"+=\"]'(node: estree.AssignmentExpression) {\n        checkConcatenation(node.left, node.right);\n      },\n      'BinaryExpression[operator=\"+\"]'(node: estree.BinaryExpression) {\n        checkConcatenation(node.left, node.right);\n      },\n    };\n  },\n};\n\nfunction isStringType(typ: tsTypes.Type) {\n  return (typ.getFlags() & tsTypes.TypeFlags.StringLike) !== 0;\n}\n\nfunction isLiteralType(type: tsTypes.Type): boolean {\n  if (type.isUnion()) {\n    return type.types.some(t => isLiteralType(t));\n  }\n  return type.isStringLiteral();\n}\n\nfunction isConcatenation(node: estree.Node) {\n  return node.type === 'BinaryExpression' && node.operator === '+';\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2189/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport { eslintRules } from '../core';\nimport * as estree from 'estree';\nimport { childrenOf } from '../../linter';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { isUndefined, interceptReport, mergeRules } from '../helpers';\n\nconst noUnmodifiedLoopEslint = eslintRules['no-unmodified-loop-condition'];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: { ...noUnmodifiedLoopEslint.meta!.messages },\n  },\n  create(context: Rule.RuleContext) {\n    /**\n     * Decorates ESLint `no-unmodified-loop-condition` to raise one issue per symbol.\n     */\n    const alreadyRaisedSymbols: Set<Scope.Variable> = new Set();\n    const ruleDecoration: Rule.RuleModule = interceptReport(\n      noUnmodifiedLoopEslint,\n      function (context: Rule.RuleContext, descriptor: Rule.ReportDescriptor) {\n        const node = (descriptor as any).node as estree.Node;\n\n        const symbol = context.getScope().references.find(v => v.identifier === node)?.resolved;\n        /** Ignoring symbols that have already been reported */\n        if (isUndefined(node) || (symbol && alreadyRaisedSymbols.has(symbol))) {\n          return;\n        }\n\n        /** Ignoring symbols called on or passed as arguments */\n        for (const reference of symbol?.references ?? []) {\n          const id = reference.identifier as TSESTree.Node;\n\n          if (\n            id.parent?.type === 'CallExpression' &&\n            id.parent.arguments.includes(id as TSESTree.CallExpressionArgument)\n          ) {\n            return;\n          }\n\n          if (\n            id.parent?.type === 'MemberExpression' &&\n            id.parent.parent?.type === 'CallExpression' &&\n            id.parent.object === id\n          ) {\n            return;\n          }\n        }\n\n        if (symbol) {\n          alreadyRaisedSymbols.add(symbol);\n        }\n\n        context.report(descriptor);\n      },\n    );\n\n    /**\n     * Extends ESLint `no-unmodified-loop-condition` to consider more corner cases.\n     */\n    const MESSAGE = \"Correct this loop's end condition to not be invariant.\";\n    const ruleExtension: Rule.RuleModule = {\n      create(context: Rule.RuleContext) {\n        return {\n          WhileStatement: checkWhileStatement,\n          DoWhileStatement: checkWhileStatement,\n          ForStatement: (node: estree.Node) => {\n            const { test, body } = node as estree.ForStatement;\n            if (!test || (test.type === 'Literal' && test.value === true)) {\n              const hasEndCondition = LoopVisitor.hasEndCondition(body, context);\n              if (!hasEndCondition) {\n                const firstToken = context.sourceCode.getFirstToken(node);\n                context.report({\n                  loc: firstToken!.loc,\n                  message: MESSAGE,\n                });\n              }\n            }\n          },\n        };\n\n        function checkWhileStatement(node: estree.Node) {\n          const whileStatement = node as estree.WhileStatement | estree.DoWhileStatement;\n          if (whileStatement.test.type === 'Literal' && whileStatement.test.value === true) {\n            const hasEndCondition = LoopVisitor.hasEndCondition(whileStatement.body, context);\n            if (!hasEndCondition) {\n              const firstToken = context.sourceCode.getFirstToken(node);\n              context.report({ loc: firstToken!.loc, message: MESSAGE });\n            }\n          }\n        }\n      },\n    };\n\n    const decorationListeners: Rule.RuleListener = ruleDecoration.create(context);\n    const extensionListeners: Rule.RuleListener = ruleExtension.create(context);\n\n    return mergeRules(decorationListeners, extensionListeners);\n  },\n};\n\nclass LoopVisitor {\n  hasEndCondition = false;\n\n  static hasEndCondition(node: estree.Node, context: Rule.RuleContext) {\n    const visitor = new LoopVisitor();\n    visitor.visit(node, context);\n    return visitor.hasEndCondition;\n  }\n\n  private visit(root: estree.Node, context: Rule.RuleContext) {\n    const visitNode = (node: estree.Node, isNestedLoop = false) => {\n      switch (node.type) {\n        case 'WhileStatement':\n        case 'DoWhileStatement':\n        case 'ForStatement':\n          isNestedLoop = true;\n          break;\n        case 'FunctionExpression':\n        case 'FunctionDeclaration':\n          // Don't consider nested functions\n          return;\n        case 'BreakStatement':\n          if (!isNestedLoop || !!node.label) {\n            this.hasEndCondition = true;\n          }\n          break;\n        case 'YieldExpression':\n        case 'ReturnStatement':\n        case 'ThrowStatement':\n          this.hasEndCondition = true;\n          return;\n      }\n      childrenOf(node, context.sourceCode.visitorKeys).forEach(child =>\n        visitNode(child, isNestedLoop),\n      );\n    };\n    visitNode(root);\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5604/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isIdentifier, isMemberExpression, getValueOfExpression } from '../helpers';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nconst permissions = ['geolocation', 'camera', 'microphone', 'notifications', 'persistent-storage'];\n\nexport type Options = [\n  {\n    permissions: Array<string>;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    messages: {\n      checkPermission: 'Make sure the use of the {{feature}} is necessary.',\n    },\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          permissions: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      'CallExpression[callee.type=\"MemberExpression\"]'(node: estree.Node) {\n        const call = node as estree.CallExpression;\n        const callee = call.callee as estree.MemberExpression;\n        if (\n          isNavigatorMemberExpression(callee, 'permissions', 'query') &&\n          call.arguments.length > 0\n        ) {\n          checkPermissions(context, call);\n          return;\n        }\n        if (\n          (context.options as Options)[0].permissions.includes('geolocation') &&\n          isNavigatorMemberExpression(callee, 'geolocation', 'watchPosition', 'getCurrentPosition')\n        ) {\n          context.report({\n            messageId: 'checkPermission',\n            data: {\n              feature: 'geolocation',\n            },\n            node: callee,\n          });\n          return;\n        }\n        if (\n          isNavigatorMemberExpression(callee, 'mediaDevices', 'getUserMedia') &&\n          call.arguments.length > 0\n        ) {\n          const firstArg = getValueOfExpression(context, call.arguments[0], 'ObjectExpression');\n          checkForCameraAndMicrophonePermissions(context, callee, firstArg);\n          return;\n        }\n        if (\n          (context.options as Options)[0].permissions.includes('notifications') &&\n          isMemberExpression(callee, 'Notification', 'requestPermission')\n        ) {\n          context.report({\n            messageId: 'checkPermission',\n            data: {\n              feature: 'notifications',\n            },\n            node: callee,\n          });\n          return;\n        }\n        if (\n          (context.options as Options)[0].permissions.includes('persistent-storage') &&\n          isMemberExpression(callee.object, 'navigator', 'storage')\n        ) {\n          context.report({\n            messageId: 'checkPermission',\n            data: {\n              feature: 'persistent-storage',\n            },\n            node: callee,\n          });\n        }\n      },\n      NewExpression(node: estree.Node) {\n        const { callee } = node as estree.NewExpression;\n        if (\n          (context.options as Options)[0].permissions.includes('notifications') &&\n          isIdentifier(callee, 'Notification')\n        ) {\n          context.report({\n            messageId: 'checkPermission',\n            data: {\n              feature: 'notifications',\n            },\n            node: callee,\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction checkForCameraAndMicrophonePermissions(\n  context: Rule.RuleContext,\n  callee: estree.MemberExpression,\n  firstArg: estree.ObjectExpression | undefined,\n) {\n  if (!firstArg) {\n    return;\n  }\n  const shouldCheckAudio = (context.options as Options)[0].permissions.includes('microphone');\n  const shouldCheckVideo = (context.options as Options)[0].permissions.includes('camera');\n  if (!shouldCheckAudio && !shouldCheckVideo) {\n    return;\n  }\n  const perms = [];\n  for (const prop of firstArg.properties) {\n    if (prop.type === 'Property') {\n      const { value, key } = prop;\n      if (isIdentifier(key, 'audio') && shouldCheckAudio && isOtherThanFalse(context, value)) {\n        perms.push('microphone');\n      } else if (\n        isIdentifier(key, 'video') &&\n        shouldCheckVideo &&\n        isOtherThanFalse(context, value)\n      ) {\n        perms.push('camera');\n      }\n    }\n  }\n  if (perms.length > 0) {\n    context.report({\n      messageId: 'checkPermission',\n      data: {\n        feature: perms.join(' and '),\n      },\n      node: callee,\n    });\n  }\n}\n\nfunction isOtherThanFalse(context: Rule.RuleContext, value: estree.Node) {\n  const exprValue = getValueOfExpression(context, value, 'Literal');\n  if (exprValue && exprValue.value === false) {\n    return false;\n  }\n  return true;\n}\n\nfunction checkPermissions(context: Rule.RuleContext, call: estree.CallExpression) {\n  const firstArg = getValueOfExpression(context, call.arguments[0], 'ObjectExpression');\n  if (firstArg?.type === 'ObjectExpression') {\n    const nameProp = firstArg.properties.find(prop => hasNamePropertyWithPermission(prop, context));\n    if (nameProp) {\n      const { value } = (nameProp as estree.Property).value as estree.Literal;\n      context.report({\n        messageId: 'checkPermission',\n        data: {\n          feature: String(value),\n        },\n        node: nameProp,\n      });\n    }\n  }\n}\n\nfunction isNavigatorMemberExpression(\n  { object, property }: estree.MemberExpression,\n  firstProperty: string,\n  ...secondProperty: string[]\n) {\n  return (\n    isMemberExpression(object, 'navigator', firstProperty) &&\n    isIdentifier(property, ...secondProperty)\n  );\n}\n\nfunction hasNamePropertyWithPermission(\n  prop: estree.Property | estree.SpreadElement,\n  context: Rule.RuleContext,\n) {\n  if (prop.type === 'Property' && isIdentifier(prop.key, 'name')) {\n    const value = getValueOfExpression(context, prop.value, 'Literal');\n    return (\n      value &&\n      typeof value.value === 'string' &&\n      permissions.includes(value.value) &&\n      (context.options as Options)[0].permissions.includes(value.value)\n    );\n  }\n  return false;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4123/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport * as ts from 'typescript';\nimport { isRequiredParserServices, getTypeFromTreeNode, getSignatureFromCallee } from '../helpers';\nimport { ParserServicesWithTypeInformation } from '@typescript-eslint/utils';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      refactorAwait: \"Refactor this redundant 'await' on a non-promise.\",\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (isRequiredParserServices(services)) {\n      return {\n        AwaitExpression: (node: estree.AwaitExpression) => {\n          const awaitedType = getTypeFromTreeNode(node.argument, services);\n          if (\n            !isException(node, services) &&\n            !isThenable(awaitedType) &&\n            !isAny(awaitedType) &&\n            !isUnknown(awaitedType) &&\n            !isUnion(awaitedType)\n          ) {\n            context.report({\n              messageId: 'refactorAwait',\n              node,\n            });\n          }\n        },\n      };\n    }\n    return {};\n  },\n};\n\n/**\n * If the awaited expression is a call expression, check if it is a call to a function with\n * a JSDoc containing a return tag.\n */\nfunction isException(node: estree.AwaitExpression, services: ParserServicesWithTypeInformation) {\n  if (node.argument.type !== 'CallExpression') {\n    return false;\n  }\n  const signature = getSignatureFromCallee(node.argument, services);\n  return signature?.declaration && hasJsDocReturn(signature.declaration);\n\n  function hasJsDocReturn(declaration: ts.Declaration & { jsDoc?: ts.JSDoc[] }) {\n    const RETURN_TAGS = ['return', 'returns'];\n    if (!declaration.jsDoc) {\n      return false;\n    }\n    for (const jsDoc of declaration.jsDoc) {\n      if (jsDoc.tags?.some(tag => RETURN_TAGS.includes(tag.tagName.escapedText.toString()))) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction isThenable(type: ts.Type) {\n  const thenProperty = type.getProperty('then');\n  return thenProperty?.declarations?.some(\n    d =>\n      d.kind === ts.SyntaxKind.MethodSignature ||\n      d.kind === ts.SyntaxKind.MethodDeclaration ||\n      d.kind === ts.SyntaxKind.PropertyDeclaration,\n  );\n}\n\nfunction isAny(type: ts.Type) {\n  return Boolean(type.flags & ts.TypeFlags.Any);\n}\n\nfunction isUnknown(type: ts.Type) {\n  return Boolean(type.flags & ts.TypeFlags.Unknown);\n}\n\nfunction isUnion(type: ts.Type) {\n  return Boolean(type.flags & ts.TypeFlags.Union);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3516/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { getMainFunctionTokenLocation } from 'eslint-plugin-sonarjs/lib/src/utils/locations';\nimport {\n  findFirstMatchingAncestor,\n  FUNCTION_NODES,\n  getParent,\n  isElementWrite,\n  RuleContext,\n  toEncodedMessage,\n} from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\nimport CodePathSegment = Rule.CodePathSegment;\n\ninterface FunctionContext {\n  codePath: Rule.CodePath;\n  containsReturnWithoutValue: boolean;\n  returnStatements: estree.ReturnStatement[];\n}\n\ninterface SingleWriteVariable {\n  variable: Scope.Variable;\n  initExpression?: estree.Expression | null;\n}\n\ntype LiteralValue = number | RegExp | string | null | boolean | bigint;\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n\n  create(context: Rule.RuleContext) {\n    const functionContextStack: FunctionContext[] = [];\n    const codePathSegments: Rule.CodePathSegment[][] = [];\n    let currentCodePathSegments: Rule.CodePathSegment[] = [];\n\n    const checkOnFunctionExit = (node: estree.Node) =>\n      checkInvariantReturnStatements(node, functionContextStack[functionContextStack.length - 1]);\n\n    function checkInvariantReturnStatements(node: estree.Node, functionContext?: FunctionContext) {\n      if (!functionContext || hasDifferentReturnTypes(functionContext, currentCodePathSegments)) {\n        return;\n      }\n\n      const returnedValues = functionContext.returnStatements.map(\n        returnStatement => returnStatement.argument as estree.Node,\n      );\n      if (areAllSameValue(returnedValues, context.sourceCode.getScope(node))) {\n        const message = toEncodedMessage(\n          `Refactor this function to not always return the same value.`,\n          returnedValues as TSESTree.Node[],\n          returnedValues.map(_ => 'Returned value.'),\n          returnedValues.length,\n        );\n\n        context.report({\n          message,\n          loc: getMainFunctionTokenLocation(\n            node as TSESTree.FunctionLike,\n            getParent(context, node) as TSESTree.Node,\n            context as unknown as RuleContext,\n          ),\n        });\n      }\n    }\n\n    return {\n      onCodePathStart(codePath: Rule.CodePath) {\n        functionContextStack.push({\n          codePath,\n          containsReturnWithoutValue: false,\n          returnStatements: [],\n        });\n        codePathSegments.push(currentCodePathSegments);\n        currentCodePathSegments = [];\n      },\n      onCodePathEnd() {\n        functionContextStack.pop();\n        currentCodePathSegments = codePathSegments.pop() || [];\n      },\n      onCodePathSegmentStart: (segment: CodePathSegment) => {\n        currentCodePathSegments.push(segment);\n      },\n      onCodePathSegmentEnd() {\n        currentCodePathSegments.pop();\n      },\n      ReturnStatement(node: estree.Node) {\n        const currentContext = functionContextStack[functionContextStack.length - 1];\n        if (currentContext) {\n          const returnStatement = node as estree.ReturnStatement;\n          currentContext.containsReturnWithoutValue =\n            currentContext.containsReturnWithoutValue || !returnStatement.argument;\n          currentContext.returnStatements.push(returnStatement);\n        }\n      },\n      'FunctionDeclaration:exit': checkOnFunctionExit,\n      'FunctionExpression:exit': checkOnFunctionExit,\n      'ArrowFunctionExpression:exit': checkOnFunctionExit,\n    };\n  },\n};\n\nfunction hasDifferentReturnTypes(\n  functionContext: FunctionContext,\n  currentSegments: Rule.CodePathSegment[],\n) {\n  // As this method is called at the exit point of a function definition, the current\n  // segments are the ones leading to the exit point at the end of the function. If they\n  // are reachable, it means there is an implicit return.\n  const hasImplicitReturn = currentSegments.some(segment => segment.reachable);\n\n  return (\n    hasImplicitReturn ||\n    functionContext.containsReturnWithoutValue ||\n    functionContext.returnStatements.length <= 1 ||\n    functionContext.codePath.thrownSegments.length > 0\n  );\n}\n\nfunction areAllSameValue(returnedValues: estree.Node[], scope: Scope.Scope) {\n  const firstReturnedValue = returnedValues[0];\n  const firstValue = getLiteralValue(firstReturnedValue, scope);\n  if (firstValue !== undefined) {\n    return returnedValues\n      .slice(1)\n      .every(returnedValue => getLiteralValue(returnedValue, scope) === firstValue);\n  } else if (firstReturnedValue.type === 'Identifier') {\n    const singleWriteVariable = getSingleWriteDefinition(firstReturnedValue.name, scope);\n    if (singleWriteVariable) {\n      const readReferenceIdentifiers = singleWriteVariable.variable.references\n        .slice(1)\n        .map(ref => ref.identifier);\n      return returnedValues.every(returnedValue =>\n        readReferenceIdentifiers.includes(returnedValue as estree.Identifier),\n      );\n    }\n  }\n  return false;\n}\n\nfunction getSingleWriteDefinition(\n  variableName: string,\n  scope: Scope.Scope,\n): SingleWriteVariable | null {\n  const variable = scope.set.get(variableName);\n  if (variable) {\n    const references = variable.references.slice(1);\n    if (!references.some(ref => ref.isWrite() || isPossibleObjectUpdate(ref))) {\n      let initExpression = null;\n      if (variable.defs.length === 1 && variable.defs[0].type === 'Variable') {\n        initExpression = variable.defs[0].node.init;\n      }\n      return { variable, initExpression };\n    }\n  }\n  return null;\n}\n\nfunction isPossibleObjectUpdate(ref: Scope.Reference) {\n  const expressionStatement = findFirstMatchingAncestor(\n    ref.identifier as TSESTree.Node,\n    n => n.type === 'ExpressionStatement' || FUNCTION_NODES.includes(n.type),\n  ) as estree.Node | undefined;\n\n  // To avoid FP, we consider method calls as write operations, since we do not know whether they will\n  // update the object state or not.\n  return (\n    expressionStatement &&\n    expressionStatement.type === 'ExpressionStatement' &&\n    (isElementWrite(expressionStatement, ref) ||\n      expressionStatement.expression.type === 'CallExpression')\n  );\n}\n\nfunction getLiteralValue(returnedValue: estree.Node, scope: Scope.Scope): LiteralValue | undefined {\n  if (returnedValue.type === 'Literal') {\n    return returnedValue.value;\n  } else if (returnedValue.type === 'UnaryExpression') {\n    const innerReturnedValue = getLiteralValue(returnedValue.argument, scope);\n    return innerReturnedValue !== undefined\n      ? evaluateUnaryLiteralExpression(returnedValue.operator, innerReturnedValue)\n      : undefined;\n  } else if (returnedValue.type === 'Identifier') {\n    const singleWriteVariable = getSingleWriteDefinition(returnedValue.name, scope);\n    if (singleWriteVariable?.initExpression) {\n      return getLiteralValue(singleWriteVariable.initExpression, scope);\n    }\n  }\n  return undefined;\n}\n\nfunction evaluateUnaryLiteralExpression(operator: string, innerReturnedValue: LiteralValue) {\n  switch (operator) {\n    case '-':\n      return -Number(innerReturnedValue);\n    case '+':\n      return Number(innerReturnedValue);\n    case '~':\n      return ~Number(innerReturnedValue);\n    case '!':\n      return !Boolean(innerReturnedValue);\n    case 'typeof':\n      return typeof innerReturnedValue;\n    default:\n      return undefined;\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5759/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  getValueOfExpression,\n  toEncodedMessage,\n  getFullyQualifiedName,\n  getProperty,\n} from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      CallExpression(node: estree.Node) {\n        const call = node as estree.CallExpression;\n        const { callee, arguments: args } = call;\n        if (isSensitiveFQN(context, call) && args.length > 0) {\n          const xfwdProp = getProperty(args[0], 'xfwd', context);\n          if (!xfwdProp) {\n            return;\n          }\n          const xfwdValue = getValueOfExpression(context, xfwdProp.value, 'Literal');\n          if (xfwdValue?.value === true) {\n            context.report({\n              node: callee,\n              message: toEncodedMessage('Make sure forwarding client IP address is safe here.', [\n                xfwdProp,\n              ]),\n            });\n          }\n        }\n      },\n    };\n  },\n};\n\nfunction isSensitiveFQN(context: Rule.RuleContext, call: estree.CallExpression) {\n  const fqn = getFullyQualifiedName(context, call);\n  return (\n    fqn &&\n    ['http-proxy.createProxyServer', 'http-proxy-middleware.createProxyMiddleware'].includes(fqn)\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1119/javascript\n\nimport { Rule } from 'eslint';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      removeLabel: 'Refactor the code to remove this label and the need for it.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      LabeledStatement(node) {\n        const sourceCode = context.sourceCode;\n        context.report({\n          messageId: 'removeLabel',\n          loc: sourceCode.getFirstToken(node)!.loc,\n        });\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { type Rule } from 'eslint';\nimport { type Node } from 'estree';\n\nconst NODES = new Set<string>([\n  TSESTree.AST_NODE_TYPES.ArrayExpression,\n  TSESTree.AST_NODE_TYPES.ClassExpression,\n  TSESTree.AST_NODE_TYPES.ObjectExpression,\n  TSESTree.AST_NODE_TYPES.Literal,\n  TSESTree.AST_NODE_TYPES.TemplateLiteral,\n]);\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      asFunction: 'Literal should not be used as function.',\n      asTagFunction: 'Literal should not be used as tag function.',\n    },\n  },\n\n  create(context) {\n    const processNode = (node: Node, messageId: string): void => {\n      if (NODES.has(node.type)) {\n        context.report({\n          node,\n          messageId,\n        });\n      }\n    };\n\n    return {\n      CallExpression(node) {\n        processNode(node.callee, 'asFunction');\n      },\n      TaggedTemplateExpression(node) {\n        processNode(node.tag, 'asTagFunction');\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6660/javascript\n\nimport { Rule } from 'eslint';\nimport { interceptReport } from '../helpers';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, (context, reportDescriptor) => {\n    if ('node' in reportDescriptor && 'messageId' in reportDescriptor) {\n      const { node, messageId, ...rest } = reportDescriptor;\n\n      if (node.type === 'IfStatement' && node.loc && messageId === 'unexpectedLonelyIf') {\n        const { start } = node.loc;\n\n        context.report({\n          message: \"'If' statement should not be the only statement in 'else' block\",\n          loc: {\n            start,\n            end: { line: start.line, column: start.column + 2 },\n          },\n          ...rest,\n        });\n      }\n    }\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { eslintRules } from '../core';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(eslintRules['no-lonely-if']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5734/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { Express, getFullyQualifiedName, getPropertyWithValue } from '../helpers';\n\nconst HELMET = 'helmet';\nconst NO_SNIFF = 'noSniff';\n\nexport const rule: Rule.RuleModule = Express.SensitiveMiddlewarePropertyRule(\n  findFalseNoSniffPropertyFromHelmet,\n  `Make sure allowing browsers to sniff MIME types is safe here.`,\n);\n\n/**\n * Looks for property `noSniff: false` in node looking\n * somewhat similar to `helmet(<options>?)`, and returns it.\n */\nfunction findFalseNoSniffPropertyFromHelmet(\n  context: Rule.RuleContext,\n  node: estree.CallExpression,\n): estree.Property[] {\n  let sensitive: estree.Property | undefined;\n  const { callee, arguments: args } = node;\n  if (\n    getFullyQualifiedName(context, callee) === HELMET &&\n    args.length === 1 &&\n    args[0].type === 'ObjectExpression'\n  ) {\n    sensitive = getPropertyWithValue(context, args[0], NO_SNIFF, false);\n  }\n  return sensitive ? [sensitive] : [];\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4043/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport * as ts from 'typescript';\nimport {\n  isArray,\n  sortLike,\n  isRequiredParserServices,\n  RequiredParserServices,\n  getSymbolAtLocation,\n  localAncestorsChain,\n} from '../helpers';\n\nconst arrayMutatingMethods = ['reverse', \"'reverse'\", '\"reverse\"', ...sortLike];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      moveMethod:\n        'Move this array \"{{method}}\" operation to a separate statement or replace it with \"{{suggestedMethod}}\".',\n      suggestMethod: 'Replace with \"{{suggestedMethod}}\" method',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n    return {\n      CallExpression(node: estree.CallExpression) {\n        const { callee } = node;\n        if (callee.type === 'MemberExpression') {\n          const propertyText = context.sourceCode.getText(callee.property);\n          if (isArrayMutatingCall(callee, services, propertyText)) {\n            const mutatedArray = callee.object;\n\n            if (\n              isIdentifierOrPropertyAccessExpression(mutatedArray, services) &&\n              !isInSelfAssignment(mutatedArray, node) &&\n              isForbiddenOperation(node)\n            ) {\n              const method = formatMethod(propertyText);\n              const suggestedMethod = method === 'sort' ? 'toSorted' : 'toReversed';\n              context.report({\n                messageId: 'moveMethod',\n                data: {\n                  method,\n                  suggestedMethod,\n                },\n                node,\n                suggest: [\n                  {\n                    messageId: 'suggestMethod',\n                    data: {\n                      suggestedMethod,\n                    },\n                    fix: fixer => {\n                      const fixedPropertyText = propertyText.replace(method, suggestedMethod);\n                      return fixer.replaceText(callee.property, fixedPropertyText);\n                    },\n                  },\n                ],\n              });\n            }\n          }\n        }\n      },\n    };\n  },\n};\n\nfunction formatMethod(mutatingMethod: string) {\n  if (mutatingMethod.startsWith('\"') || mutatingMethod.startsWith(\"'\")) {\n    return mutatingMethod.substring(1, mutatingMethod.length - 1);\n  } else {\n    return mutatingMethod;\n  }\n}\n\nfunction isArrayMutatingCall(\n  memberExpression: estree.MemberExpression,\n  services: RequiredParserServices,\n  propertyText: string,\n) {\n  return arrayMutatingMethods.includes(propertyText) && isArray(memberExpression.object, services);\n}\n\nfunction isIdentifierOrPropertyAccessExpression(\n  node: estree.Node,\n  services: RequiredParserServices,\n): boolean {\n  return (\n    node.type === 'Identifier' ||\n    (node.type === 'MemberExpression' && !isGetAccessor(node.property, services))\n  );\n}\n\nfunction isGetAccessor(node: estree.Node, services: RequiredParserServices): boolean {\n  const symbol = getSymbolAtLocation(node, services);\n  const declarations = symbol?.declarations;\n  return declarations?.length === 1 && declarations[0].kind === ts.SyntaxKind.GetAccessor;\n}\n\nfunction isInSelfAssignment(mutatedArray: estree.Node, node?: estree.Node): boolean {\n  const parent = (node as TSESTree.Node).parent;\n  return (\n    // check assignment\n    parent !== undefined &&\n    parent.type === 'AssignmentExpression' &&\n    parent.operator === '=' &&\n    parent.left.type === 'Identifier' &&\n    mutatedArray.type === 'Identifier' &&\n    parent.left.name === mutatedArray.name\n  );\n}\n\nfunction isForbiddenOperation(node: estree.Node) {\n  return !isStandaloneExpression(node) && !isReturnedExpression(node);\n}\n\nfunction isStandaloneExpression(node: estree.Node) {\n  const ancestors = localAncestorsChain(node as TSESTree.Node);\n  const returnIdx = ancestors.findIndex(ancestor => ancestor.type === 'ExpressionStatement');\n  return (\n    returnIdx > -1 &&\n    ancestors\n      .slice(0, returnIdx)\n      .every(ancestor => ['ChainExpression', 'LogicalExpression'].includes(ancestor.type))\n  );\n}\n\nfunction isReturnedExpression(node: estree.Node) {\n  const ancestors = localAncestorsChain(node as TSESTree.Node);\n  const returnIdx = ancestors.findIndex(ancestor => ancestor.type === 'ReturnStatement');\n  return (\n    returnIdx > -1 &&\n    ancestors\n      .slice(0, returnIdx)\n      .every(ancestor =>\n        ['ArrayExpression', 'ObjectExpression', 'ConditionalExpression', 'SpreadElement'].includes(\n          ancestor.type,\n        ),\n      )\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6544/javascript\n\nimport { Rule } from 'eslint';\nimport { tsEslintRules } from '../typescript-eslint';\nimport { eslintRules } from '../core';\nimport { FUNCTION_NODES, RuleContext, interceptReport, mergeRules } from '../helpers';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { getMainFunctionTokenLocation } from 'eslint-plugin-sonarjs/lib/src/utils/locations';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\n/**\n * We keep a single occurence of issues raised by both rules, discarding the ones raised by 'no-async-promise-executor'\n * The current logic relies on the fact that the listener of 'no-misused-promises' runs first because\n * it is alphabetically \"smaller\", which is how we set them up in mergeRules.\n */\n\n/**\n * start offsets of nodes that raised issues in typescript-eslint's no-misused-promises\n */\nconst flaggedNodeStarts = new Map();\n\nconst noMisusedPromisesRule = tsEslintRules['no-misused-promises'];\nconst decoratedNoMisusedPromisesRule = interceptReport(\n  noMisusedPromisesRule,\n  (context, descriptor) => {\n    if ('node' in descriptor) {\n      const node = descriptor.node as TSESTree.Node;\n      const start = node.range[0];\n      if (!flaggedNodeStarts.get(start)) {\n        flaggedNodeStarts.set(start, true);\n        if (FUNCTION_NODES.includes(node.type)) {\n          const loc = getMainFunctionTokenLocation(\n            node as TSESTree.FunctionLike,\n            node.parent,\n            context as unknown as RuleContext,\n          );\n          context.report({ ...descriptor, loc });\n        } else {\n          context.report(descriptor);\n        }\n      }\n    }\n  },\n);\n\nconst noAsyncPromiseExecutorRule = eslintRules['no-async-promise-executor'];\nconst decoratedNoAsyncPromiseExecutorRule = interceptReport(\n  noAsyncPromiseExecutorRule,\n  (context, descriptor) => {\n    if ('node' in descriptor) {\n      const start = (descriptor.node as TSESTree.Node).range[0];\n      if (!flaggedNodeStarts.get(start)) {\n        context.report(descriptor);\n      }\n    }\n  },\n);\n\nexport const rule: RuleModule = {\n  meta: {\n    messages: {\n      ...decoratedNoMisusedPromisesRule.meta!.messages,\n      ...decoratedNoAsyncPromiseExecutorRule.meta!.messages,\n    },\n    hasSuggestions: true,\n    schema: [\n      {\n        type: 'object',\n        properties: {},\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      'Program:exit': () => {\n        flaggedNodeStarts.clear();\n      },\n      ...mergeRules(\n        decoratedNoAsyncPromiseExecutorRule.create(context),\n        decoratedNoMisusedPromisesRule.create(context),\n      ),\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5730/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { Express, getFullyQualifiedName, getProperty } from '../helpers';\n\nconst HELMET = 'helmet';\nconst HELMET_CSP = 'helmet-csp';\nconst DIRECTIVES = 'directives';\nconst CONTENT_SECURITY_POLICY = 'contentSecurityPolicy';\nconst BLOCK_ALL_MIXED_CONTENT_CAMEL = 'blockAllMixedContent';\nconst BLOCK_ALL_MIXED_CONTENT_HYPHEN = 'block-all-mixed-content';\n\nexport const rule: Rule.RuleModule = Express.SensitiveMiddlewarePropertyRule(\n  findDirectivesWithMissingMixedContentPropertyFromHelmet,\n  `Make sure allowing mixed-content is safe here.`,\n);\n\nfunction findDirectivesWithMissingMixedContentPropertyFromHelmet(\n  context: Rule.RuleContext,\n  node: estree.CallExpression,\n): estree.Property[] {\n  let sensitive: estree.Property | undefined;\n  const { arguments: args } = node;\n  if (args.length === 1) {\n    const [options] = args;\n    const maybeDirectives = getProperty(options, DIRECTIVES, context);\n    if (\n      maybeDirectives &&\n      isMissingMixedContentProperty(maybeDirectives, context) &&\n      isValidHelmetModuleCall(context, node)\n    ) {\n      sensitive = maybeDirectives;\n    }\n  }\n  return sensitive ? [sensitive] : [];\n}\n\nfunction isValidHelmetModuleCall(context: Rule.RuleContext, callExpr: estree.CallExpression) {\n  const fqn = getFullyQualifiedName(context, callExpr);\n  return fqn === `${HELMET}.${CONTENT_SECURITY_POLICY}` || fqn === HELMET_CSP;\n}\n\nfunction isMissingMixedContentProperty(\n  directives: estree.Property,\n  context: Rule.RuleContext,\n): boolean {\n  return !(\n    Boolean(getProperty(directives.value, BLOCK_ALL_MIXED_CONTENT_CAMEL, context)) ||\n    Boolean(getProperty(directives.value, BLOCK_ALL_MIXED_CONTENT_HYPHEN, context))\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1121/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getParent } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      extractAssignment: 'Extract the assignment of \"{{symbol}}\" from this expression.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    function isAssignmentStatement(parent: estree.Node) {\n      return parent.type === 'ExpressionStatement';\n    }\n\n    function isEnclosingChain(parent: estree.Node) {\n      return parent.type === 'AssignmentExpression';\n    }\n\n    function isEnclosingRelation(parent: estree.Node) {\n      return (\n        parent.type === 'BinaryExpression' &&\n        ['==', '!=', '===', '!==', '<', '<=', '>', '>='].includes(parent.operator)\n      );\n    }\n\n    function isEnclosingSequence(parent: estree.Node) {\n      return parent.type === 'SequenceExpression';\n    }\n\n    function isEnclosingDeclarator(parent: estree.Node) {\n      return parent.type === 'VariableDeclarator';\n    }\n\n    function isLambdaBody(parent: estree.Node, expr: estree.AssignmentExpression) {\n      return parent.type === 'ArrowFunctionExpression' && parent.body === expr;\n    }\n\n    function isConditionalAssignment(parent: estree.Node, expr: estree.AssignmentExpression) {\n      return parent.type === 'LogicalExpression' && parent.right === expr;\n    }\n\n    function isWhileCondition(parent: estree.Node, expr: estree.AssignmentExpression) {\n      return (\n        (parent.type === 'DoWhileStatement' || parent.type === 'WhileStatement') &&\n        parent.test === expr\n      );\n    }\n\n    function isForInitOrUpdate(parent: estree.Node, expr: estree.AssignmentExpression) {\n      return parent.type === 'ForStatement' && (parent.init === expr || parent.update === expr);\n    }\n\n    return {\n      AssignmentExpression: (node: estree.Node) => {\n        const assignment = node as estree.AssignmentExpression;\n        const parent = getParent(context, node);\n        if (\n          parent &&\n          !isAssignmentStatement(parent) &&\n          !isEnclosingChain(parent) &&\n          !isEnclosingRelation(parent) &&\n          !isEnclosingSequence(parent) &&\n          !isEnclosingDeclarator(parent) &&\n          !isLambdaBody(parent, assignment) &&\n          !isConditionalAssignment(parent, assignment) &&\n          !isWhileCondition(parent, assignment) &&\n          !isForInitOrUpdate(parent, assignment)\n        ) {\n          raiseIssue(assignment, context);\n        }\n      },\n    };\n  },\n};\n\nfunction raiseIssue(node: estree.AssignmentExpression, context: Rule.RuleContext) {\n  const sourceCode = context.sourceCode;\n  const operator = sourceCode.getFirstTokenBetween(\n    node.left,\n    node.right,\n    token => token.value === node.operator,\n  );\n  const text = sourceCode.getText(node.left);\n  context.report({\n    messageId: 'extractAssignment',\n    data: {\n      symbol: text,\n    },\n    loc: operator!.loc,\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3358/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      extractTernary: 'Extract this nested ternary operation into an independent statement.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      'ConditionalExpression ConditionalExpression': (node: estree.Node) => {\n        if (!isNestingBroken(context.sourceCode.getAncestors(node))) {\n          context.report({\n            messageId: 'extractTernary',\n            node,\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction isNestingBroken(ancestors: estree.Node[]) {\n  let parent = ancestors.pop()!;\n  while (parent.type !== 'ConditionalExpression') {\n    if (breaksNesting(parent)) {\n      return true;\n    }\n    parent = ancestors.pop()!;\n  }\n  return false;\n}\n\nfunction breaksNesting(node: estree.Node) {\n  return [\n    'ArrayExpression',\n    'ObjectExpression',\n    'FunctionExpression',\n    'ArrowFunctionExpression',\n    'JSXExpressionContainer',\n  ].includes(node.type);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2004/javascript\n\nimport * as estree from 'estree';\nimport { Rule } from 'eslint';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { getMainFunctionTokenLocation } from 'eslint-plugin-sonarjs/lib/src/utils/locations';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\nimport { RuleContext, toEncodedMessage } from '../helpers';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nconst DEFAULT_THRESHOLD = 4;\n\nexport type Options = [\n  {\n    threshold: number;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          threshold: {\n            type: 'integer',\n          },\n        },\n      },\n      {\n        type: 'string',\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const max = (context.options as Options)[0]?.threshold || DEFAULT_THRESHOLD;\n    const nestedStack: TSESTree.FunctionLike[] = [];\n    return {\n      ':function'(node: estree.Node) {\n        const fn = node as TSESTree.FunctionLike;\n        nestedStack.push(fn);\n        if (nestedStack.length === max + 1) {\n          const secondaries = nestedStack.slice(0, -1);\n          context.report({\n            loc: getMainFunctionTokenLocation(fn, fn.parent, context as unknown as RuleContext),\n            message: toEncodedMessage(\n              `Refactor this code to not nest functions more than ${max} levels deep.`,\n              secondaries.map(n => ({\n                loc: getMainFunctionTokenLocation(n, n.parent, context as unknown as RuleContext),\n              })),\n              secondaries.map(_ => 'Nesting +1'),\n            ),\n          });\n        }\n      },\n      ':function:exit'() {\n        nestedStack.pop();\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S881/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      extractOperation: 'Extract this {{incrementType}} operation into a dedicated statement.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    function reportUpdateExpression(node: estree.UpdateExpression) {\n      context.report({\n        messageId: 'extractOperation',\n        data: {\n          incrementType: node.operator === '++' ? 'increment' : 'decrement',\n        },\n        node,\n      });\n    }\n\n    return {\n      UpdateExpression(node: estree.Node) {\n        if (!isIgnored(node, context.sourceCode.getAncestors(node))) {\n          reportUpdateExpression(node as estree.UpdateExpression);\n        }\n      },\n    };\n  },\n};\n\nfunction isIgnored(node: estree.Node, ancestors: estree.Node[]): boolean {\n  const firstAncestor = ancestors.pop();\n\n  if (firstAncestor) {\n    switch (firstAncestor.type) {\n      case 'ExpressionStatement':\n        return true;\n      case 'ForStatement':\n        return firstAncestor.update === node;\n      case 'SequenceExpression': {\n        const secondAncestor = ancestors.pop();\n        return (\n          secondAncestor !== undefined &&\n          secondAncestor.type === 'ForStatement' &&\n          secondAncestor.update === firstAncestor\n        );\n      }\n    }\n  }\n  return false;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4036/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isStringLiteral, getValueOfExpression, getFullyQualifiedName } from '../helpers';\n\nconst SENSITIVE_METHODS = ['exec', 'execSync', 'spawn', 'spawnSync', 'execFile', 'execFileSync'];\nconst REQUIRED_PATH_PREFIXES = ['./', '.\\\\', '../', '..\\\\', '/', '\\\\', 'C:\\\\'];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      issue: 'Make sure the \"PATH\" used to find this command includes only what you intend.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      CallExpression: (node: estree.CallExpression) => {\n        const fqn = getFullyQualifiedName(context, node);\n        if (SENSITIVE_METHODS.some(method => fqn === `child_process.${method}`)) {\n          const sensitiveArg = findSensitiveArgument(\n            context,\n            node.arguments as estree.Expression[],\n          );\n          if (sensitiveArg !== null) {\n            context.report({\n              messageId: 'issue',\n              node: sensitiveArg,\n            });\n          }\n        }\n      },\n    };\n  },\n};\n\nfunction findSensitiveArgument(context: Rule.RuleContext, functionArgs: estree.Expression[]) {\n  if (functionArgs.length === 0) {\n    return null;\n  }\n  const pathArg = functionArgs[0]; // we know this for the SENSITIVE_METHODS\n  const literalInExpression: estree.Literal | undefined = getValueOfExpression(\n    context,\n    pathArg,\n    'Literal',\n  );\n  let stringLiteral: estree.Literal & { value: string };\n  if (literalInExpression !== undefined && isStringLiteral(literalInExpression)) {\n    stringLiteral = literalInExpression;\n  } else {\n    return null;\n  }\n  const startsWithRequiredPrefix = REQUIRED_PATH_PREFIXES.some(prefix =>\n    stringLiteral.value.startsWith(prefix),\n  );\n  return startsWithRequiredPrefix ? null : pathArg;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1226/javascript\n\nimport { AST, Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { getParent, resolveIdentifiers } from '../helpers';\n\ntype ContextType = 'catch' | 'function' | 'foreach' | 'global';\n\ninterface ReassignmentContext {\n  type: ContextType;\n  variablesToCheckInCurrentScope: Set<string>;\n  variablesToCheck: Set<string>;\n  variablesRead: Set<string>;\n  referencesByIdentifier: Map<estree.Identifier, Scope.Reference>;\n  parentContext?: ReassignmentContext;\n}\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      noReassignment:\n        'Introduce a new variable or use its initial value before reassigning \"{{reference}}\".',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    let variableUsageContext: ReassignmentContext = {\n      type: 'global',\n      variablesToCheckInCurrentScope: new Set<string>(),\n      variablesToCheck: new Set<string>(),\n      variablesRead: new Set<string>(),\n      referencesByIdentifier: new Map<estree.Identifier, Scope.Reference>(),\n    };\n\n    function checkIdentifierUsage(\n      identifier: estree.Identifier,\n      identifierContextType: ContextType,\n    ) {\n      if (variableUsageContext.type !== identifierContextType) {\n        return;\n      }\n\n      const variableName = identifier.name;\n      const currentReference = getReference(variableUsageContext, identifier);\n      if (\n        currentReference &&\n        !currentReference.init &&\n        !variableUsageContext.variablesRead.has(variableName)\n      ) {\n        if (\n          variableUsageContext.variablesToCheck.has(variableName) &&\n          currentReference.isWriteOnly() &&\n          !isUsedInWriteExpression(variableName, currentReference.writeExpr)\n        ) {\n          // we do not raise issue when value is reassigned inside a top-level IfStatement, as it might be a shift or\n          // default value reassignment\n          if (\n            isInsideIfStatement(context, identifier) ||\n            context.sourceCode.getAncestors(identifier).some(node => node.type === 'SwitchCase') // issue-2398\n          ) {\n            return;\n          }\n          raiseIssue(currentReference);\n        }\n        markAsRead(variableUsageContext, variableName);\n      } else if (variableName === 'arguments') {\n        markAllFunctionArgumentsAsRead(variableUsageContext);\n      }\n    }\n\n    function isUsedInWriteExpression(variableName: string, writeExpr: estree.Node | null) {\n      return (\n        writeExpr &&\n        context.sourceCode.getFirstToken(\n          writeExpr,\n          token => token.value === variableName || token.value === 'arguments',\n        )\n      );\n    }\n\n    function raiseIssue(reference: Scope.Reference) {\n      const locationHolder = getPreciseLocationHolder(reference);\n      context.report({\n        messageId: 'noReassignment',\n        data: {\n          reference: reference.identifier.name,\n        },\n        ...locationHolder,\n      });\n    }\n\n    function popContext() {\n      variableUsageContext = variableUsageContext.parentContext\n        ? variableUsageContext.parentContext\n        : variableUsageContext;\n    }\n\n    return {\n      onCodePathStart(_codePath: Rule.CodePath, node: estree.Node) {\n        const currentScope = context.sourceCode.getScope(node);\n        if (currentScope && currentScope.type === 'function') {\n          const { referencesByIdentifier, variablesToCheck, variablesToCheckInCurrentScope } =\n            computeNewContextInfo(variableUsageContext, context, node);\n\n          const functionName = getFunctionName(node as estree.FunctionExpression);\n          if (functionName) {\n            variablesToCheck.delete(functionName);\n          }\n\n          variableUsageContext = {\n            type: 'function',\n            parentContext: variableUsageContext,\n            variablesToCheck,\n            referencesByIdentifier,\n            variablesToCheckInCurrentScope,\n            variablesRead: computeSetDifference(\n              variableUsageContext.variablesRead,\n              variablesToCheckInCurrentScope,\n            ),\n          };\n        } else {\n          variableUsageContext = {\n            type: 'global',\n            parentContext: variableUsageContext,\n            variablesToCheckInCurrentScope: new Set<string>(),\n            variablesToCheck: new Set<string>(),\n            variablesRead: new Set<string>(),\n            referencesByIdentifier: new Map<estree.Identifier, Scope.Reference>(),\n          };\n        }\n      },\n\n      onCodePathSegmentLoop(\n        _fromSegment: Rule.CodePathSegment,\n        _toSegment: Rule.CodePathSegment,\n        node: estree.Node,\n      ) {\n        const parent = getParent(context, node);\n        if (!isForEachLoopStart(node, parent)) {\n          return;\n        }\n        const currentScope = context.sourceCode.scopeManager.acquire(parent.body);\n        const { referencesByIdentifier, variablesToCheck, variablesToCheckInCurrentScope } =\n          computeNewContextInfo(variableUsageContext, context, parent.left);\n\n        if (currentScope) {\n          for (const ref of currentScope.references) {\n            referencesByIdentifier.set(ref.identifier, ref);\n          }\n        }\n\n        // In case of array or object pattern expression, the left hand side are not declared variables but simply identifiers\n        resolveIdentifiers(parent.left as TSESTree.Node, true)\n          .map(identifier => identifier.name)\n          .forEach(name => {\n            variablesToCheck.add(name);\n            variablesToCheckInCurrentScope.add(name);\n          });\n\n        variableUsageContext = {\n          type: 'foreach',\n          parentContext: variableUsageContext,\n          variablesToCheckInCurrentScope,\n          variablesToCheck,\n          variablesRead: computeSetDifference(\n            variableUsageContext.variablesRead,\n            variablesToCheckInCurrentScope,\n          ),\n          referencesByIdentifier,\n        };\n      },\n\n      onCodePathSegmentStart(_segment: Rule.CodePathSegment, node: estree.Node) {\n        if (node.type !== 'CatchClause') {\n          return;\n        }\n\n        const { referencesByIdentifier, variablesToCheck, variablesToCheckInCurrentScope } =\n          computeNewContextInfo(variableUsageContext, context, node);\n\n        variableUsageContext = {\n          type: 'catch',\n          parentContext: variableUsageContext,\n          variablesToCheckInCurrentScope,\n          variablesToCheck,\n          variablesRead: computeSetDifference(\n            variableUsageContext.variablesRead,\n            variablesToCheckInCurrentScope,\n          ),\n          referencesByIdentifier,\n        };\n      },\n\n      onCodePathEnd: popContext,\n      'ForInStatement:exit': popContext,\n      'ForOfStatement:exit': popContext,\n      'CatchClause:exit': popContext,\n      '*:function > BlockStatement Identifier': (node: estree.Node) =>\n        checkIdentifierUsage(node as estree.Identifier, 'function'),\n      'ForInStatement > *:statement Identifier': (node: estree.Node) =>\n        checkIdentifierUsage(node as estree.Identifier, 'foreach'),\n      'ForOfStatement > *:statement Identifier': (node: estree.Node) =>\n        checkIdentifierUsage(node as estree.Identifier, 'foreach'),\n      'CatchClause > BlockStatement Identifier': (node: estree.Node) =>\n        checkIdentifierUsage(node as estree.Identifier, 'catch'),\n    };\n  },\n};\n\nfunction isInsideIfStatement(context: Rule.RuleContext, node: estree.Node): boolean {\n  const ancestors = context.sourceCode.getAncestors(node);\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    if (\n      ancestors[i].type === 'IfStatement' &&\n      // We check if the consequent or the alternate are also ancestors\n      // Nodes in the test attribute should be raised\n      i < ancestors.length - 1 &&\n      (ancestors[i + 1] === (ancestors[i] as estree.IfStatement).consequent ||\n        ancestors[i + 1] === (ancestors[i] as estree.IfStatement).alternate)\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Computes the set difference (a \\ b)\n */\nfunction computeSetDifference(a: Set<string>, b: Set<string>) {\n  return new Set([...a].filter(str => !b.has(str)));\n}\n\nfunction getFunctionName(node: estree.FunctionExpression) {\n  return !node.id ? null : node.id.name;\n}\n\nfunction isForEachLoopStart(\n  node: estree.Node,\n  parent?: estree.Node,\n): parent is estree.ForInStatement | estree.ForOfStatement {\n  return (\n    node.type === 'BlockStatement' &&\n    !!parent &&\n    (parent.type === 'ForInStatement' || parent.type === 'ForOfStatement')\n  );\n}\n\nfunction computeNewContextInfo(\n  variableUsageContext: ReassignmentContext,\n  context: Rule.RuleContext,\n  node: estree.Node,\n) {\n  const referencesByIdentifier = new Map<estree.Identifier, Scope.Reference>();\n  const variablesToCheck = new Set<string>(variableUsageContext.variablesToCheck);\n  const variablesToCheckInCurrentScope = new Set<string>();\n  context.sourceCode.getDeclaredVariables(node).forEach(variable => {\n    variablesToCheck.add(variable.name);\n    variablesToCheckInCurrentScope.add(variable.name);\n    for (const currentRef of variable.references) {\n      referencesByIdentifier.set(currentRef.identifier, currentRef);\n    }\n  });\n  return { referencesByIdentifier, variablesToCheck, variablesToCheckInCurrentScope };\n}\n\nfunction markAsRead(context: ReassignmentContext, variableName: string) {\n  context.variablesRead.add(variableName);\n  if (!context.variablesToCheckInCurrentScope.has(variableName) && context.parentContext) {\n    markAsRead(context.parentContext, variableName);\n  }\n}\n\nfunction markAllFunctionArgumentsAsRead(variableUsageContext: ReassignmentContext) {\n  let functionContext: ReassignmentContext | undefined = variableUsageContext;\n  while (functionContext && functionContext.type !== 'function') {\n    functionContext = functionContext.parentContext;\n  }\n\n  if (functionContext) {\n    for (const variableName of functionContext.variablesToCheckInCurrentScope) {\n      functionContext.variablesRead.add(variableName);\n    }\n  }\n}\n\nfunction getPreciseLocationHolder(\n  reference: Scope.Reference,\n): { node: estree.Node } | { loc: AST.SourceLocation } {\n  const identifierLoc = reference.identifier.loc;\n  if (identifierLoc && reference.writeExpr && reference.writeExpr.loc) {\n    return { loc: { start: identifierLoc.start, end: reference.writeExpr.loc.end } };\n  }\n  return { node: reference.identifier };\n}\n\nfunction getReference(\n  variableUsageContext: ReassignmentContext,\n  identifier: estree.Identifier,\n): Scope.Reference | undefined {\n  const identifierReference = variableUsageContext.referencesByIdentifier.get(identifier);\n  if (!identifierReference && variableUsageContext.parentContext) {\n    return getReference(variableUsageContext.parentContext, identifier);\n  }\n  return identifierReference;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1533/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\n\nconst WRAPPER_TYPES = ['Boolean', 'Number', 'String'];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      removeConstructor: 'Remove this use of \"{{constructor}}\" constructor.',\n      replaceWrapper:\n        'Replace this \"{{wrapper}}\" wrapper object with primitive type \"{{primitive}}\".',\n      suggestRemoveNew: 'Remove \"new\" operator',\n      suggestReplaceWrapper: 'Replace \"{{wrapper}}\" with \"{{primitive}}\"',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      NewExpression(node: estree.Node) {\n        const konstructor = (node as estree.NewExpression).callee;\n        if (konstructor.type === 'Identifier' && WRAPPER_TYPES.includes(konstructor.name)) {\n          const newToken = context.sourceCode.getFirstToken(node, token => token.value === 'new')!;\n          const [begin, end] = newToken.range;\n          context.report({\n            messageId: 'removeConstructor',\n            data: {\n              constructor: konstructor.name,\n            },\n            node,\n            suggest: [\n              {\n                messageId: 'suggestRemoveNew',\n                fix: fixer => fixer.removeRange([begin, end + 1]),\n              },\n            ],\n          });\n        }\n      },\n      TSTypeReference(node: estree.Node) {\n        const typeString = context.sourceCode.getText(node);\n        if (WRAPPER_TYPES.includes(typeString)) {\n          const primitiveType = typeString.toLowerCase();\n          context.report({\n            messageId: 'replaceWrapper',\n            data: {\n              wrapper: typeString,\n              primitive: primitiveType,\n            },\n            node,\n            suggest: [\n              {\n                messageId: 'suggestReplaceWrapper',\n                data: {\n                  wrapper: typeString,\n                  primitive: primitiveType,\n                },\n                fix: fixer => fixer.replaceText(node, primitiveType),\n              },\n            ],\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { interceptReport } from '../helpers';\nimport { TSESTree } from '@typescript-eslint/utils';\n\n// core implementation of this rule raises issues on type exports\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, reportExempting(isTypeDeclaration));\n}\n\nfunction reportExempting(\n  exemptionCondition: (node: estree.Identifier) => boolean,\n): (context: Rule.RuleContext, reportDescriptor: Rule.ReportDescriptor) => void {\n  return (context, reportDescriptor) => {\n    if ('node' in reportDescriptor) {\n      const node = reportDescriptor['node'];\n      if (node.type === 'Identifier' && !exemptionCondition(node)) {\n        context.report(reportDescriptor);\n      }\n    }\n  };\n}\n\nfunction isTypeDeclaration(node: estree.Identifier) {\n  return (node as TSESTree.Node).parent?.type === 'TSTypeAliasDeclaration';\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { tsEslintRules } from '../typescript-eslint';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(tsEslintRules['no-redeclare']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4165/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport CodePath = Rule.CodePath;\nimport Variable = Scope.Variable;\nimport Reference = Scope.Reference;\nimport CodePathSegment = Rule.CodePathSegment;\nimport {\n  getVariableFromIdentifier,\n  reachingDefinitions,\n  ReachingDefinitions,\n  resolveAssignedValues,\n  Values,\n} from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      reviewAssignment:\n        'Review this redundant assignment: \"{{symbol}}\" already holds the assigned value along all execution paths.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const codePathStack: CodePathContext[] = [];\n    const reachingDefsMap = new Map<string, ReachingDefinitions>();\n    // map from Variable to CodePath ids where variable is used\n    const variableUsages = new Map<Variable, Set<string>>();\n    const codePathSegments: Rule.CodePathSegment[][] = [];\n    let currentCodePathSegments: Rule.CodePathSegment[] = [];\n\n    return {\n      ':matches(AssignmentExpression, VariableDeclarator[init])': (node: estree.Node) => {\n        pushAssignmentContext(node as AssignmentLike);\n      },\n      ':matches(AssignmentExpression, VariableDeclarator[init]):exit': () => {\n        popAssignmentContext();\n      },\n      Identifier: (node: estree.Node) => {\n        if (isEnumConstant(node)) {\n          return;\n        }\n        checkIdentifierUsage(node as estree.Identifier);\n      },\n      'Program:exit': () => {\n        reachingDefinitions(reachingDefsMap);\n        reachingDefsMap.forEach(defs => {\n          checkSegment(defs);\n        });\n        reachingDefsMap.clear();\n        variableUsages.clear();\n        while (codePathStack.length > 0) {\n          codePathStack.pop();\n        }\n      },\n\n      // CodePath events\n      onCodePathSegmentStart: (segment: CodePathSegment) => {\n        reachingDefsMap.set(segment.id, new ReachingDefinitions(segment));\n        currentCodePathSegments.push(segment);\n      },\n      onCodePathStart: codePath => {\n        pushContext(new CodePathContext(codePath));\n        codePathSegments.push(currentCodePathSegments);\n        currentCodePathSegments = [];\n      },\n      onCodePathEnd: () => {\n        popContext();\n        currentCodePathSegments = codePathSegments.pop() || [];\n      },\n      onCodePathSegmentEnd() {\n        currentCodePathSegments.pop();\n      },\n    };\n\n    function popAssignmentContext() {\n      const assignment = peek(codePathStack).assignmentStack.pop()!;\n      assignment.rhs.forEach(r => processReference(r));\n      assignment.lhs.forEach(r => processReference(r));\n    }\n\n    function pushAssignmentContext(node: AssignmentLike) {\n      peek(codePathStack).assignmentStack.push(new AssignmentContext(node));\n    }\n\n    function checkSegment(reachingDefs: ReachingDefinitions) {\n      const assignedValuesMap = new Map<Variable, Values>(reachingDefs.in);\n      reachingDefs.references.forEach(ref => {\n        const variable = ref.resolved;\n        if (!variable || !ref.isWrite() || !shouldReport(ref)) {\n          return;\n        }\n        const lhsValues = assignedValuesMap.get(variable);\n        const rhsValues = resolveAssignedValues(\n          variable,\n          ref.writeExpr,\n          assignedValuesMap,\n          ref.from,\n        );\n        if (lhsValues?.type === 'AssignedValues' && lhsValues?.size === 1) {\n          const [lhsVal] = [...lhsValues];\n          checkRedundantAssignement(ref, ref.writeExpr, lhsVal, rhsValues, variable.name);\n        }\n        assignedValuesMap.set(variable, rhsValues);\n      });\n    }\n\n    function checkRedundantAssignement(\n      { resolved: variable }: Scope.Reference,\n      node: estree.Node | null,\n      lhsVal: string | Variable,\n      rhsValues: Values,\n      name: string,\n    ) {\n      if (rhsValues.type === 'UnknownValue' || rhsValues.size !== 1) {\n        return;\n      }\n      const [rhsVal] = [...rhsValues];\n      if (!isWrittenOnlyOnce(variable!) && lhsVal === rhsVal) {\n        context.report({\n          node: node!,\n          messageId: 'reviewAssignment',\n          data: {\n            symbol: name,\n          },\n        });\n      }\n    }\n\n    // to avoid raising on code like:\n    // while (cond) {  let x = 42; }\n    function isWrittenOnlyOnce(variable: Scope.Variable) {\n      return variable.references.filter(ref => ref.isWrite()).length === 1;\n    }\n\n    function shouldReport(ref: Reference) {\n      const variable = ref.resolved;\n      return variable && shouldReportReference(ref) && !variableUsedOutsideOfCodePath(variable);\n    }\n\n    function shouldReportReference(ref: Reference) {\n      const variable = ref.resolved;\n\n      return (\n        variable &&\n        !isDefaultParameter(ref) &&\n        !variable.name.startsWith('_') &&\n        !isCompoundAssignment(ref.writeExpr) &&\n        !isSelfAssignement(ref) &&\n        !variable.defs.some(\n          def => def.type === 'Parameter' || (def.type === 'Variable' && !def.node.init),\n        )\n      );\n    }\n\n    function isEnumConstant(node: estree.Node) {\n      return (context.sourceCode.getAncestors(node) as TSESTree.Node[]).some(\n        n => n.type === 'TSEnumDeclaration',\n      );\n    }\n\n    function variableUsedOutsideOfCodePath(variable: Scope.Variable) {\n      return variableUsages.get(variable)!.size > 1;\n    }\n\n    function checkIdentifierUsage(node: estree.Identifier) {\n      const { ref, variable } = resolveReference(node);\n      if (ref) {\n        processReference(ref);\n      }\n      if (variable) {\n        updateVariableUsages(variable);\n      }\n    }\n\n    function processReference(ref: Reference) {\n      const assignmentStack = peek(codePathStack).assignmentStack;\n      if (assignmentStack.length > 0) {\n        const assignment = peek(assignmentStack);\n        assignment.add(ref);\n      } else {\n        currentCodePathSegments.forEach(segment => {\n          const reachingDefs = reachingDefsForSegment(segment);\n          reachingDefs.add(ref);\n        });\n      }\n    }\n\n    function reachingDefsForSegment(segment: CodePathSegment) {\n      let defs;\n      if (reachingDefsMap.has(segment.id)) {\n        defs = reachingDefsMap.get(segment.id)!;\n      } else {\n        defs = new ReachingDefinitions(segment);\n        reachingDefsMap.set(segment.id, defs);\n      }\n      return defs;\n    }\n\n    function updateVariableUsages(variable: Scope.Variable) {\n      const codePathId = peek(codePathStack).codePath.id;\n      if (variableUsages.has(variable)) {\n        variableUsages.get(variable)!.add(codePathId);\n      } else {\n        variableUsages.set(variable, new Set<string>([codePathId]));\n      }\n    }\n\n    function pushContext(codePathContext: CodePathContext) {\n      codePathStack.push(codePathContext);\n    }\n\n    function popContext() {\n      codePathStack.pop();\n    }\n\n    function resolveReferenceRecursively(\n      node: estree.Identifier,\n      scope: Scope.Scope | null,\n    ): { ref: Reference | null; variable: Scope.Variable | null } {\n      if (scope === null) {\n        return { ref: null, variable: null };\n      }\n      const ref = scope.references.find(r => r.identifier === node);\n      if (ref) {\n        return { ref, variable: ref.resolved };\n      } else {\n        // if it's not a reference, it can be just declaration without initializer\n        const variable = scope.variables.find(v => v.defs.find(def => def.name === node));\n        if (variable) {\n          return { ref: null, variable };\n        }\n        // in theory we only need 1-level recursion, only for switch expression, which is likely a bug in eslint\n        // generic recursion is used for safety & readability\n        return resolveReferenceRecursively(node, scope.upper);\n      }\n    }\n\n    function resolveReference(node: estree.Identifier) {\n      return resolveReferenceRecursively(node, context.sourceCode.getScope(node));\n    }\n  },\n};\n\nclass CodePathContext {\n  reachingDefinitionsMap = new Map<string, ReachingDefinitions>();\n  reachingDefinitionsStack: ReachingDefinitions[] = [];\n  codePath: CodePath;\n  segments = new Map<string, CodePathSegment>();\n  assignmentStack: AssignmentContext[] = [];\n\n  constructor(codePath: CodePath) {\n    this.codePath = codePath;\n  }\n}\n\ntype AssignmentLike = TSESTree.AssignmentExpression | TSESTree.VariableDeclarator;\n\nclass AssignmentContext {\n  node: AssignmentLike;\n\n  constructor(node: AssignmentLike) {\n    this.node = node;\n  }\n\n  lhs = new Set<Reference>();\n  rhs = new Set<Reference>();\n\n  isRhs(node: TSESTree.Node) {\n    return this.node.type === 'AssignmentExpression'\n      ? this.node.right === node\n      : this.node.init === node;\n  }\n\n  isLhs(node: TSESTree.Node) {\n    return this.node.type === 'AssignmentExpression'\n      ? this.node.left === node\n      : this.node.id === node;\n  }\n\n  add(ref: Reference) {\n    let parent = ref.identifier as TSESTree.Node | undefined;\n    while (parent) {\n      if (this.isLhs(parent)) {\n        this.lhs.add(ref);\n        break;\n      }\n      if (this.isRhs(parent)) {\n        this.rhs.add(ref);\n        break;\n      }\n      parent = parent.parent;\n    }\n    if (parent === null) {\n      throw new Error('failed to find assignment lhs/rhs');\n    }\n  }\n}\n\nfunction peek<T>(arr: Array<T>) {\n  return arr[arr.length - 1];\n}\n\nfunction isSelfAssignement(ref: Reference) {\n  const lhs = ref.resolved;\n  if (ref.writeExpr?.type === 'Identifier') {\n    const rhs = getVariableFromIdentifier(ref.writeExpr, ref.from);\n    return lhs === rhs;\n  }\n  return false;\n}\n\nfunction isCompoundAssignment(writeExpr: estree.Node | null) {\n  if (writeExpr?.hasOwnProperty('parent')) {\n    const node = (writeExpr as TSESTree.Node).parent;\n    return node && node.type === 'AssignmentExpression' && node.operator !== '=';\n  }\n  return false;\n}\n\nfunction isDefaultParameter(ref: Reference) {\n  if (ref.identifier.type !== 'Identifier') {\n    return false;\n  }\n  const parent = (ref.identifier as TSESTree.Identifier).parent;\n  return parent && parent.type === 'AssignmentPattern';\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4782/javascript\n\nimport { Rule, AST } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { isRequiredParserServices, toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n\n  create(context: Rule.RuleContext) {\n    if (!isRequiredParserServices(context.sourceCode.parserServices)) {\n      return {};\n    }\n\n    function checkProperty(node: estree.Node) {\n      const tsNode = node as TSESTree.Node as\n        | TSESTree.PropertyDefinition\n        | TSESTree.TSPropertySignature;\n      const optionalToken = context.sourceCode.getFirstToken(node, token => token.value === '?');\n      if (!tsNode.optional || !optionalToken) {\n        return;\n      }\n\n      const typeNode = getUndefinedTypeAnnotation(tsNode.typeAnnotation);\n      if (typeNode) {\n        const suggest = getQuickFixSuggestions(context, optionalToken, typeNode);\n        const secondaryLocations = [typeNode];\n        const message = toEncodedMessage(\n          \"Consider removing 'undefined' type or '?' specifier, one of them is redundant.\",\n          secondaryLocations,\n        );\n        context.report({\n          message,\n          loc: optionalToken.loc,\n          suggest,\n        });\n      }\n    }\n\n    return {\n      'PropertyDefinition, TSPropertySignature': (node: estree.Node) => checkProperty(node),\n    };\n  },\n};\n\nfunction getUndefinedTypeAnnotation(tsTypeAnnotation?: TSESTree.TSTypeAnnotation) {\n  if (tsTypeAnnotation) {\n    return getUndefinedTypeNode(tsTypeAnnotation.typeAnnotation);\n  }\n  return undefined;\n}\n\nfunction getUndefinedTypeNode(typeNode: TSESTree.TypeNode): TSESTree.TypeNode | undefined {\n  if (typeNode.type === 'TSUndefinedKeyword') {\n    return typeNode;\n  } else if (typeNode.type === 'TSUnionType') {\n    return typeNode.types.map(getUndefinedTypeNode).find(tpe => tpe !== undefined);\n  }\n  return undefined;\n}\n\nfunction getQuickFixSuggestions(\n  context: Rule.RuleContext,\n  optionalToken: AST.Token,\n  undefinedType: TSESTree.TypeNode,\n): Rule.SuggestionReportDescriptor[] {\n  const suggestions: Rule.SuggestionReportDescriptor[] = [\n    {\n      desc: 'Remove \"?\" operator',\n      fix: fixer => fixer.remove(optionalToken),\n    },\n  ];\n  if (undefinedType.parent?.type === 'TSUnionType') {\n    suggestions.push(getUndefinedRemovalSuggestion(context, undefinedType));\n  }\n  return suggestions;\n}\n\nfunction getUndefinedRemovalSuggestion(\n  context: Rule.RuleContext,\n  undefinedType: TSESTree.TypeNode,\n): Rule.SuggestionReportDescriptor {\n  return {\n    desc: 'Remove \"undefined\" type annotation',\n    fix: fixer => {\n      const fixes: Rule.Fix[] = [];\n      const unionType = undefinedType.parent as TSESTree.TSUnionType;\n      if (unionType.types.length === 2) {\n        const unionTypeNode = unionType as unknown as estree.Node;\n        const otherType =\n          unionType.types[0] === undefinedType ? unionType.types[1] : unionType.types[0];\n        const otherTypeText = context.sourceCode.getText(otherType as unknown as estree.Node);\n        fixes.push(fixer.replaceText(unionTypeNode, otherTypeText));\n\n        const tokenBefore = context.sourceCode.getTokenBefore(unionTypeNode);\n        const tokenAfter = context.sourceCode.getTokenAfter(unionTypeNode);\n        if (tokenBefore?.value === '(' && tokenAfter?.value === ')') {\n          fixes.push(fixer.remove(tokenBefore));\n          fixes.push(fixer.remove(tokenAfter));\n        }\n      } else {\n        const index = unionType.types.indexOf(undefinedType);\n        if (index === 0) {\n          fixes.push(fixer.removeRange([undefinedType.range[0], unionType.types[1].range[0]]));\n        } else {\n          fixes.push(\n            fixer.removeRange([unionType.types[index - 1].range[1], undefinedType.range[1]]),\n          );\n        }\n      }\n      return fixes;\n    },\n  };\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1110/javascript\n\nimport { AST, Rule, SourceCode } from 'eslint';\nimport * as estree from 'estree';\nimport { getParent, toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\ninterface ParenthesesPair {\n  openingParenthesis: AST.Token;\n  closingParenthesis: AST.Token;\n}\n\n/**\n * Parts of the grammar that are required to have parentheses.\n */\nconst parenthesized: { [key: string]: string } = {\n  DoWhileStatement: 'test',\n  IfStatement: 'test',\n  SwitchStatement: 'discriminant',\n  WhileStatement: 'test',\n  WithStatement: 'object',\n  ArrowFunctionExpression: 'body',\n  ImportExpression: 'source',\n};\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n    hasSuggestions: true,\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      '*'(node: estree.Node) {\n        checkRedundantParentheses(context.sourceCode, node, context);\n      },\n    };\n  },\n};\n\nfunction checkRedundantParentheses(\n  sourceCode: SourceCode,\n  node: estree.Node,\n  context: Rule.RuleContext,\n) {\n  const parenthesesPairsAroundNode = getParenthesesPairsAround(sourceCode, node, node);\n  const parent = getParent(context, node);\n\n  // Ignore parentheses pair from the parent node\n  if (!!parent && isInParentNodeParentheses(node, parent)) {\n    parenthesesPairsAroundNode.pop();\n  }\n  // One pair of parentheses is allowed for readability purposes\n  parenthesesPairsAroundNode.shift();\n\n  parenthesesPairsAroundNode.forEach(parentheses => {\n    context.report({\n      message: toEncodedMessage(`Remove these redundant parentheses.`, [\n        parentheses.closingParenthesis,\n      ]),\n      loc: parentheses.openingParenthesis.loc,\n      suggest: [\n        {\n          desc: 'Remove these redundant parentheses',\n          fix(fixer) {\n            return [\n              fixer.remove(parentheses.openingParenthesis),\n              fixer.remove(parentheses.closingParenthesis),\n            ];\n          },\n        },\n      ],\n    });\n  });\n}\n\nfunction getParenthesesPairsAround(\n  sourceCode: SourceCode,\n  start: estree.Node | AST.Token,\n  end: estree.Node | AST.Token,\n): ParenthesesPair[] {\n  const tokenBefore = sourceCode.getTokenBefore(start);\n  const tokenAfter = sourceCode.getTokenAfter(end);\n\n  if (!!tokenBefore && !!tokenAfter && tokenBefore.value === '(' && tokenAfter.value === ')') {\n    return [\n      { openingParenthesis: tokenBefore, closingParenthesis: tokenAfter },\n      ...getParenthesesPairsAround(sourceCode, tokenBefore, tokenAfter),\n    ];\n  }\n\n  return [];\n}\n\nfunction isInParentNodeParentheses(node: estree.Node, parent: estree.Node): boolean {\n  // Applying same logic as https://github.com/eslint/eslint/blob/main/lib/rules/no-sequences.js#L81\n  // both rules (S1110 and S878) can contradict each other, so better use the same logic\n  const parentAttribute = parenthesized[parent.type as keyof typeof parenthesized];\n  const nodeIsInConditionOfParent =\n    parentAttribute &&\n    node === (parent[parentAttribute as keyof estree.Node] as unknown as estree.Node);\n\n  const nodeIsArgumentOfCallExpression =\n    (parent.type === 'CallExpression' || parent.type === 'NewExpression') &&\n    parent.arguments.includes(node as estree.Expression);\n\n  return nodeIsInConditionOfParent || nodeIsArgumentOfCallExpression;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6571/javascript\n\nimport { Rule } from 'eslint';\nimport { interceptReport } from '../helpers';\nimport { TSESTree } from '@typescript-eslint/utils';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, reportExempting);\n}\n\nfunction reportExempting(context: Rule.RuleContext, descriptor: Rule.ReportDescriptor) {\n  if ('node' in descriptor) {\n    const { node, ...rest } = descriptor;\n    if (exemptionCondition(node as TSESTree.Node, descriptor)) {\n      return;\n    }\n    context.report({ node, ...rest });\n  }\n}\n\n// We ignore issues where typeName is 'any' but not raised for the 'any' keyword as they are due to unresolved types.\n// The same exception applies for the 'unknown' type.\nfunction exemptionCondition(node: TSESTree.Node, descriptor: Rule.ReportDescriptor) {\n  const data = descriptor.data;\n  return (\n    (data?.['typeName'] === 'any' && node.type !== 'TSAnyKeyword') ||\n    (data?.['typeName'] === 'unknown' && node.type !== 'TSUnknownKeyword')\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { tsEslintRules } from '../typescript-eslint';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(tsEslintRules['no-redundant-type-constituents']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3827/javascript\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { findFirstMatchingAncestor, toEncodedMessage, isInsideVueSetupScript } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\n// https://vuejs.org/api/sfc-script-setup.html#defineprops-defineemits\nconst vueMacroNames = new Set([\n  'defineProps',\n  'defineEmits',\n  'defineExpose',\n  'defineOptions',\n  'defineSlots',\n  'withDefaults',\n]);\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const excludedNames = new Set();\n    const undeclaredIdentifiersByName: Map<string, estree.Identifier[]> = new Map();\n    return {\n      'Program:exit'(node: estree.Node) {\n        excludedNames.clear();\n        undeclaredIdentifiersByName.clear();\n        const globalScope = context.sourceCode.getScope(node);\n        globalScope.through.forEach(ref => {\n          const identifier = ref.identifier;\n          if (excludedNames.has(identifier.name)) {\n            return;\n          }\n          if (\n            ref.writeExpr ||\n            hasTypeOfOperator(identifier as TSESTree.Node) ||\n            isWithinWithStatement(identifier as TSESTree.Node)\n          ) {\n            excludedNames.add(identifier.name);\n            return;\n          }\n          if (vueMacroNames.has(identifier.name) && isInsideVueSetupScript(identifier, context)) {\n            return;\n          }\n          const undeclaredIndentifiers = undeclaredIdentifiersByName.get(identifier.name);\n          if (undeclaredIndentifiers) {\n            undeclaredIndentifiers.push(identifier);\n          } else {\n            undeclaredIdentifiersByName.set(identifier.name, [identifier]);\n          }\n        });\n        undeclaredIdentifiersByName.forEach((identifiers, name) => {\n          context.report({\n            node: identifiers[0],\n            message: toEncodedMessage(\n              `\"${name}\" does not exist. Change its name or declare it so that its usage doesn't result in a \"ReferenceError\".`,\n              identifiers.slice(1),\n            ),\n          });\n        });\n      },\n    };\n  },\n};\n\nfunction isWithinWithStatement(node: TSESTree.Node) {\n  return !!findFirstMatchingAncestor(node, ancestor => ancestor.type === 'WithStatement');\n}\n\nfunction hasTypeOfOperator(node: TSESTree.Node) {\n  const parent = node.parent;\n  return parent?.type === 'UnaryExpression' && parent.operator === 'typeof';\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5736/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { Express, getPropertyWithValue, getFullyQualifiedName, getProperty } from '../helpers';\n\nconst HELMET = 'helmet';\nconst POLICY = 'policy';\nconst REFERRER_POLICY = 'referrerPolicy';\nconst UNSAFE_REFERRER_POLICY_VALUES = ['', 'unsafe-url', 'no-referrer-when-downgrade'];\n\nexport const rule: Rule.RuleModule = Express.SensitiveMiddlewarePropertyRule(\n  findNoReferrerPolicyPropertyFromHelmet,\n  `Make sure disabling strict HTTP no-referrer policy is safe here.`,\n);\n\nfunction findNoReferrerPolicyPropertyFromHelmet(\n  context: Rule.RuleContext,\n  node: estree.CallExpression,\n): estree.Property[] {\n  let sensitive: estree.Property | undefined;\n\n  const { callee, arguments: args } = node;\n  if (args.length === 1) {\n    const [options] = args;\n\n    /* helmet({ referrerPolicy: false }) or helmet.referrerPolicy({ policy: <unsafe_value> }) */\n    const fqn = getFullyQualifiedName(context, callee);\n    if (fqn === HELMET && options.type === 'ObjectExpression') {\n      sensitive = getPropertyWithValue(context, options, REFERRER_POLICY, false);\n    } else if (fqn === `${HELMET}.${REFERRER_POLICY}`) {\n      const maybePolicy = getProperty(options, POLICY, context);\n      if (maybePolicy && !isSafePolicy(maybePolicy)) {\n        sensitive = maybePolicy;\n      }\n    }\n  }\n\n  return sensitive ? [sensitive] : [];\n}\n\nfunction isSafePolicy(policy: estree.Property): boolean {\n  const { value } = policy;\n  const values: Array<estree.Node | null> =\n    value.type === 'ArrayExpression' ? value.elements : [value];\n  const sensitiveValue = values.find(\n    v =>\n      v?.type === 'Literal' &&\n      typeof v.value === 'string' &&\n      UNSAFE_REFERRER_POLICY_VALUES.includes(v.value),\n  );\n  return !Boolean(sensitiveValue);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3533/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport * as helpers from '../helpers';\nimport { isStringLiteral } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      standardImport: 'Use a standard \"import\" statement instead of \"{{adhocImport}}\".',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    return {\n      'CallExpression[callee.type=\"Identifier\"]': (node: estree.Node) => {\n        if (\n          context.sourceCode.getScope(node).type !== 'module' &&\n          context.sourceCode.getScope(node).type !== 'global'\n        ) {\n          return;\n        }\n        const callExpression = node as estree.CallExpression;\n        const identifier = callExpression.callee as estree.Identifier;\n        if (\n          isAmdImport(callExpression, identifier, services) ||\n          isCommonJsImport(callExpression, identifier, services)\n        ) {\n          context.report({\n            node: identifier,\n            messageId: 'standardImport',\n            data: {\n              adhocImport: identifier.name,\n            },\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction isString(\n  node: estree.SpreadElement | estree.Expression,\n  services?: helpers.RequiredParserServices,\n): boolean {\n  return (\n    (helpers.isRequiredParserServices(services) && helpers.isString(node, services)) ||\n    isStringLiteral(node)\n  );\n}\n\nfunction isCommonJsImport(\n  callExpression: estree.CallExpression,\n  identifier: estree.Identifier,\n  services: helpers.RequiredParserServices,\n): boolean {\n  return (\n    callExpression.arguments.length === 1 &&\n    isString(callExpression.arguments[0], services) &&\n    identifier.name === 'require'\n  );\n}\n\nfunction isAmdImport(\n  callExpression: estree.CallExpression,\n  identifier: estree.Identifier,\n  services?: helpers.RequiredParserServices,\n): boolean {\n  if (identifier.name !== 'require' && identifier.name !== 'define') {\n    return false;\n  }\n  if (callExpression.arguments.length !== 2 && callExpression.arguments.length !== 3) {\n    return false;\n  }\n  return (\n    helpers.isRequiredParserServices(services) &&\n    helpers.isFunction(callExpression.arguments[callExpression.arguments.length - 1], services)\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4324/javascript\n\nimport { Rule } from 'eslint';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { isRequiredParserServices, RequiredParserServices } from '../helpers';\nimport * as estree from 'estree';\nimport * as ts from 'typescript';\n\ntype ReturnedExpression = estree.Expression | undefined | null;\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      removeOrChangeType: 'Remove this return type or change it to a more specific.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n\n    if (isRequiredParserServices(services)) {\n      const returnedExpressions: ReturnedExpression[][] = [];\n      return {\n        ReturnStatement(node: estree.Node) {\n          if (returnedExpressions.length > 0) {\n            returnedExpressions[returnedExpressions.length - 1].push(\n              (node as estree.ReturnStatement).argument,\n            );\n          }\n        },\n        FunctionDeclaration() {\n          returnedExpressions.push([]);\n        },\n        'FunctionDeclaration:exit'(node: estree.Node) {\n          const returnType = (node as TSESTree.FunctionDeclaration).returnType;\n          if (\n            returnType &&\n            returnType.typeAnnotation.type === 'TSAnyKeyword' &&\n            returnedExpressions.length > 0 &&\n            allReturnTypesEqual(returnedExpressions[returnedExpressions.length - 1], services)\n          ) {\n            context.report({\n              messageId: 'removeOrChangeType',\n              loc: returnType.loc,\n            });\n          }\n          returnedExpressions.pop();\n        },\n      };\n    }\n    return {};\n  },\n};\n\nfunction allReturnTypesEqual(\n  returns: ReturnedExpression[],\n  services: RequiredParserServices,\n): boolean {\n  const firstReturnType = getTypeFromTreeNode(returns.pop(), services);\n  if (!!firstReturnType && !!isPrimitiveType(firstReturnType)) {\n    return returns.every(nextReturn => {\n      const nextReturnType = getTypeFromTreeNode(nextReturn, services);\n      return !!nextReturnType && nextReturnType.flags === firstReturnType.flags;\n    });\n  }\n  return false;\n}\n\nfunction getTypeFromTreeNode(node: ReturnedExpression, services: RequiredParserServices) {\n  const checker = services.program.getTypeChecker();\n  return checker.getTypeAtLocation(services.esTreeNodeToTSNodeMap.get(node as TSESTree.Node));\n}\n\nfunction isPrimitiveType({ flags }: ts.Type) {\n  return (\n    flags & ts.TypeFlags.BooleanLike ||\n    flags & ts.TypeFlags.NumberLike ||\n    flags & ts.TypeFlags.StringLike ||\n    flags & ts.TypeFlags.EnumLike\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5863/javascript\n\nimport { TSESLint, TSESTree } from '@typescript-eslint/utils';\nimport { Rule } from 'eslint';\nimport { areEquivalent } from 'eslint-plugin-sonarjs/lib/src/utils/equivalence';\nimport * as estree from 'estree';\nimport { Chai, isIdentifier, isLiteral, toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    if (!Chai.isImported(context)) {\n      return {};\n    }\n    return {\n      ExpressionStatement(node: estree.Node) {\n        const { expression } = node as estree.ExpressionStatement;\n        checkExpect(context, expression);\n        checkShould(context, expression);\n        checkAssert(context, expression);\n      },\n    };\n  },\n};\n\nfunction checkAssert(context: Rule.RuleContext, expression: estree.Expression) {\n  if (expression.type === 'CallExpression') {\n    const { callee, arguments: args } = expression;\n    if (callee.type === 'MemberExpression' && isIdentifier(callee.object, 'assert')) {\n      findDuplicates(context, args);\n    }\n  }\n}\n\nfunction checkExpect(context: Rule.RuleContext, expression: estree.Expression) {\n  let currentExpression: estree.Node = expression;\n  let args: estree.Node[] = [];\n\n  while (true) {\n    if (currentExpression.type === 'CallExpression') {\n      args = [...currentExpression.arguments, ...args];\n      currentExpression = currentExpression.callee;\n    } else if (currentExpression.type === 'MemberExpression') {\n      currentExpression = currentExpression.object;\n    } else if (isIdentifier(currentExpression, 'expect')) {\n      break;\n    } else {\n      return;\n    }\n  }\n\n  findDuplicates(context, args);\n}\n\nfunction checkShould(context: Rule.RuleContext, expression: estree.Expression) {\n  let currentExpression: estree.Node = expression;\n  let args: estree.Node[] = [];\n  let hasShould = false;\n\n  while (true) {\n    if (currentExpression.type === 'CallExpression') {\n      args = [...currentExpression.arguments, ...args];\n      currentExpression = currentExpression.callee;\n    } else if (currentExpression.type === 'MemberExpression') {\n      if (isIdentifier(currentExpression.property, 'should')) {\n        hasShould = true;\n      }\n      currentExpression = currentExpression.object;\n    } else if (isIdentifier(currentExpression, 'should')) {\n      break;\n    } else if (hasShould) {\n      args = [currentExpression, ...args];\n      break;\n    } else {\n      return;\n    }\n  }\n\n  findDuplicates(context, args);\n}\n\nfunction findDuplicates(context: Rule.RuleContext, args: estree.Node[]) {\n  const castedContext = context.sourceCode as unknown as TSESLint.SourceCode;\n  for (let i = 0; i < args.length; i++) {\n    for (let j = i + 1; j < args.length; j++) {\n      const duplicates = areEquivalent(\n        args[i] as TSESTree.Node,\n        args[j] as TSESTree.Node,\n        castedContext,\n      );\n      if (duplicates && !isLiteral(args[i])) {\n        const message = toEncodedMessage(`Replace this argument or its duplicate.`, [args[j]]);\n        context.report({ message, node: args[i] });\n      }\n    }\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6679/javascript\n\nimport { Rule } from 'eslint';\nimport { interceptReport } from '../helpers';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, (context, reportDescriptor) => {\n    rule.meta!.hasSuggestions = true;\n    if ('node' in reportDescriptor && 'messageId' in reportDescriptor) {\n      const { node, messageId, ...rest } = reportDescriptor,\n        operators = new Set(['===', '==', '!==', '!=']);\n\n      if (\n        node.type === 'BinaryExpression' &&\n        operators.has(node.operator) &&\n        node.left.type !== 'Literal'\n      ) {\n        const prefix = node.operator.startsWith('!') ? '' : '!',\n          value = context.sourceCode.getText(node.left),\n          suggest: Rule.SuggestionReportDescriptor[] = [\n            {\n              desc: 'Replace self-compare with Number.isNaN()',\n              fix: fixer => fixer.replaceText(node, `${prefix}Number.isNaN(${value})`),\n            },\n          ];\n\n        context.report({\n          node,\n          message: \"Use 'Number.isNaN()' to check for 'NaN' value\",\n          ...rest,\n          suggest,\n        });\n      }\n    }\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { eslintRules } from '../core';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(eslintRules['no-self-compare']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S105/javascript\n\nimport { Rule } from 'eslint';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      replaceTab: 'Replace all tab characters in this file by sequences of white-spaces.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      'Program:exit'() {\n        const firstTab = context.sourceCode.lines\n          .map((content, line) => ({ content, line }))\n          .find(t => t.content.includes('\\t'));\n\n        if (firstTab !== undefined) {\n          context.report({\n            messageId: 'replaceTab',\n            loc: { line: firstTab.line + 1, column: 0 },\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5257/javascript\n\nimport { Rule } from 'eslint';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport * as estree from 'estree';\nimport { isPresentationTable } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      noLayoutTable: 'Replace this layout table with a CSS layout.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      JSXOpeningElement(node: estree.Node) {\n        const jsxNode = node as unknown as TSESTree.JSXOpeningElement;\n        if (isPresentationTable(context, jsxNode)) {\n          context.report({\n            node,\n            messageId: 'noLayoutTable',\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport { getVariableFromName, interceptReport } from '../helpers';\n\n// core implementation of this rule raises false positives for generators\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, reportExempting(isReferencedInsideGenerators));\n}\n\nfunction reportExempting(\n  exemptionCondition: (context: Rule.RuleContext, node: estree.Identifier) => boolean,\n): (context: Rule.RuleContext, reportDescriptor: Rule.ReportDescriptor) => void {\n  return (context, reportDescriptor) => {\n    if ('node' in reportDescriptor) {\n      const node = reportDescriptor['node'] as estree.Identifier;\n      if (!exemptionCondition(context, node)) {\n        context.report(reportDescriptor);\n      }\n    }\n  };\n}\n\nfunction isReferencedInsideGenerators(context: Rule.RuleContext, node: estree.Identifier) {\n  const variable = getVariableFromName(context, node.name, node);\n  if (variable) {\n    for (const reference of variable.references) {\n      let scope: Scope.Scope | null = reference.from;\n      while (scope !== null && !scope.variables.includes(variable)) {\n        if (isGenerator(scope.block)) {\n          return true;\n        }\n        scope = scope.upper;\n      }\n    }\n  }\n  return false;\n\n  function isGenerator(node: estree.Node) {\n    return (\n      (node.type === 'FunctionDeclaration' || node.type === 'FunctionExpression') &&\n      node.generator === true\n    );\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { tsEslintRules } from '../typescript-eslint';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(tsEslintRules['no-this-alias']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3696/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isBinaryPlus, isStringLiteral, interceptReport } from '../helpers';\n\n// core implementation of this rule does not provide quick fixes\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.hasSuggestions = true;\n  return interceptReport(rule, (context, reportDescriptor) => {\n    const suggest: Rule.SuggestionReportDescriptor[] = [];\n    if ('node' in reportDescriptor) {\n      const { argument: thrown } = reportDescriptor.node as estree.ThrowStatement;\n      if (isStringLike(thrown)) {\n        const thrownText = context.sourceCode.getText(thrown);\n        suggest.push({\n          desc: 'Throw an error object',\n          fix: fixer => fixer.replaceText(thrown, `new Error(${thrownText})`),\n        });\n      }\n    }\n    context.report({\n      ...reportDescriptor,\n      suggest,\n    });\n  });\n}\n\nfunction isStringLike(node: estree.Node): boolean {\n  return isStringLiteral(node) || isStringConcatenation(node);\n}\n\nfunction isStringConcatenation(node: estree.Node): boolean {\n  return isBinaryPlus(node) && (isStringLike(node.left) || isStringLike(node.right));\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { eslintRules } from '../core';\nimport { decorate } from './decorator';\n\n/**\n * TypeScript ESLint implementation of 'no-throw-literal' does not support JavaScript code.\n * Therefore, we decorate ESLint's implemention of the rule.\n */\nexport const rule = decorate(eslintRules['no-throw-literal']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4822/javascript\n\nimport { Rule, SourceCode } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { isRequiredParserServices, isThenable, toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\ntype CallLikeExpression =\n  | TSESTree.CallExpression\n  | TSESTree.NewExpression\n  | TSESTree.AwaitExpression;\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (isRequiredParserServices(services)) {\n      return {\n        TryStatement: (node: estree.Node) =>\n          visitTryStatement(node as TSESTree.TryStatement, context, services),\n      };\n    }\n    return {};\n  },\n};\n\nfunction visitTryStatement(\n  tryStmt: TSESTree.TryStatement,\n  context: Rule.RuleContext,\n  services: any,\n) {\n  if (tryStmt.handler) {\n    // without '.catch()'\n    const openPromises: TSESTree.Node[] = [];\n    // with '.catch()'\n    const capturedPromises: TSESTree.Node[] = [];\n\n    let hasPotentiallyThrowingCalls = false;\n    CallLikeExpressionVisitor.getCallExpressions(tryStmt.block, context).forEach(callLikeExpr => {\n      if (\n        callLikeExpr.type === 'AwaitExpression' ||\n        !isThenable(callLikeExpr as estree.Node, services)\n      ) {\n        hasPotentiallyThrowingCalls = true;\n        return;\n      }\n\n      if (isAwaitLike(callLikeExpr) || isThened(callLikeExpr) || isCatch(callLikeExpr)) {\n        return;\n      }\n\n      (isCaught(callLikeExpr) ? capturedPromises : openPromises).push(callLikeExpr);\n    });\n\n    if (!hasPotentiallyThrowingCalls) {\n      checkForWrongCatch(tryStmt, openPromises, context);\n      checkForUselessCatch(tryStmt, openPromises, capturedPromises, context);\n    }\n  }\n}\n\nclass CallLikeExpressionVisitor {\n  private readonly callLikeExpressions: CallLikeExpression[] = [];\n\n  static getCallExpressions(node: TSESTree.Node, context: Rule.RuleContext) {\n    const visitor = new CallLikeExpressionVisitor();\n    visitor.visit(node, context);\n    return visitor.callLikeExpressions;\n  }\n\n  private visit(root: TSESTree.Node, context: Rule.RuleContext) {\n    const visitNode = (node: TSESTree.Node) => {\n      switch (node.type) {\n        case 'AwaitExpression':\n        case 'CallExpression':\n        case 'NewExpression':\n          this.callLikeExpressions.push(node);\n          break;\n        case 'FunctionDeclaration':\n        case 'FunctionExpression':\n        case 'ArrowFunctionExpression':\n          return;\n      }\n      childrenOf(node, context.sourceCode.visitorKeys).forEach(visitNode);\n    };\n    visitNode(root);\n  }\n}\n\nfunction checkForWrongCatch(\n  tryStmt: TSESTree.TryStatement,\n  openPromises: TSESTree.Node[],\n  context: Rule.RuleContext,\n) {\n  if (openPromises.length > 0) {\n    const ending = openPromises.length > 1 ? 's' : '';\n    const message = `Consider using 'await' for the promise${ending} inside this 'try' or replace it with 'Promise.prototype.catch(...)' usage${ending}.`;\n    const token = context.sourceCode.getFirstToken(tryStmt as estree.Node);\n    context.report({\n      message: toEncodedMessage(message, openPromises, Array(openPromises.length).fill('Promise')),\n      loc: token!.loc,\n    });\n  }\n}\n\nfunction checkForUselessCatch(\n  tryStmt: TSESTree.TryStatement,\n  openPromises: TSESTree.Node[],\n  capturedPromises: TSESTree.Node[],\n  context: Rule.RuleContext,\n) {\n  if (openPromises.length === 0 && capturedPromises.length > 0) {\n    const ending = capturedPromises.length > 1 ? 's' : '';\n    const message = `Consider removing this 'try' statement as promise${ending} rejection is already captured by '.catch()' method.`;\n    const token = context.sourceCode.getFirstToken(tryStmt as estree.Node);\n    context.report({\n      message: toEncodedMessage(\n        message,\n        capturedPromises,\n        Array(capturedPromises.length).fill('Caught promise'),\n      ),\n      loc: token!.loc,\n    });\n  }\n}\n\nfunction isAwaitLike(callExpr: CallLikeExpression) {\n  return (\n    callExpr.parent &&\n    (callExpr.parent.type === 'AwaitExpression' || callExpr.parent.type === 'YieldExpression')\n  );\n}\n\nfunction isThened(callExpr: CallLikeExpression) {\n  return (\n    callExpr.parent &&\n    callExpr.parent.type === 'MemberExpression' &&\n    callExpr.parent.property.type === 'Identifier' &&\n    callExpr.parent.property.name === 'then'\n  );\n}\n\nfunction isCaught(callExpr: CallLikeExpression) {\n  return (\n    callExpr.parent &&\n    callExpr.parent.type === 'MemberExpression' &&\n    callExpr.parent.property.type === 'Identifier' &&\n    callExpr.parent.property.name === 'catch'\n  );\n}\n\nfunction isCatch(callExpr: CallLikeExpression) {\n  return (\n    callExpr.type === 'CallExpression' &&\n    callExpr.callee.type === 'MemberExpression' &&\n    callExpr.callee.property.type === 'Identifier' &&\n    callExpr.callee.property.name === 'catch'\n  );\n}\n\nfunction childrenOf(node: TSESTree.Node, visitorKeys: SourceCode.VisitorKeys) {\n  const keys = visitorKeys[node.type];\n  const children = [];\n  if (keys) {\n    for (const key of keys) {\n      const child = (node as any)[key];\n      if (Array.isArray(child)) {\n        children.push(...child);\n      } else {\n        children.push(child);\n      }\n    }\n  }\n  return children.filter(Boolean);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4623/javascript\n\nimport { Rule } from 'eslint';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { isRequiredParserServices, isUndefined, RequiredParserServices } from '../helpers';\nimport * as estree from 'estree';\nimport * as ts from 'typescript';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      removeUndefined: 'Remove this redundant \"undefined\".',\n      suggestRemoveUndefined: 'Remove this redundant argument',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (isRequiredParserServices(services)) {\n      return {\n        CallExpression: (node: estree.Node) => {\n          const call = node as estree.CallExpression;\n          const { arguments: args } = call;\n          if (args.length === 0) {\n            return;\n          }\n\n          const lastArgument = args[args.length - 1];\n          if (isUndefined(lastArgument) && isOptionalParameter(args.length - 1, call, services)) {\n            context.report({\n              messageId: 'removeUndefined',\n              node: lastArgument,\n              suggest: [\n                {\n                  messageId: 'suggestRemoveUndefined',\n                  fix: fixer => {\n                    if (call.arguments.length === 1) {\n                      const openingParen = context.sourceCode.getTokenAfter(call.callee)!;\n                      const closingParen = context.sourceCode.getLastToken(node)!;\n                      const [, begin] = openingParen.range;\n                      const [end] = closingParen.range;\n                      return fixer.removeRange([begin, end]);\n                    } else {\n                      const [, begin] = args[args.length - 2].range!;\n                      const [, end] = lastArgument.range!;\n                      return fixer.removeRange([begin, end]);\n                    }\n                  },\n                },\n              ],\n            });\n          }\n        },\n      };\n    }\n    return {};\n  },\n};\n\nfunction isOptionalParameter(\n  paramIndex: number,\n  node: estree.CallExpression,\n  services: RequiredParserServices,\n) {\n  const signature = services.program\n    .getTypeChecker()\n    .getResolvedSignature(\n      services.esTreeNodeToTSNodeMap.get(node as TSESTree.Node) as ts.CallLikeExpression,\n    );\n  if (signature) {\n    const declaration = signature.declaration;\n    if (declaration && isFunctionLikeDeclaration(declaration)) {\n      const { parameters } = declaration;\n      const parameter = parameters[paramIndex];\n      return parameter && (parameter.initializer || parameter.questionToken);\n    }\n  }\n  return false;\n}\n\nfunction isFunctionLikeDeclaration(\n  declaration: ts.Declaration,\n): declaration is ts.FunctionLikeDeclarationBase {\n  return [\n    ts.SyntaxKind.FunctionDeclaration,\n    ts.SyntaxKind.FunctionExpression,\n    ts.SyntaxKind.ArrowFunction,\n    ts.SyntaxKind.MethodDeclaration,\n    ts.SyntaxKind.Constructor,\n    ts.SyntaxKind.GetAccessor,\n    ts.SyntaxKind.SetAccessor,\n  ].includes(declaration.kind);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2138/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isUndefined } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      useNull: 'Use null instead.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    function raiseOnUndefined(node: estree.Node) {\n      if (isUndefined(node)) {\n        context.report({\n          messageId: 'useNull',\n          node,\n        });\n      }\n    }\n    return {\n      VariableDeclarator: (node: estree.Node) => {\n        const { init } = node as estree.VariableDeclarator;\n        if (init) {\n          raiseOnUndefined(init);\n        }\n      },\n      AssignmentExpression: (node: estree.Node) => {\n        const { right } = node as estree.AssignmentExpression;\n        raiseOnUndefined(right);\n      },\n      Property: (node: estree.Node) => {\n        const { value } = node as estree.Property;\n        raiseOnUndefined(value);\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2681/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\n\nconst NestingStatementLike = [\n  'IfStatement',\n  'ForStatement',\n  'ForInStatement',\n  'ForOfStatement',\n  'WhileStatement',\n];\n\ntype Statement = estree.Statement | estree.ModuleDeclaration;\n\ntype NestingStatement =\n  | estree.IfStatement\n  | estree.ForStatement\n  | estree.ForInStatement\n  | estree.ForOfStatement\n  | estree.WhileStatement;\n\nexport const rule: Rule.RuleModule = {\n  create(context: Rule.RuleContext) {\n    return {\n      Program: (node: estree.Node) => checkStatements((node as estree.Program).body, context),\n      BlockStatement: (node: estree.Node) =>\n        checkStatements((node as estree.BlockStatement).body, context),\n      TSModuleBlock: (node: estree.Node) =>\n        checkStatements((node as unknown as TSESTree.TSModuleBlock).body as Statement[], context),\n    };\n  },\n};\n\nfunction checkStatements(statements: Statement[], context: Rule.RuleContext) {\n  chain(statements)\n    .filter(chainedStatements => chainedStatements.areUnenclosed())\n    .forEach(unenclosedConsecutives => {\n      if (unenclosedConsecutives.areAdjacent()) {\n        raiseAdjacenceIssue(unenclosedConsecutives, context);\n      } else if (unenclosedConsecutives.areBothIndented()) {\n        raiseBlockIssue(\n          unenclosedConsecutives,\n          countStatementsInTheSamePile(unenclosedConsecutives.prev, statements),\n          context,\n        );\n      } else if (unenclosedConsecutives.areInlinedAndIndented()) {\n        raiseInlineAndIndentedIssue(unenclosedConsecutives, context);\n      }\n    });\n}\n\nfunction chain(statements: Statement[]): ChainedStatements[] {\n  return statements\n    .reduce((result, statement, i, array) => {\n      if (i < array.length - 1 && isNestingStatement(statement)) {\n        result.push({ prev: statement, next: array[i + 1] });\n      }\n      return result;\n    }, new Array<{ prev: NestingStatement; next: Statement }>())\n    .map(pair => {\n      return new ChainedStatements(pair.prev, extractLastBody(pair.prev), pair.next);\n    });\n}\n\nfunction extractLastBody(statement: NestingStatement) {\n  if (statement.type === 'IfStatement') {\n    if (statement.alternate) {\n      return statement.alternate;\n    } else {\n      return statement.consequent;\n    }\n  } else {\n    return statement.body;\n  }\n}\n\nfunction countStatementsInTheSamePile(reference: Statement, statements: Statement[]) {\n  const startOfPile = position(reference).start;\n  let lastLineOfPile = startOfPile.line;\n  for (const statement of statements) {\n    const currentPosition = position(statement);\n    const currentLine = currentPosition.end.line;\n    const currentIndentation = currentPosition.start.column;\n    if (currentLine > startOfPile.line) {\n      if (currentIndentation === startOfPile.column) {\n        lastLineOfPile = currentPosition.end.line;\n      } else {\n        break;\n      }\n    }\n  }\n  return lastLineOfPile - startOfPile.line + 1;\n}\n\nfunction raiseAdjacenceIssue(adjacentStatements: ChainedStatements, context: Rule.RuleContext) {\n  context.report({\n    message:\n      `This statement will not be executed ${adjacentStatements.includedStatementQualifier()}; only the first statement will be. ` +\n      `The rest will execute ${adjacentStatements.excludedStatementsQualifier()}.`,\n    node: adjacentStatements.next,\n  });\n}\n\nfunction raiseBlockIssue(\n  piledStatements: ChainedStatements,\n  sizeOfPile: number,\n  context: Rule.RuleContext,\n) {\n  context.report({\n    message:\n      `This line will not be executed ${piledStatements.includedStatementQualifier()}; only the first line of this ${sizeOfPile}-line block will be. ` +\n      `The rest will execute ${piledStatements.excludedStatementsQualifier()}.`,\n    node: piledStatements.next,\n  });\n}\n\nfunction raiseInlineAndIndentedIssue(\n  chainedStatements: ChainedStatements,\n  context: Rule.RuleContext,\n) {\n  context.report({\n    message:\n      `This line will not be executed ${chainedStatements.includedStatementQualifier()}; only the first statement will be. ` +\n      `The rest will execute ${chainedStatements.excludedStatementsQualifier()}.`,\n    node: chainedStatements.next,\n  });\n}\n\nfunction isNestingStatement(node: estree.Node): node is NestingStatement {\n  return NestingStatementLike.includes(node.type);\n}\n\nclass ChainedStatements {\n  private readonly positions: Positions;\n\n  constructor(\n    readonly topStatement: NestingStatement,\n    readonly prev: Statement,\n    readonly next: Statement,\n  ) {\n    const topPosition = position(topStatement);\n    const prevPosition = position(prev);\n    const nextPosition = position(next);\n    this.positions = {\n      prevTopStart: topPosition.start,\n      prevTopEnd: topPosition.end,\n      prevStart: prevPosition.start,\n      prevEnd: prevPosition.end,\n      nextStart: nextPosition.start,\n      nextEnd: nextPosition.end,\n    };\n  }\n\n  public areUnenclosed(): boolean {\n    return this.prev.type !== 'BlockStatement';\n  }\n\n  public areAdjacent(): boolean {\n    return this.positions.prevEnd.line === this.positions.nextStart.line;\n  }\n\n  public areBothIndented(): boolean {\n    return (\n      this.positions.prevStart.column === this.positions.nextStart.column && this.prevIsIndented()\n    );\n  }\n\n  public areInlinedAndIndented(): boolean {\n    return (\n      this.positions.prevStart.line === this.positions.prevTopEnd.line &&\n      this.positions.nextStart.column > this.positions.prevTopStart.column\n    );\n  }\n\n  public includedStatementQualifier(): string {\n    return this.topStatement.type === 'IfStatement' ? 'conditionally' : 'in a loop';\n  }\n\n  public excludedStatementsQualifier(): string {\n    return this.topStatement.type === 'IfStatement' ? 'unconditionally' : 'only once';\n  }\n\n  private prevIsIndented(): boolean {\n    return this.positions.prevStart.column > this.positions.prevTopStart.column;\n  }\n}\n\ntype Positions = {\n  prevTopStart: estree.Position;\n  prevTopEnd: estree.Position;\n  prevStart: estree.Position;\n  prevEnd: estree.Position;\n  nextStart: estree.Position;\n  nextEnd: estree.Position;\n};\n\nfunction position(node: estree.Node) {\n  return (node as TSESTree.Node).loc;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6486/javascript\n\n// inspired from `no-array-index` from `eslint-plugin-react`:\n// https://github.com/jsx-eslint/eslint-plugin-react/blob/0a2f6b7e9df32215fcd4e3061ec69ea3f2eef793/lib/rules/no-array-index-key.js#L16\n\nimport { Rule } from 'eslint';\nimport { isMemberExpression } from '../helpers';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport * as estree from 'estree';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      noGeneratedKeys: 'Do not use generated values for keys of React list components.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      \"JSXAttribute[name.name='key']\": (pNode: estree.Node) => {\n        // hack: it's not possible to type the argument node from TSESTree\n        const node = pNode as unknown as TSESTree.JSXAttribute;\n\n        const value = node.value;\n        if (!value || value.type !== 'JSXExpressionContainer') {\n          // key='foo' or just simply 'key'\n          return;\n        }\n\n        checkPropValue(context, value.expression);\n      },\n    };\n  },\n};\n\nfunction checkPropValue(context: Rule.RuleContext, node: TSESTree.Node) {\n  if (isGeneratedExpression(node)) {\n    // key={bar}\n    context.report({\n      messageId: 'noGeneratedKeys',\n      node: node as estree.Node,\n    });\n    return;\n  }\n\n  if (node.type === 'TemplateLiteral') {\n    // key={`foo-${bar}`}\n    node.expressions.filter(isGeneratedExpression).forEach(() => {\n      context.report({\n        messageId: 'noGeneratedKeys',\n        node: node as estree.Node,\n      });\n    });\n\n    return;\n  }\n\n  if (node.type === 'BinaryExpression') {\n    // key={'foo' + bar}\n    const callExpressions = getCallExpressionsFromBinaryExpression(\n      node,\n    ) as TSESTree.CallExpression[];\n\n    callExpressions.filter(isGeneratedExpression).forEach(() => {\n      context.report({\n        messageId: 'noGeneratedKeys',\n        node: node as estree.Node,\n      });\n    });\n\n    return;\n  }\n\n  if (\n    node.type === 'CallExpression' &&\n    node.callee &&\n    node.callee.type === 'MemberExpression' &&\n    node.callee.object &&\n    isGeneratedExpression(node.callee.object) &&\n    node.callee.property &&\n    node.callee.property.type === 'Identifier' &&\n    node.callee.property.name === 'toString'\n  ) {\n    // key={bar.toString()}\n    context.report({\n      messageId: 'noGeneratedKeys',\n      node: node as estree.Node,\n    });\n    return;\n  }\n\n  if (\n    node.type === 'CallExpression' &&\n    node.callee &&\n    node.callee.type === 'Identifier' &&\n    node.callee.name === 'String' &&\n    Array.isArray(node.arguments) &&\n    node.arguments.length > 0 &&\n    isGeneratedExpression(node.arguments[0])\n  ) {\n    // key={String(bar)}\n    context.report({\n      messageId: 'noGeneratedKeys',\n      node: node.arguments[0] as estree.Node,\n    });\n  }\n}\n\nfunction isGeneratedExpression(node: TSESTree.Node) {\n  return isMathRandom(node) || isDateNow(node);\n\n  function isMathRandom(node: TSESTree.Node) {\n    return (\n      node.type === 'CallExpression' &&\n      isMemberExpression(node.callee as estree.Node, 'Math', 'random')\n    );\n  }\n\n  function isDateNow(node: TSESTree.Node) {\n    return (\n      node.type === 'CallExpression' &&\n      isMemberExpression(node.callee as estree.Node, 'Date', 'now')\n    );\n  }\n}\n\nfunction getCallExpressionsFromBinaryExpression(side: TSESTree.Node) {\n  if (side.type === 'CallExpression') {\n    return side;\n  }\n\n  if (side.type === 'BinaryExpression') {\n    // recurse\n    const left: any = getCallExpressionsFromBinaryExpression(side.left);\n    const right: any = getCallExpressionsFromBinaryExpression(side.right);\n    return [].concat(left, right).filter(Boolean);\n  }\n\n  return null;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6747/javascript\n\nimport { Rule } from 'eslint';\nimport { interceptReport } from '../helpers';\n\n/**\n * The core implementation of the rule includes a fix without a message.\n * That fix suggests using a standard property name that is available in\n * the report data. This decorator turns the reported fix into a suggestion\n * and adds to it a dynamic description rather than a fixed one.\n */\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.hasSuggestions = true;\n  return interceptReport(rule, (context, descriptor) => {\n    const { messageId, fix, data, ...rest } = descriptor as any;\n    if (messageId !== 'unknownPropWithStandardName') {\n      context.report(descriptor);\n      return;\n    }\n    const suggest: Rule.SuggestionReportDescriptor[] = [\n      {\n        desc: `Replace with '${data.standardName}'`,\n        fix,\n      },\n    ];\n    context.report({ messageId, data, suggest, ...rest });\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6747/javascript\n\nimport { Rule } from 'eslint';\nimport react from 'eslint-plugin-react';\nimport jsxA11y from 'eslint-plugin-jsx-a11y';\nimport { interceptReport, mergeRules } from '../helpers';\nimport { decorate } from './decorator';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nconst noUnkownProp = react.rules['no-unknown-property'];\nconst decoratedNoUnkownProp = decorate(noUnkownProp);\n\n/**\n * We keep a single occurence of issues raised by both rules, keeping the ones raised by 'aria-props'\n * in case of duplicate.\n * The current logic relies on the fact that the listener of 'aria-props' runs first because\n * it is alphabetically \"smaller\", which is how we set them up in mergeRules.\n */\n\n/**\n * start offsets of nodes that raised issues in eslint-plugin-jsx-a11y's aria-props\n */\nconst flaggedNodeStarts = new Map();\n\nconst ariaPropsRule = jsxA11y.rules['aria-props'];\nconst decoratedAriaPropsRule = interceptReport(ariaPropsRule, (context, descriptor) => {\n  if ('node' in descriptor) {\n    const start = (descriptor.node as TSESTree.Node).range[0];\n    if (!flaggedNodeStarts.get(start)) {\n      flaggedNodeStarts.set(start, true);\n      context.report(descriptor);\n    }\n  }\n});\n\nconst twiceDecoratedNoUnkownProp = interceptReport(decoratedNoUnkownProp, (context, descriptor) => {\n  if ('node' in descriptor) {\n    const start = (descriptor.node as TSESTree.Node).range[0];\n    if (!flaggedNodeStarts.get(start)) {\n      context.report(descriptor);\n    }\n  }\n});\n\nexport type Options = [\n  {\n    ignore: Array<string>;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      ...decoratedAriaPropsRule.meta!.messages,\n      ...twiceDecoratedNoUnkownProp.meta!.messages,\n    },\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          ignore: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n    ],\n  },\n\n  create(context: Rule.RuleContext) {\n    const ariaPropsListener: Rule.RuleListener = decoratedAriaPropsRule.create(context);\n    const noUnkownPropListener: Rule.RuleListener = twiceDecoratedNoUnkownProp.create(context);\n\n    return mergeRules(ariaPropsListener, noUnkownPropListener);\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1763/javascript\n\nimport { Rule, AST } from 'eslint';\nimport * as estree from 'estree';\nimport { interceptReport, removeNodeWithLeadingWhitespaces } from '../helpers';\n\n// core implementation of this rule does not provide quick fixes\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.hasSuggestions = true;\n  return interceptReport(rule, (context, reportDescriptor) => {\n    const loc = (reportDescriptor as any).loc as AST.SourceLocation;\n    const node = (reportDescriptor as any).node as estree.Node;\n    context.report({\n      ...reportDescriptor,\n      suggest: [\n        {\n          desc: 'Remove unreachable code',\n          fix: fixer =>\n            removeNodeWithLeadingWhitespaces(\n              context,\n              node,\n              fixer,\n              context.sourceCode.getIndexFromLoc(loc.end),\n            ),\n        },\n      ],\n    });\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { eslintRules } from '../core';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(eslintRules['no-unreachable']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6791/javascript\n\nimport { Rule /*, AST*/ } from 'eslint';\nimport * as estree from 'estree';\nimport { interceptReportForReact } from '../helpers';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.messages!['unsafeMethod'] = '{{method}} is unsafe for use in async rendering.';\n  return interceptReportForReact(rule, (context, descriptor) => {\n    const {\n      node: { key },\n    } = descriptor as unknown as {\n      node: estree.Property | estree.PropertyDefinition | estree.MethodDefinition;\n    };\n    context.report({ ...descriptor, loc: key.loc! });\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport react from 'eslint-plugin-react';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(react.rules['no-unsafe']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5042/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isIdentifier, isLiteral, getValueOfExpression, getFullyQualifiedName } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      safeExpanding: 'Make sure that expanding this archive file is safe here.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    function canBeProperty(prop: estree.Property | estree.SpreadElement, name: string) {\n      return (\n        prop.type === 'SpreadElement' ||\n        isIdentifier(prop.key, name) ||\n        (isLiteral(prop.key) && prop.key.value === name)\n      );\n    }\n\n    function isSensiteTarCall(call: estree.CallExpression, fqn: string | null) {\n      if (fqn === 'tar.x') {\n        const firstArg = call.arguments.length > 0 ? call.arguments[0] : null;\n        if (!firstArg) {\n          return false;\n        }\n        const firstArgValue = getValueOfExpression(context, firstArg, 'ObjectExpression');\n        return (\n          !!firstArgValue && !firstArgValue.properties.some(prop => canBeProperty(prop, 'filter'))\n        );\n      }\n      return false;\n    }\n\n    function isSensiteExtractZipCall(call: estree.CallExpression, fqn: string | null) {\n      if (fqn === 'extract-zip') {\n        const secondArg = call.arguments.length > 1 ? call.arguments[1] : null;\n        if (!secondArg) {\n          return false;\n        }\n        const secondArgValue = getValueOfExpression(context, secondArg, 'ObjectExpression');\n        return (\n          !!secondArgValue &&\n          !secondArgValue.properties.some(prop => canBeProperty(prop, 'onEntry'))\n        );\n      }\n      return false;\n    }\n\n    return {\n      CallExpression(node: estree.Node) {\n        const call = node as estree.CallExpression;\n        const fqn = getFullyQualifiedName(context, call);\n        if (\n          isSensiteTarCall(call, fqn) ||\n          isSensiteExtractZipCall(call, fqn) ||\n          fqn === 'jszip.loadAsync' ||\n          fqn === 'yauzl.open' ||\n          fqn === 'adm-zip.extractAllTo'\n        ) {\n          context.report({\n            messageId: 'safeExpanding',\n            node: call.callee,\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6478/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { RuleContext, functionLike, interceptReportForReact } from '../helpers';\nimport { getMainFunctionTokenLocation } from 'eslint-plugin-sonarjs/lib/src/utils/locations';\nimport { TSESTree } from '@typescript-eslint/utils';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReportForReact(rule, (context, report) => {\n    const message =\n      'Move this component definition out of the parent component and pass data as props.';\n    const { node } = report as { node: estree.Node };\n    const loc = getMainNodeLocation(node, context);\n    if (loc) {\n      context.report({ ...report, loc, message });\n    } else {\n      context.report({ ...report, message });\n    }\n  });\n\n  function getMainNodeLocation(node: estree.Node, context: Rule.RuleContext) {\n    /* class components */\n    if (node.type === 'ClassDeclaration' || node.type === 'ClassExpression') {\n      if (node.id) {\n        return node.id.loc;\n      } else {\n        return context.sourceCode.getFirstToken(node, token => token.value === 'class')?.loc;\n      }\n    }\n\n    /* functional components */\n    if (functionLike.has(node.type)) {\n      const fun = node as unknown as TSESTree.FunctionLike;\n      const ctx = context as unknown as RuleContext;\n      return getMainFunctionTokenLocation(fun, fun.parent, ctx) as estree.SourceLocation;\n    }\n\n    /* should not happen */\n    return node.loc;\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport react from 'eslint-plugin-react';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(react.rules['no-unstable-nested-components']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3984/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getParent } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      throwOrRemoveError: 'Throw this error or remove this useless statement.',\n      suggestThrowError: 'Throw this error',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    function looksLikeAnError(expression: estree.Expression | estree.Super): boolean {\n      const text = context.sourceCode.getText(expression);\n      return text.endsWith('Error') || text.endsWith('Exception');\n    }\n\n    return {\n      'ExpressionStatement > NewExpression'(node: estree.Node) {\n        const expression = (node as estree.NewExpression).callee;\n        if (looksLikeAnError(expression)) {\n          context.report({\n            messageId: 'throwOrRemoveError',\n            node,\n            suggest: [\n              {\n                messageId: 'suggestThrowError',\n                fix: fixer => fixer.insertTextBefore(getParent(context, node)!, 'throw '),\n              },\n            ],\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { interceptReport } from '../helpers';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(\n    rule,\n    reportExempting(\n      expr =>\n        isNegatedIife(expr) ||\n        containsChaiExpect(expr) ||\n        containsValidChaiShould(expr) ||\n        isAuraLightningComponent(expr) ||\n        isSequenceWithSideEffects(expr),\n    ),\n  );\n}\n\nfunction reportExempting(\n  exemptionCondition: (expr: estree.Expression) => boolean,\n): (context: Rule.RuleContext, reportDescriptor: Rule.ReportDescriptor) => void {\n  return (context, reportDescriptor) => {\n    if ('node' in reportDescriptor) {\n      const n: estree.Node = reportDescriptor['node'];\n      const expr = (n as estree.ExpressionStatement).expression;\n      if (!exemptionCondition(expr)) {\n        context.report(reportDescriptor);\n      }\n    }\n  };\n}\n\nfunction containsChaiExpect(node: estree.Node): boolean {\n  if (node.type === 'CallExpression') {\n    if (node.callee.type === 'Identifier' && node.callee.name === 'expect') {\n      return true;\n    } else {\n      return containsChaiExpect(node.callee);\n    }\n  } else if (node.type === 'MemberExpression') {\n    return containsChaiExpect(node.object);\n  }\n  return false;\n}\n\nfunction containsValidChaiShould(node: estree.Node, isSubexpr = false): boolean {\n  if (node.type === 'CallExpression') {\n    return containsValidChaiShould(node.callee, true);\n  } else if (node.type === 'MemberExpression') {\n    if (node.property && node.property.type === 'Identifier' && node.property.name === 'should') {\n      // Expressions like `x.should` are valid only as subexpressions, not on top level\n      return isSubexpr;\n    } else {\n      return containsValidChaiShould(node.object, true);\n    }\n  }\n  return false;\n}\n\nfunction isNegatedIife(node: estree.Node): boolean {\n  return node.type === 'UnaryExpression' && node.operator === '!' && isIife(node.argument);\n}\n\nfunction isIife(node: estree.Node): boolean {\n  return (\n    node.type === 'CallExpression' &&\n    (node.callee.type === 'FunctionExpression' || node.callee.type === 'ArrowFunctionExpression')\n  );\n}\n\nfunction isSequenceWithSideEffects(node: estree.Node): boolean {\n  return (\n    node.type === 'SequenceExpression' &&\n    node.expressions[node.expressions.length - 1].type === 'AssignmentExpression'\n  );\n}\n\nfunction isAuraLightningComponent(node: estree.Node): boolean {\n  return (\n    node.type === 'ObjectExpression' &&\n    node.properties.length > 0 &&\n    (node as TSESTree.Node).parent?.parent?.type === 'Program'\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { tsEslintRules } from '../typescript-eslint';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(tsEslintRules['no-unused-expressions']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1172/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\n\ntype FunctionLike =\n  | TSESTree.ArrowFunctionExpression\n  | TSESTree.FunctionDeclaration\n  | TSESTree.FunctionExpression;\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      removeOrRenameParameter:\n        'Remove the unused function parameter \"{{param}}\" or rename it to \"_{{param}}\" to make intention explicit.',\n      suggestRemoveParameter: 'Remove \"{{param}}\" (beware of call sites)',\n      suggestRenameParameter: 'Rename \"{{param}}\" to \"_{{param}}\"',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      'FunctionDeclaration, FunctionExpression'(node: estree.Node) {\n        reportUnusedArgument(\n          node,\n          (node as estree.FunctionDeclaration | estree.FunctionExpression).id,\n          context,\n        );\n      },\n      ArrowFunctionExpression: (node: estree.Node) => {\n        reportUnusedArgument(node, undefined, context);\n      },\n    };\n  },\n};\n\nfunction reportUnusedArgument(\n  node: estree.Node,\n  functionId: estree.Identifier | undefined | null,\n  context: Rule.RuleContext,\n) {\n  const parent = (node as TSESTree.Node).parent;\n  if (parent && parent.type === 'Property' && parent.kind === 'set') {\n    return;\n  }\n\n  if (\n    context.sourceCode\n      .getScope(node)\n      .variables.some(\n        v => v.name === 'arguments' && v.identifiers.length === 0 && v.references.length > 0,\n      )\n  ) {\n    return;\n  }\n\n  let parametersVariable = context.sourceCode.getDeclaredVariables(node);\n\n  if (functionId) {\n    parametersVariable = parametersVariable.filter(v => v.name !== functionId.name);\n  }\n\n  for (const param of parametersVariable) {\n    if (\n      isUnusedVariable(param) &&\n      !isIgnoredParameter(param) &&\n      !isParameterProperty(param) &&\n      !isThisParameter(param)\n    ) {\n      context.report({\n        messageId: 'removeOrRenameParameter',\n        node: param.identifiers[0],\n        data: {\n          param: param.name,\n        },\n        suggest: getSuggestions(param, context),\n      });\n    }\n  }\n}\n\nfunction getSuggestions(paramVariable: Scope.Variable, context: Rule.RuleContext) {\n  const paramIdentifier = paramVariable.identifiers[0];\n  const suggestions: Rule.SuggestionReportDescriptor[] = [\n    {\n      messageId: 'suggestRenameParameter',\n      data: {\n        param: paramVariable.name,\n      },\n      fix: fixer => fixer.insertTextBefore(paramIdentifier, '_'),\n    },\n  ];\n  const func = paramVariable.defs[0].node as FunctionLike;\n  if ((paramIdentifier as TSESTree.Node).parent === func) {\n    suggestions.push(getParameterRemovalSuggestion(func, paramVariable, paramIdentifier, context));\n  }\n  return suggestions;\n}\n\nfunction getParameterRemovalSuggestion(\n  func: FunctionLike,\n  paramVariable: Scope.Variable,\n  paramIdentifier: estree.Identifier,\n  context: Rule.RuleContext,\n): Rule.SuggestionReportDescriptor {\n  return {\n    messageId: 'suggestRemoveParameter',\n    data: {\n      param: paramVariable.name,\n    },\n    fix: fixer => {\n      const paramIndex = func.params.indexOf(paramIdentifier as TSESTree.Parameter);\n      const param = func.params[paramIndex] as estree.Node;\n      if (func.params.length === 1) {\n        const openingParenthesis = context.sourceCode.getTokenBefore(param);\n        const closingParenthesis = context.sourceCode.getTokenAfter(\n          param,\n          token => token.value === ')',\n        );\n        let [start, end] = param.range!;\n        if (openingParenthesis && openingParenthesis.value === '(') {\n          start = openingParenthesis.range[0];\n          end = closingParenthesis!.range[1];\n        }\n        return fixer.replaceTextRange([start, end], '()');\n      } else if (func.params.length - 1 === paramIndex) {\n        const commaAfter = context.sourceCode.getTokenAfter(param, token => token.value === ',');\n        const commaBefore = context.sourceCode.getTokenBefore(param, token => token.value === ',')!;\n        let start = commaBefore.range[1];\n        let end = param.range![1];\n        if (commaAfter) {\n          end = commaAfter.range[1];\n        } else {\n          start = commaBefore.range[0];\n        }\n        return fixer.removeRange([start, end]);\n      } else {\n        const [start] = func.params[paramIndex].range;\n        const [end] = func.params[paramIndex + 1].range;\n        return fixer.removeRange([start, end]);\n      }\n    },\n  };\n}\n\nfunction isUnusedVariable(variable: Scope.Variable) {\n  const refs = variable.references;\n  //Parameter with default value has one reference, but should still be considered as unused.\n  return refs.length === 0 || (refs.length === 1 && refs[0].init);\n}\n\nfunction isIgnoredParameter(variable: Scope.Variable) {\n  return variable.name.startsWith('_');\n}\n\nexport function isParameterProperty(variable: Scope.Variable) {\n  return variable.defs.some(def => {\n    const parent = (def.name as TSESTree.Node).parent;\n\n    return (\n      parent?.type === 'TSParameterProperty' ||\n      (parent?.type === 'AssignmentPattern' && parent.parent?.type === 'TSParameterProperty')\n    );\n  });\n}\n\nfunction isThisParameter(variable: Scope.Variable) {\n  return variable.name === 'this';\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1068/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { interceptReport } from '../helpers';\n\n// core implementation of this rule does not provide quick fixes\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.hasSuggestions = true;\n  return interceptReport(rule, (context, reportDescriptor) => {\n    const suggest: Rule.SuggestionReportDescriptor[] = [];\n    const node = (reportDescriptor as any).node as estree.Node;\n    suggest.push({\n      desc: 'Remove unused private class member',\n      fix: fixer => fixer.remove(node),\n    });\n    context.report({ ...reportDescriptor, suggest });\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { eslintRules } from '../core';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(eslintRules['no-unused-private-class-members']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6676/javascript\n\nimport { Rule, AST } from 'eslint';\nimport * as estree from 'estree';\nimport { interceptReport } from '../helpers';\n\n// core implementation of this rule does not provide quick fixes\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.hasSuggestions = true;\n  return interceptReport(rule, (context, reportDescriptor) => {\n    const suggest: Rule.SuggestionReportDescriptor[] = [];\n    const node = (reportDescriptor as any).node as estree.Node;\n\n    if (node.type === 'CallExpression') {\n      const { callee, arguments: args } = node;\n      if (callee.type === 'MemberExpression') {\n        const { object, property } = callee;\n        if (property.type === 'Identifier' && property.name === 'call') {\n          const desc = 'Remove redundant call()';\n\n          if (args.length > 1) {\n            addFixForCall(suggest, desc, object.range, args[1].range);\n          } else {\n            addFixForCallNoArgs(suggest, desc, object.range, node.range);\n          }\n        }\n\n        if (property.type === 'Identifier' && property.name === 'apply') {\n          const desc = 'Remove redundant apply()',\n            argsText = context.sourceCode.getText(args[1], -1, -1);\n          addFixForApply(suggest, desc, argsText, object.range, node.range);\n        }\n      }\n    }\n\n    context.report({ ...reportDescriptor, suggest });\n  });\n}\n\nfunction addFixForCall(\n  suggest: Rule.SuggestionReportDescriptor[],\n  desc: string,\n  startRange?: AST.Range,\n  endRange?: AST.Range,\n) {\n  if (startRange && endRange) {\n    suggest.push({\n      desc,\n      fix: fixer => fixer.replaceTextRange([startRange[1], endRange[0]], '('),\n    });\n  }\n}\n\nfunction addFixForCallNoArgs(\n  suggest: Rule.SuggestionReportDescriptor[],\n  desc: string,\n  startRange?: AST.Range,\n  endRange?: AST.Range,\n) {\n  if (startRange && endRange) {\n    suggest.push({\n      desc,\n      fix: fixer => fixer.replaceTextRange([startRange[1], endRange[1]], '()'),\n    });\n  }\n}\n\nfunction addFixForApply(\n  suggest: Rule.SuggestionReportDescriptor[],\n  desc: string,\n  argsText: string,\n  startRange?: AST.Range,\n  endRange?: AST.Range,\n) {\n  if (startRange && endRange) {\n    suggest.push({\n      desc,\n      fix: fixer => fixer.replaceTextRange([startRange[1], endRange[1]], `(${argsText})`),\n    });\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { eslintRules } from '../core';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(eslintRules['no-useless-call']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6647/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { interceptReport } from '../helpers';\n\n// core implementation of this rule does not provide quick fixes\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.hasSuggestions = true;\n  return interceptReport(rule, (context, reportDescriptor) => {\n    const suggest: Rule.SuggestionReportDescriptor[] = [];\n    const node = (reportDescriptor as any).node as estree.Node;\n    if (node.type === 'MethodDefinition' && node.kind === 'constructor') {\n      suggest.push({\n        desc: 'Remove constructor',\n        fix: fixer => fixer.remove(node),\n      });\n    }\n    context.report({ ...reportDescriptor, suggest });\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport type { TSESTree } from '@typescript-eslint/utils';\nimport { Rule } from 'eslint';\nimport { eslintRules } from '../core';\nimport { decorate } from './decorator';\nimport { getVariableFromName } from '../helpers';\nimport type estree from 'estree';\n\n/**\n * Check if method with accessibility is not useless\n */\nfunction checkAccessibility(node: TSESTree.MethodDefinition): boolean {\n  switch (node.accessibility) {\n    case 'protected':\n    case 'private':\n      return false;\n    case 'public':\n      if (\n        node.parent.type === 'ClassBody' &&\n        'superClass' in node.parent.parent &&\n        node.parent.parent.superClass\n      ) {\n        return false;\n      }\n      break;\n  }\n  return true;\n}\n\n/**\n * Check if method is not useless due to typescript parameter properties and decorators\n */\nfunction checkParams(node: TSESTree.MethodDefinition): boolean {\n  return !node.value.params.some(\n    param => param.type === 'TSParameterProperty' || param.decorators?.length > 0,\n  );\n}\n\n/**\n * Check if the enclosing class is not decorated.\n */\nfunction checkDecorator(node: TSESTree.MethodDefinition): boolean {\n  return !(\n    node.parent.parent?.type === 'ClassDeclaration' && node.parent.parent.decorators?.length > 0\n  );\n}\n\n/**\n * Check if the enclosing class does not inherit a protected constructor.\n */\nfunction checkInheritance(node: TSESTree.MethodDefinition, context: Rule.RuleContext): boolean {\n  if (\n    node.parent.type === 'ClassBody' &&\n    'superClass' in node.parent.parent &&\n    node.parent.parent.superClass\n  ) {\n    const superClass = node.parent.parent.superClass as TSESTree.Identifier;\n    const variable = getVariableFromName(context, superClass.name, node as estree.Node);\n    for (const def of variable?.defs ?? []) {\n      if (def.type === 'ImportBinding') {\n        return false;\n      }\n      if (def.node.type === 'ClassDeclaration') {\n        const decl = def.node as TSESTree.ClassDeclaration;\n        if (\n          decl.body.body.some(\n            member =>\n              member.type === 'MethodDefinition' &&\n              member.kind === 'constructor' &&\n              member.accessibility === 'protected',\n          )\n        ) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n\nconst eslintNoUselessConstructor = eslintRules['no-useless-constructor'];\n\nconst originalRule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: eslintNoUselessConstructor.meta!.messages,\n  },\n\n  create(context) {\n    const rules = eslintNoUselessConstructor.create(context);\n    return {\n      MethodDefinition(node): void {\n        if (\n          node.value.type === 'FunctionExpression' &&\n          node.kind === 'constructor' &&\n          checkAccessibility(node as TSESTree.MethodDefinition) &&\n          checkParams(node as TSESTree.MethodDefinition) &&\n          checkDecorator(node as TSESTree.MethodDefinition) &&\n          checkInheritance(node as TSESTree.MethodDefinition, context)\n        ) {\n          rules.MethodDefinition!(node);\n        }\n      },\n    };\n  },\n};\n\nexport const rule = decorate(originalRule);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2123/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      removeIncrement: 'Remove this {{updateOperator}}rement or correct the code not to waste it.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    function reportUpdateExpression(updateExpression: estree.UpdateExpression) {\n      const updateOperator = updateExpression.operator === '++' ? 'inc' : 'dec';\n      context.report({\n        messageId: 'removeIncrement',\n        data: {\n          updateOperator,\n        },\n        node: updateExpression,\n      });\n    }\n\n    return {\n      'ReturnStatement > UpdateExpression'(node: estree.Node) {\n        const updateExpression = node as estree.UpdateExpression;\n        const argument = updateExpression.argument;\n        if (\n          !updateExpression.prefix &&\n          argument.type === 'Identifier' &&\n          isLocalIdentifier(argument, context.sourceCode.getScope(node))\n        ) {\n          reportUpdateExpression(updateExpression);\n        }\n      },\n      AssignmentExpression(node: estree.Node) {\n        const assignment = node as estree.AssignmentExpression;\n        const rhs = assignment.right;\n        if (rhs.type === 'UpdateExpression' && !rhs.prefix) {\n          const lhs = assignment.left;\n          if (\n            lhs.type === 'Identifier' &&\n            rhs.argument.type === 'Identifier' &&\n            rhs.argument.name === lhs.name\n          ) {\n            reportUpdateExpression(rhs);\n          }\n        }\n      },\n    };\n  },\n};\n\nfunction isLocalIdentifier(id: estree.Identifier, scope: Scope.Scope) {\n  return scope.variables.some(v => v.identifiers.some(i => i.name === id.name));\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4335/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport * as ts from 'typescript';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { isRequiredParserServices } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      removeIntersection: 'Remove this type without members or change this type intersection.',\n      simplifyIntersection: 'Simplify this intersection as it always has type \"{{type}}\".',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (isRequiredParserServices(services)) {\n      return {\n        TSIntersectionType: (node: estree.Node) => {\n          const intersection = node as unknown as TSESTree.TSIntersectionType;\n          const anyOrNever = intersection.types.find(typeNode =>\n            ['TSAnyKeyword', 'TSNeverKeyword'].includes(typeNode.type),\n          );\n          if (anyOrNever) {\n            context.report({\n              messageId: 'simplifyIntersection',\n              data: {\n                type: anyOrNever.type === 'TSAnyKeyword' ? 'any' : 'never',\n              },\n              node,\n            });\n          } else {\n            intersection.types.forEach(typeNode => {\n              const tp: ts.Type = services.program\n                .getTypeChecker()\n                .getTypeAtLocation(services.esTreeNodeToTSNodeMap.get(typeNode));\n              if (isTypeWithoutMembers(tp)) {\n                context.report({\n                  messageId: 'removeIntersection',\n                  node: typeNode as unknown as estree.Node,\n                });\n              }\n            });\n          }\n        },\n      };\n    }\n    return {};\n  },\n};\n\nfunction isTypeWithoutMembers(tp: ts.Type): boolean {\n  return isNullLike(tp) || (isEmptyInterface(tp) && isStandaloneInterface(tp.symbol));\n}\n\nfunction isNullLike(tp: ts.Type): boolean {\n  return (\n    Boolean(tp.flags & ts.TypeFlags.Null) ||\n    Boolean(tp.flags & ts.TypeFlags.Undefined) ||\n    Boolean(tp.flags & ts.TypeFlags.Void)\n  );\n}\n\nfunction isEmptyInterface(tp: ts.Type): boolean {\n  return (\n    tp.getProperties().length === 0 &&\n    (!(tp as ts.InterfaceTypeWithDeclaredMembers).declaredIndexInfos ||\n      (tp as ts.InterfaceTypeWithDeclaredMembers).declaredIndexInfos.length === 0)\n  );\n}\n\nfunction isStandaloneInterface(typeSymbol: ts.Symbol) {\n  // there is no declarations for `{}`\n  // otherwise check that none of declarations has a heritage clause (`extends X` or `implements X`)\n  if (!typeSymbol) {\n    return false;\n  }\n  const { declarations } = typeSymbol;\n  return (\n    !declarations ||\n    declarations.every(declaration => {\n      return (\n        isInterfaceDeclaration(declaration) && (declaration.heritageClauses ?? []).length === 0\n      );\n    })\n  );\n}\n\nfunction isInterfaceDeclaration(\n  declaration: ts.Declaration,\n): declaration is ts.InterfaceDeclaration {\n  return declaration.kind === ts.SyntaxKind.InterfaceDeclaration;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6443/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport { getFullyQualifiedName, getVariableFromName } from '../helpers';\nimport * as estree from 'estree';\n\ntype Reference = {\n  setter: Scope.Variable | undefined;\n  value: Scope.Variable | undefined;\n};\n\nconst declarationSelector = [\n  ':matches(',\n  [\n    'VariableDeclarator[init.callee.name=\"useState\"]',\n    'VariableDeclarator[init.callee.object.type=\"Identifier\"][init.callee.property.name=\"useState\"]',\n  ].join(','),\n  ')',\n  '[id.type=\"ArrayPattern\"]',\n  '[id.elements.length=2]',\n  '[id.elements.0.type=\"Identifier\"]',\n  '[id.elements.1.type=\"Identifier\"]',\n].join('');\n\nconst callSelector = [\n  'CallExpression[callee.type=\"Identifier\"]',\n  '[arguments.length=1]',\n  '[arguments.0.type=\"Identifier\"]',\n].join('');\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      uselessSetState: 'Change the argument of this setter to not use its matching state variable',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const referencesBySetterName: { [key: string]: Reference } = {};\n\n    return {\n      [declarationSelector](node: estree.VariableDeclarator) {\n        if (isReactCall(context, node.init as estree.CallExpression)) {\n          const { elements } = node.id as estree.ArrayPattern;\n          const setter = (elements[1] as estree.Identifier).name;\n          referencesBySetterName[setter] = {\n            setter: getVariableFromName(context, setter, node),\n            value: getVariableFromName(context, (elements[0] as estree.Identifier).name, node),\n          };\n        }\n      },\n      [callSelector](node: estree.CallExpression) {\n        const setter = getVariableFromName(context, (node.callee as estree.Identifier).name, node);\n        const value = getVariableFromName(\n          context,\n          (node.arguments[0] as estree.Identifier).name,\n          node,\n        );\n        const key = setter?.name as string;\n        if (\n          setter &&\n          value &&\n          referencesBySetterName.hasOwnProperty(key) &&\n          referencesBySetterName[key].setter === setter &&\n          referencesBySetterName[key].value === value\n        ) {\n          context.report({\n            messageId: 'uselessSetState',\n            node,\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction isReactCall(context: Rule.RuleContext, callExpr: estree.CallExpression): boolean {\n  const fqn = getFullyQualifiedName(context, callExpr);\n  if (fqn) {\n    const [module] = fqn.split('.');\n    return module === 'react';\n  }\n  return false;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport { interceptReport } from '../helpers';\nimport estree from 'estree';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, (context, reportDescriptor) => {\n    if ('node' in reportDescriptor) {\n      const { node, ...rest } = reportDescriptor;\n      const {\n        declarations: [firstDecl, ..._],\n      } = node as estree.VariableDeclaration;\n\n      const varToken = context.sourceCode.getTokenBefore(firstDecl.id);\n      const identifierEnd = firstDecl.id.loc!.end;\n      if (varToken == null) {\n        // impossible\n        return;\n      }\n      context.report({\n        loc: {\n          start: varToken.loc.start,\n          end: identifierEnd,\n        },\n        ...rest,\n      });\n    }\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { eslintRules } from '../core';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(eslintRules['no-var']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1526/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n\n  create(context: Rule.RuleContext) {\n    return {\n      \"VariableDeclaration[kind='var']\": (node: estree.Node) => {\n        const variables = context.sourceCode.getDeclaredVariables(node);\n        for (const variable of variables) {\n          const declaration = variable.identifiers[0];\n          const misused = variable.references\n            .filter(reference => !reference.init && comesBefore(reference.identifier, declaration))\n            .map(reference => reference.identifier);\n          if (misused.length > 0) {\n            context.report({\n              message: toEncodedMessage(\n                `Move the declaration of \"${declaration.name}\" before this usage.`,\n                [declaration as TSESTree.Node],\n                ['Declaration'],\n              ),\n              node: misused[0],\n            });\n          }\n        }\n      },\n    };\n  },\n};\n\nfunction comesBefore(node: estree.Node, other: estree.Node) {\n  const nodeLine = line(node),\n    otherLine = line(other);\n  return nodeLine < otherLine || (nodeLine === otherLine && column(node) < column(other));\n}\n\nfunction line(node: estree.Node) {\n  return node.loc!.start.line;\n}\n\nfunction column(node: estree.Node) {\n  return node.loc!.start.column;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6299/javascript\n\nimport * as estree from 'estree';\nimport { Rule } from 'eslint';\nimport { AST } from 'vue-eslint-parser';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      safeVueBypassing: 'Make sure bypassing Vue built-in sanitization is safe here.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n\n    function attrsHref(calleeName: string) {\n      // select call expression with given name where second argument is object expression like { attrs: { href: 'bla' } }\n      return `CallExpression[callee.name='${calleeName}'] ObjectExpression.arguments:nth-child(2) > Property[key.name='attrs'] > ObjectExpression.value > Property[key.name='href']`;\n    }\n\n    const ruleListener: Rule.RuleListener = {\n      [\"JSXAttribute[name.name='domPropsInnerHTML'],\" +\n        \"Property[key.name='domProps'] > ObjectExpression.value > Property[key.name='innerHTML']\"](\n        node: estree.Node,\n      ) {\n        context.report({ node, messageId: 'safeVueBypassing' });\n      },\n      [`${attrsHref('createElement')},${attrsHref('h')}`](node: estree.Node) {\n        context.report({ node, messageId: 'safeVueBypassing' });\n      },\n    };\n\n    // @ts-ignore\n    if (services.defineTemplateBodyVisitor) {\n      // analyze <template> in .vue file\n      const templateBodyVisitor = context.sourceCode.parserServices.defineTemplateBodyVisitor({\n        [\"VAttribute[directive=true][key.name.name='html'],\" +\n          \"VAttribute[directive=true][key.argument.name='href']\"](node: AST.VAttribute) {\n          context.report({\n            loc: node.loc,\n            messageId: 'safeVueBypassing',\n          });\n        },\n      });\n      Object.assign(ruleListener, templateBodyVisitor);\n    }\n\n    return ruleListener;\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5547/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getValueOfExpression, getFullyQualifiedName } from '../helpers';\n\nconst WEAK_CIPHERS = ['bf', 'blowfish', 'des', 'rc2', 'rc4'];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      strongerCipher: 'Use a strong cipher algorithm.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      CallExpression(node: estree.Node) {\n        const callExpression = node as estree.CallExpression;\n        if (getFullyQualifiedName(context, callExpression) === 'crypto.createCipheriv') {\n          const algorithm = getValueOfExpression(context, callExpression.arguments[0], 'Literal');\n          const algorithmValue = algorithm?.value?.toString().toLowerCase();\n          if (\n            algorithm &&\n            algorithmValue &&\n            WEAK_CIPHERS.findIndex(cipher => algorithmValue.startsWith(cipher)) >= 0\n          ) {\n            context.report({\n              messageId: 'strongerCipher',\n              node: algorithm,\n            });\n          }\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4426/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isIdentifier, getValueOfExpression, getProperty } from '../helpers';\n\nconst MINIMAL_MODULUS_LENGTH = 2048;\nconst MINIMAL_DIVISOR_LENGTH = 224;\nconst WEAK_CURVES = [\n  'secp112r1',\n  'secp112r2',\n  'secp128r1',\n  'secp128r2',\n  'secp160k1',\n  'secp160r1',\n  'secp160r2',\n  'secp160r2',\n  'secp192k1',\n  'secp192r1',\n  'prime192v2',\n  'prime192v3',\n  'sect113r1',\n  'sect113r2',\n  'sect131r1',\n  'sect131r2',\n  'sect163k1',\n  'sect163r1',\n  'sect163r2',\n  'sect193r1',\n  'sect193r2',\n  'c2tnb191v1',\n  'c2tnb191v2',\n  'c2tnb191v3',\n];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      modulusLength:\n        'Use a modulus length of at least {{minimalLength}} bits for {{algorithm}} cipher algorithm.',\n      divisorLength:\n        'Use a divisor length of at least {{minimalLength}} bits for {{algorithm}} cipher algorithm.',\n      strongerCurve: `{{curve}} doesn't provide enough security. Use a stronger curve.`,\n    },\n  },\n  create(context: Rule.RuleContext) {\n    function getNumericValue(node: estree.Node | undefined) {\n      const literal = getValueOfExpression(context, node, 'Literal');\n      if (literal && typeof literal.value === 'number') {\n        return literal.value;\n      }\n      return undefined;\n    }\n\n    function checkRsaAndDsaOptions(algorithm: string, options: estree.Node) {\n      const modulusProperty = getProperty(options, 'modulusLength', context);\n      const modulusLength = getNumericValue(modulusProperty?.value);\n      if (modulusProperty && modulusLength && modulusLength < MINIMAL_MODULUS_LENGTH) {\n        context.report({\n          node: modulusProperty,\n          messageId: 'modulusLength',\n          data: {\n            minimalLength: MINIMAL_MODULUS_LENGTH.toString(),\n            algorithm,\n          },\n        });\n      }\n      const divisorProperty = getProperty(options, 'divisorLength', context);\n      const divisorLength = getNumericValue(divisorProperty?.value);\n      if (divisorProperty && divisorLength && divisorLength < MINIMAL_DIVISOR_LENGTH) {\n        context.report({\n          node: divisorProperty,\n          messageId: 'divisorLength',\n          data: {\n            minimalLength: MINIMAL_DIVISOR_LENGTH.toString(),\n            algorithm,\n          },\n        });\n      }\n    }\n\n    function checkEcCurve(options: estree.Node) {\n      const namedCurveProperty = getProperty(options, 'namedCurve', context);\n      const namedCurve = getValueOfExpression(\n        context,\n        namedCurveProperty?.value,\n        'Literal',\n      )?.value?.toString();\n      if (namedCurveProperty && namedCurve && WEAK_CURVES.includes(namedCurve)) {\n        context.report({\n          node: namedCurveProperty,\n          messageId: 'strongerCurve',\n          data: {\n            curve: namedCurve,\n          },\n        });\n      }\n    }\n\n    return {\n      CallExpression: (node: estree.Node) => {\n        const callExpression = node as estree.CallExpression;\n        const { callee } = callExpression;\n        if (\n          callee.type === 'MemberExpression' &&\n          isIdentifier(callee.property, 'generateKeyPair', 'generateKeyPairSync')\n        ) {\n          if (callExpression.arguments.length < 2) {\n            return;\n          }\n          const [algorithmArg, options] = callExpression.arguments;\n          const optionsArg = getValueOfExpression(context, options, 'ObjectExpression');\n          if (!optionsArg) {\n            return;\n          }\n          const algorithm = getValueOfExpression(context, algorithmArg, 'Literal')?.value;\n          if (algorithm === 'rsa' || algorithm === 'dsa') {\n            checkRsaAndDsaOptions(algorithm, optionsArg);\n          } else if (algorithm === 'ec') {\n            checkEcCurve(optionsArg);\n          }\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2208/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      wildcardImport: 'Explicitly {{xPort}} the specific member needed.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    function report(node: estree.Node, xPort: string) {\n      context.report({\n        messageId: 'wildcardImport',\n        data: { xPort },\n        node,\n      });\n    }\n\n    return {\n      ImportNamespaceSpecifier: (node: estree.Node) => report(node, 'import'),\n      ExportAllDeclaration: (node: estree.Node) => report(node, 'export'),\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3760/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport ts from 'typescript';\nimport {\n  isRequiredParserServices,\n  getTypeFromTreeNode,\n  isStringType,\n  toEncodedMessage,\n} from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nconst MESSAGE = 'Convert this operand into a number.';\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n\n    return {\n      BinaryExpression: (node: estree.Node) => {\n        const binaryExpression = node as estree.BinaryExpression;\n        const operator = binaryExpression.operator;\n        const leftType = getTypeFromTreeNode(binaryExpression.left, services);\n        const rightType = getTypeFromTreeNode(binaryExpression.right, services);\n        if (operator === '+') {\n          checkPlus(leftType, rightType, binaryExpression, context);\n        }\n        if (operator === '<' || operator === '>' || operator === '<=' || operator === '>=') {\n          checkComparison(leftType, rightType, binaryExpression, context);\n        }\n        if (operator === '-' || operator === '*' || operator === '/' || operator === '%') {\n          checkArithmetic(leftType, rightType, binaryExpression, context);\n        }\n      },\n      AssignmentExpression: (node: estree.Node) => {\n        const assignmentExpression = node as estree.AssignmentExpression;\n        const operator = assignmentExpression.operator;\n        const leftType = getTypeFromTreeNode(assignmentExpression.left, services);\n        const rightType = getTypeFromTreeNode(assignmentExpression.right, services);\n        if (operator === '+=') {\n          checkPlus(leftType, rightType, assignmentExpression, context);\n        }\n        if (operator === '-=' || operator === '*=' || operator === '/=' || operator === '%=') {\n          checkArithmetic(leftType, rightType, assignmentExpression, context);\n        }\n      },\n      'UnaryExpression[operator=\"-\"]': (node: estree.Node) => {\n        const unaryExpression = node as estree.UnaryExpression;\n        const type = getTypeFromTreeNode(unaryExpression.argument, services);\n        if (isBooleanStringOrDate(type)) {\n          context.report({\n            node: unaryExpression.argument,\n            message: toEncodedMessage(MESSAGE, []),\n          });\n        }\n      },\n      UpdateExpression: (node: estree.Node) => {\n        const updateExpression = node as estree.UpdateExpression;\n        const type = getTypeFromTreeNode(updateExpression.argument, services);\n        if (isBooleanStringOrDate(type)) {\n          context.report({\n            node: updateExpression.argument,\n            message: toEncodedMessage(MESSAGE, []),\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction isDateMinusDateException(\n  leftType: ts.Type,\n  rightType: ts.Type,\n  operator: estree.BinaryOperator | estree.AssignmentOperator,\n) {\n  if (operator !== '-' && operator !== '-=') {\n    return false;\n  }\n  if (\n    leftType.symbol?.name === 'Date' &&\n    (rightType.symbol?.name === 'Date' || (rightType.flags & ts.TypeFlags.Any) > 0)\n  ) {\n    return true;\n  }\n  if (rightType.symbol?.name === 'Date' && (leftType.flags & ts.TypeFlags.Any) > 0) {\n    return true;\n  }\n  return false;\n}\n\nfunction checkPlus(\n  leftType: ts.Type,\n  rightType: ts.Type,\n  expression: estree.BinaryExpression | estree.AssignmentExpression,\n  context: Rule.RuleContext,\n) {\n  if (isNumber(leftType) && isBooleanOrDate(rightType)) {\n    context.report({\n      node: expression.right,\n      message: toEncodedMessage(MESSAGE, [expression.left]),\n    });\n  }\n  if (isNumber(rightType) && isBooleanOrDate(leftType)) {\n    context.report({\n      node: expression.left,\n      message: toEncodedMessage(MESSAGE, [expression.right]),\n    });\n  }\n}\n\nfunction checkComparison(\n  leftType: ts.Type,\n  rightType: ts.Type,\n  expression: estree.BinaryExpression | estree.AssignmentExpression,\n  context: Rule.RuleContext,\n) {\n  if (isBooleanOrNumber(leftType) && isBooleanStringOrDate(rightType)) {\n    context.report({\n      node: expression.right,\n      message: toEncodedMessage(MESSAGE, []),\n    });\n  } else if (isBooleanOrNumber(rightType) && isBooleanStringOrDate(leftType)) {\n    context.report({\n      node: expression.left,\n      message: toEncodedMessage(MESSAGE, []),\n    });\n  }\n}\n\nfunction checkArithmetic(\n  leftType: ts.Type,\n  rightType: ts.Type,\n  expression: estree.BinaryExpression | estree.AssignmentExpression,\n  context: Rule.RuleContext,\n) {\n  if (isDateMinusDateException(leftType, rightType, expression.operator)) {\n    return;\n  }\n  const secondaryLocations = [];\n  if (isBooleanStringOrDate(leftType)) {\n    secondaryLocations.push(expression.left);\n  }\n  if (isBooleanStringOrDate(rightType)) {\n    secondaryLocations.push(expression.right);\n  }\n  if (secondaryLocations.length !== 0) {\n    context.report({\n      node: expression,\n      message: toEncodedMessage(\n        'Convert the operands of this operation into numbers.',\n        secondaryLocations,\n      ),\n    });\n  }\n}\n\nfunction isBooleanOrDate(type: ts.Type) {\n  if (isBoolean(type)) {\n    return true;\n  }\n  return type.symbol?.name === 'Date';\n}\n\nfunction isBooleanOrNumber(type: ts.Type) {\n  return isBoolean(type) || isNumber(type);\n}\n\nfunction isBoolean(type: ts.Type) {\n  return (type.flags & ts.TypeFlags.BooleanLike) > 0 || type.symbol?.name === 'Boolean';\n}\n\nfunction isNumber(type: ts.Type) {\n  return (type.flags & ts.TypeFlags.NumberLike) > 0 || type.symbol?.name === 'Number';\n}\n\nfunction isBooleanStringOrDate(type: ts.Type) {\n  return isBoolean(type) || isStringType(type) || type.symbol?.name === 'Date';\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2259/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport {\n  isRequiredParserServices,\n  functionLike,\n  isUndefinedOrNull,\n  findFirstMatchingAncestor,\n  RuleContext,\n  isNullLiteral,\n  isUndefined,\n} from '../helpers';\nimport { areEquivalent } from 'eslint-plugin-sonarjs/lib/src/utils/equivalence';\n\nenum Null {\n  confirmed,\n  discarded,\n  unknown,\n}\n\nfunction isNull(n: estree.Node): boolean {\n  return isNullLiteral(n) || isUndefined(n);\n}\n\nconst equalOperators = ['==', '==='];\nconst notEqualOperators = ['!=', '!=='];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      nullDereference: 'TypeError can be thrown as \"{{symbol}}\" might be null or undefined here.',\n      shortCircuitError: 'TypeError can be thrown as expression might be null or undefined here.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    if (!isRequiredParserServices(context.sourceCode.parserServices)) {\n      return {};\n    }\n    const alreadyRaisedSymbols: Set<Scope.Variable> = new Set();\n\n    return {\n      MemberExpression(node: estree.Node) {\n        const { object, optional } = node as estree.MemberExpression;\n        if (!optional) {\n          checkNullDereference(object, context, alreadyRaisedSymbols);\n        }\n      },\n      'LogicalExpression MemberExpression'(node: estree.Node) {\n        const { object, optional } = node as estree.MemberExpression;\n        if (!optional) {\n          const ancestors = context.sourceCode.getAncestors(node);\n          const enclosingLogicalExpression = ancestors.find(\n            n => n.type === 'LogicalExpression',\n          ) as estree.LogicalExpression;\n          checkLogicalNullDereference(enclosingLogicalExpression, object, context);\n        }\n      },\n      ForOfStatement(node: estree.Node) {\n        const { right } = node as estree.ForOfStatement;\n        checkNullDereference(right, context, alreadyRaisedSymbols);\n      },\n      'Program:exit'() {\n        alreadyRaisedSymbols.clear();\n      },\n    };\n  },\n};\n\nfunction getNullState(\n  expr: estree.BinaryExpression,\n  node: estree.Node,\n  context: RuleContext,\n): Null {\n  const { left, right } = expr;\n  if (\n    (isNull(right) &&\n      areEquivalent(left as TSESTree.Node, node as TSESTree.Node, context.getSourceCode())) ||\n    (isNull(left) &&\n      areEquivalent(right as TSESTree.Node, node as TSESTree.Node, context.getSourceCode()))\n  ) {\n    if (notEqualOperators.includes(expr.operator)) {\n      return Null.discarded;\n    }\n    if (equalOperators.includes(expr.operator)) {\n      return Null.confirmed;\n    }\n  }\n  return Null.unknown;\n}\n\nfunction checkLogicalNullDereference(\n  expr: estree.LogicalExpression,\n  node: estree.Node,\n  context: Rule.RuleContext,\n) {\n  if (expr.left.type === 'BinaryExpression') {\n    const nullState = getNullState(expr.left, node, context as unknown as RuleContext);\n    if (\n      (nullState === Null.confirmed && expr.operator === '&&') ||\n      (nullState === Null.discarded && expr.operator === '||')\n    ) {\n      context.report({\n        messageId: 'shortCircuitError',\n        node,\n      });\n    }\n  }\n}\n\nfunction isWrittenInInnerFunction(symbol: Scope.Variable, fn: estree.Node | undefined) {\n  return symbol.references.some(ref => {\n    if (ref.isWrite() && ref.identifier.hasOwnProperty('parent')) {\n      const enclosingFn = findFirstMatchingAncestor(ref.identifier as TSESTree.Node, node =>\n        functionLike.has(node.type),\n      );\n      return enclosingFn && enclosingFn !== fn;\n    }\n    return false;\n  });\n}\n\nfunction checkNullDereference(\n  node: estree.Node,\n  context: Rule.RuleContext,\n  alreadyRaisedSymbols: Set<Scope.Variable>,\n) {\n  if (node.type !== 'Identifier') {\n    return;\n  }\n  const scope = context.sourceCode.getScope(node);\n  const symbol = scope.references.find(v => v.identifier === node)?.resolved;\n  if (!symbol) {\n    return;\n  }\n\n  const enclosingFunction = context.sourceCode\n    .getAncestors(node)\n    .find(n => functionLike.has(n.type));\n\n  if (\n    !alreadyRaisedSymbols.has(symbol) &&\n    !isWrittenInInnerFunction(symbol, enclosingFunction) &&\n    isUndefinedOrNull(node, context.sourceCode.parserServices)\n  ) {\n    alreadyRaisedSymbols.add(symbol);\n    context.report({\n      messageId: 'nullDereference',\n      data: {\n        symbol: node.name,\n      },\n      node,\n    });\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5264/javascript\n\nimport { Rule } from 'eslint';\nimport isHiddenFromScreenReader from 'eslint-plugin-jsx-a11y/lib/util/isHiddenFromScreenReader';\nimport getElementType from 'eslint-plugin-jsx-a11y/lib/util/getElementType';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      addContent: 'Add an accessible content to this \"<object>\" tag.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const elementType = getElementType(context);\n\n    function hasVisibleChildren(children: TSESTree.JSXChild[]): boolean {\n      return children.some((child: TSESTree.JSXChild) => {\n        switch (child.type) {\n          case 'JSXText':\n            return !!child.value.trim();\n          case 'JSXFragment':\n            return hasVisibleChildren(child.children);\n          case 'JSXElement':\n            return !isHiddenFromScreenReader(\n              elementType(child.openingElement),\n              child.openingElement.attributes,\n            );\n          case 'JSXExpressionContainer':\n            if (child.expression.type === 'Identifier') {\n              return child.expression.name !== 'undefined';\n            }\n            return child.expression.type !== 'JSXEmptyExpression';\n\n          default:\n            return false;\n        }\n      });\n    }\n\n    return {\n      JSXElement(node: estree.Node) {\n        const jsxNode = node as unknown as TSESTree.JSXElement;\n        const type = elementType(jsxNode.openingElement);\n        if (type.toLowerCase() !== 'object') {\n          return;\n        }\n\n        if (!hasVisibleChildren(jsxNode.children)) {\n          context.report({\n            node,\n            messageId: 'addContent',\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3498/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { interceptReport } from '../helpers';\n\n// core implementation of this rule raises issues on aura lightning components\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, reportExempting(isAuraLightningComponent));\n}\n\nfunction reportExempting(\n  exemptionCondition: (property: TSESTree.Property) => boolean,\n): (context: Rule.RuleContext, reportDescriptor: Rule.ReportDescriptor) => void {\n  return (context, reportDescriptor) => {\n    if ('node' in reportDescriptor) {\n      const property = reportDescriptor['node'] as TSESTree.Property;\n      if (!exemptionCondition(property)) {\n        context.report({ ...reportDescriptor, node: property.key as estree.Node });\n      }\n    }\n  };\n}\n\nfunction isAuraLightningComponent(property: TSESTree.Property) {\n  const { parent, value } = property;\n  return (\n    parent!.parent!.type === 'ExpressionStatement' &&\n    parent!.parent!.parent!.type === 'Program' &&\n    value.type === 'FunctionExpression'\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { eslintRules } from '../core';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(eslintRules['object-shorthand']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3757/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport ts from 'typescript';\nimport { isRequiredParserServices, getTypeFromTreeNode } from '../helpers';\n\nconst BINARY_OPERATORS = ['/', '*', '%', '-', '-=', '*=', '/=', '%='];\nconst UNARY_OPERATORS = ['++', '--', '+', '-'];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      noEvaluatedNaN:\n        'Change the expression which uses this operand so that it can\\'t evaluate to \"NaN\" (Not a Number).',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n\n    function isObjectType(...types: ts.Type[]): boolean {\n      return types.some(\n        t => !!(t.getFlags() & ts.TypeFlags.Object) && !isDate(t) && t.symbol?.name !== 'Number',\n      );\n    }\n\n    function isDate(type: ts.Type) {\n      const { typeToString } = services.program.getTypeChecker();\n      return typeToString(type) === 'Date';\n    }\n\n    return {\n      'BinaryExpression, AssignmentExpression': (node: estree.Node) => {\n        const expression = node as estree.BinaryExpression | estree.AssignmentExpression;\n        if (!BINARY_OPERATORS.includes(expression.operator)) {\n          return;\n        }\n        const leftType = getTypeFromTreeNode(expression.left, services);\n        const rightType = getTypeFromTreeNode(expression.right, services);\n        if (isObjectType(leftType)) {\n          context.report({ node: expression.left, messageId: 'noEvaluatedNaN' });\n        }\n        if (isObjectType(rightType)) {\n          context.report({ node: expression.right, messageId: 'noEvaluatedNaN' });\n        }\n      },\n      'UnaryExpression, UpdateExpression': (node: estree.Node) => {\n        const expr = node as estree.UpdateExpression | estree.UnaryExpression;\n        if (!UNARY_OPERATORS.includes(expr.operator)) {\n          return;\n        }\n        const argType = getTypeFromTreeNode(expr.argument, services);\n        if (isObjectType(argType)) {\n          context.report({ node, messageId: 'noEvaluatedNaN' });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4721/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  isIdentifier,\n  getFullyQualifiedName,\n  isStaticTemplateLiteral,\n  isLiteral,\n} from '../helpers';\n\nconst EXEC_FUNCTIONS = ['exec', 'execSync'];\n\nconst SPAWN_EXEC_FILE_FUNCTIONS = ['spawn', 'spawnSync', 'execFile', 'execFileSync'];\n\nconst CHILD_PROCESS_MODULE = 'child_process';\n\ntype Argument = estree.Expression | estree.SpreadElement;\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      safeOSCommand: 'Make sure that executing this OS command is safe here.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      CallExpression: (node: estree.Node) => checkOSCommand(context, node as estree.CallExpression),\n    };\n  },\n};\n\nfunction checkOSCommand(context: Rule.RuleContext, call: estree.CallExpression) {\n  const { callee, arguments: args } = call;\n  const fqn = getFullyQualifiedName(context, call);\n  if (!fqn) {\n    return;\n  }\n  const [module, method] = fqn.split('.');\n  if (module === CHILD_PROCESS_MODULE && isQuestionable(method, args)) {\n    context.report({\n      node: callee,\n      messageId: 'safeOSCommand',\n    });\n  }\n}\n\nfunction isQuestionable(method: string, [command, ...otherArguments]: Argument[]) {\n  // if command is hardcoded => no issue\n  if (!command || isLiteral(command) || isStaticTemplateLiteral(command)) {\n    return false;\n  }\n  // for `spawn` and `execFile`, `shell` option must be set to `true`\n  if (SPAWN_EXEC_FILE_FUNCTIONS.includes(method)) {\n    return containsShellOption(otherArguments);\n  }\n  return EXEC_FUNCTIONS.includes(method);\n}\n\nfunction containsShellOption(otherArguments: Argument[]) {\n  return otherArguments.some(\n    arg =>\n      arg.type === 'ObjectExpression' &&\n      (arg.properties.filter(v => v.type === 'Property') as estree.Property[]).some(\n        ({ key, value }) =>\n          isIdentifier(key, 'shell') && value.type === 'Literal' && value.value === true,\n      ),\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2819/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport {\n  isRequiredParserServices,\n  getValueOfExpression,\n  getTypeAsString,\n  resolveFunction,\n  isIdentifier,\n  findFirstMatchingLocalAncestor,\n} from '../helpers';\nimport { childrenOf } from '../../linter';\nimport { isIfStatement } from 'eslint-plugin-sonarjs/lib/src/utils/nodes';\n\nconst POST_MESSAGE = 'postMessage';\nconst ADD_EVENT_LISTENER = 'addEventListener';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      specifyTarget: `Specify a target origin for this message.`,\n      verifyOrigin: `Verify the origin of the received message.`,\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n    return {\n      [`CallExpression:matches([callee.name=\"${POST_MESSAGE}\"], [callee.property.name=\"${POST_MESSAGE}\"])`]:\n        (node: estree.Node) => {\n          checkPostMessageCall(node as estree.CallExpression, context);\n        },\n      [`CallExpression[callee.property.name=\"${ADD_EVENT_LISTENER}\"]`]: (node: estree.Node) => {\n        checkAddEventListenerCall(node as estree.CallExpression, context);\n      },\n    };\n  },\n};\n\nfunction isWindowObject(node: estree.Node, context: Rule.RuleContext) {\n  const type = getTypeAsString(node, context.sourceCode.parserServices);\n  const hasWindowName = WindowNameVisitor.containsWindowName(node, context);\n  return type.match(/window/i) || type.match(/globalThis/i) || hasWindowName;\n}\n\nfunction checkPostMessageCall(callExpr: estree.CallExpression, context: Rule.RuleContext) {\n  const { callee } = callExpr;\n  // Window.postMessage() can take 2 or 3 arguments\n  if (\n    ![2, 3].includes(callExpr.arguments.length) ||\n    getValueOfExpression(context, callExpr.arguments[1], 'Literal')?.value !== '*'\n  ) {\n    return;\n  }\n  if (callee.type === 'Identifier') {\n    context.report({\n      node: callee,\n      messageId: 'specifyTarget',\n    });\n  }\n  if (callee.type !== 'MemberExpression') {\n    return;\n  }\n  if (isWindowObject(callee.object, context)) {\n    context.report({\n      node: callee,\n      messageId: 'specifyTarget',\n    });\n  }\n}\n\nfunction checkAddEventListenerCall(callExpr: estree.CallExpression, context: Rule.RuleContext) {\n  const { callee, arguments: args } = callExpr;\n  if (\n    !isWindowObject(callee, context) ||\n    args.length < 2 ||\n    !isMessageTypeEvent(args[0], context)\n  ) {\n    return;\n  }\n\n  let listener = resolveFunction(context, args[1]);\n  if (listener?.body.type === 'CallExpression') {\n    listener = resolveFunction(context, listener.body);\n  }\n  if (!listener || listener.params.length === 0) {\n    return;\n  }\n\n  const event = listener.params[0];\n  if (event.type !== 'Identifier') {\n    return;\n  }\n\n  if (!hasVerifiedOrigin(context, listener, event)) {\n    context.report({\n      node: callee,\n      messageId: 'verifyOrigin',\n    });\n  }\n}\n\n/**\n * Checks if event.origin or event.originalEvent.origin is verified\n */\nfunction hasVerifiedOrigin(\n  context: Rule.RuleContext,\n  listener: estree.Function,\n  event: estree.Identifier,\n) {\n  const scope = context.sourceCode.scopeManager.acquire(listener);\n  const eventVariable = scope?.variables.find(v => v.name === event.name);\n  if (eventVariable) {\n    const eventIdentifiers = eventVariable.references.map(e => e.identifier);\n    for (const reference of eventVariable.references) {\n      const eventRef = reference.identifier as TSESTree.Identifier;\n\n      if (isEventOriginCompared(eventRef) || isEventOriginalEventCompared(eventRef)) {\n        return true;\n      }\n      // event OR-ed with event.originalEvent\n      const unionEvent = findUnionEvent(eventRef, eventIdentifiers as TSESTree.Identifier[]);\n      if (unionEvent !== null && isReferenceCompared(scope, unionEvent as TSESTree.Identifier)) {\n        return true;\n      }\n      // event.origin OR-ed with event.originalEvent.origin\n      const unionOrigin = findUnionOrigin(eventRef, eventIdentifiers as TSESTree.Identifier[]);\n      if (\n        unionOrigin !== null &&\n        isEventOriginReferenceCompared(scope, unionOrigin as TSESTree.Identifier)\n      ) {\n        return true;\n      }\n    }\n  }\n  return false;\n\n  /**\n   * Looks for unionEvent = event | event.originalEvent\n   */\n  function findUnionEvent(event: TSESTree.Node, eventIdentifiers: TSESTree.Identifier[]) {\n    const logicalExpr = event.parent;\n    if (logicalExpr?.type !== 'LogicalExpression') {\n      return null;\n    }\n    if (\n      (logicalExpr.left === event &&\n        isEventOriginalEvent(logicalExpr.right as estree.MemberExpression, eventIdentifiers)) ||\n      (logicalExpr.right === event &&\n        isEventOriginalEvent(logicalExpr.left as estree.MemberExpression, eventIdentifiers))\n    ) {\n      return extractVariableDeclaratorIfExists(logicalExpr);\n    }\n    return null;\n  }\n\n  /**\n   * looks for unionOrigin = event.origin | event.originalEvent.origin\n   */\n  function findUnionOrigin(eventRef: TSESTree.Node, eventIdentifiers: TSESTree.Identifier[]) {\n    const memberExpr = eventRef.parent;\n    // looks for event.origin in a LogicalExpr\n    if (\n      !(memberExpr?.type === 'MemberExpression' && memberExpr.parent?.type === 'LogicalExpression')\n    ) {\n      return null;\n    }\n    const logicalExpr = memberExpr.parent;\n    if (\n      !(\n        logicalExpr.left === memberExpr &&\n        isEventOriginalEventOrigin(logicalExpr.right as estree.MemberExpression, eventIdentifiers)\n      ) &&\n      !(\n        logicalExpr.right === memberExpr &&\n        isEventOriginalEventOrigin(logicalExpr.left as estree.MemberExpression, eventIdentifiers)\n      )\n    ) {\n      return null;\n    }\n    return extractVariableDeclaratorIfExists(logicalExpr);\n\n    /**\n     * checks if memberExpr is event.originalEvent.origin\n     */\n    function isEventOriginalEventOrigin(\n      memberExpr: estree.MemberExpression,\n      eventIdentifiers: TSESTree.Identifier[],\n    ) {\n      const subMemberExpr = memberExpr.object;\n      if (subMemberExpr?.type !== 'MemberExpression') {\n        return false;\n      }\n      const isOrigin =\n        memberExpr.property.type === 'Identifier' && memberExpr.property.name === 'origin';\n      return isEventOriginalEvent(subMemberExpr, eventIdentifiers) && isOrigin;\n    }\n  }\n}\n\n/**\n * Looks for an occurence of the provided node in an IfStatement\n */\nfunction isReferenceCompared(scope: Scope.Scope | null, identifier: TSESTree.Identifier) {\n  function getGrandParent(node: TSESTree.Node) {\n    return node?.parent?.parent as TSESTree.Identifier;\n  }\n  return checkReference(scope, identifier, getGrandParent);\n}\n\n/**\n * checks if a reference of identifier is\n * node.identifier\n */\nfunction isEventOriginReferenceCompared(\n  scope: Scope.Scope | null,\n  identifier: TSESTree.Identifier,\n) {\n  function getParent(node: TSESTree.Node) {\n    return node?.parent as TSESTree.Identifier;\n  }\n  return checkReference(scope, identifier, getParent);\n}\n\n/**\n *\n */\nfunction checkReference(\n  scope: Scope.Scope | null,\n  identifier: TSESTree.Identifier,\n  callback: Function,\n) {\n  const identifierVariable = scope?.variables.find(v => v.name === identifier.name);\n  if (!identifierVariable) {\n    return false;\n  }\n  for (const reference of identifierVariable.references) {\n    const binaryExpressionCandidate = callback(reference.identifier);\n    if (isInIfStatement(binaryExpressionCandidate)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * checks if memberExpr is event.originalEvent\n */\nfunction isEventOriginalEvent(\n  memberExpr: estree.MemberExpression,\n  eventIdentifiers: TSESTree.Identifier[],\n) {\n  const isEvent =\n    memberExpr.object.type === 'Identifier' &&\n    eventIdentifiers.includes(memberExpr.object as TSESTree.Identifier);\n  const isOriginalEvent =\n    memberExpr.property.type === 'Identifier' && memberExpr.property.name === 'originalEvent';\n  return isEvent && isOriginalEvent;\n}\n\n/**\n * Extracts the identifier to which the 'node' expression is assigned to\n */\nfunction extractVariableDeclaratorIfExists(node: TSESTree.Node) {\n  if (node.parent?.type !== 'VariableDeclarator') {\n    return null;\n  }\n  return node.parent.id;\n}\n\n/**\n * Looks for an IfStatement with event.origin\n */\nfunction isEventOriginCompared(event: TSESTree.Identifier) {\n  const memberExpr = findEventOrigin(event);\n  return isInIfStatement(memberExpr);\n}\n\n/**\n * Looks for an IfStatement with event.originalEvent.origin\n */\nfunction isEventOriginalEventCompared(event: TSESTree.Identifier) {\n  const eventOriginalEvent = findEventOriginalEvent(event);\n  if (!eventOriginalEvent?.parent) {\n    return false;\n  }\n\n  if (!isPropertyOrigin(eventOriginalEvent.parent as TSESTree.MemberExpression)) {\n    return false;\n  }\n  return isInIfStatement(eventOriginalEvent);\n}\n\n/**\n * Returns event.origin MemberExpression, if exists\n */\nfunction findEventOrigin(event: TSESTree.Identifier) {\n  const parent = event.parent;\n  if (parent?.type !== 'MemberExpression') {\n    return null;\n  }\n  if (isPropertyOrigin(parent)) {\n    return parent;\n  } else {\n    return null;\n  }\n}\n\n/**\n * Checks if node has a property 'origin'\n */\nfunction isPropertyOrigin(node: TSESTree.MemberExpression) {\n  return isIdentifier(node.property as estree.Node, 'origin');\n}\n\n/**\n * Returns event.originalEvent MemberExpression, if exists\n */\nfunction findEventOriginalEvent(event: TSESTree.Identifier) {\n  const memberExpr = event.parent;\n  if (memberExpr?.type !== 'MemberExpression') {\n    return null;\n  }\n  const { object: eventCandidate, property: originalEventIdentifierCandidate } = memberExpr;\n  if (\n    eventCandidate === event &&\n    isIdentifier(originalEventIdentifierCandidate as estree.Node, 'originalEvent')\n  ) {\n    return memberExpr;\n  }\n  return null;\n}\n\n/**\n * Checks if the current node is nested in an IfStatement\n */\nfunction isInIfStatement(node: TSESTree.Node | undefined | null) {\n  // this checks for 'undefined' and 'null', because node.parent can be 'null'\n  if (node == null) {\n    return false;\n  }\n  return findFirstMatchingLocalAncestor(node, isIfStatement) != null;\n}\n\nfunction isMessageTypeEvent(eventNode: estree.Node, context: Rule.RuleContext) {\n  const eventValue = getValueOfExpression(context, eventNode, 'Literal');\n  return typeof eventValue?.value === 'string' && eventValue.value.toLowerCase() === 'message';\n}\n\nclass WindowNameVisitor {\n  private hasWindowName = false;\n\n  static containsWindowName(node: estree.Node, context: Rule.RuleContext) {\n    const visitor = new WindowNameVisitor();\n    visitor.visit(node, context);\n    return visitor.hasWindowName;\n  }\n\n  private visit(root: estree.Node, context: Rule.RuleContext) {\n    const visitNode = (node: estree.Node) => {\n      if (node.type === 'Identifier' && node.name.match(/window/i)) {\n        this.hasWindowName = true;\n      }\n      childrenOf(node, context.sourceCode.visitorKeys).forEach(visitNode);\n    };\n    visitNode(root);\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4524/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      defaultLast: 'Move this \"default\" clause to the end of this \"switch\" statement.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const sourceCode = context.sourceCode;\n    return {\n      SwitchStatement(node: estree.Node) {\n        const cases = (node as estree.SwitchStatement).cases;\n        const defaultPosition = cases.findIndex(c => c.test === null);\n\n        if (defaultPosition >= 0 && defaultPosition !== cases.length - 1) {\n          context.report({\n            messageId: 'defaultLast',\n            loc: sourceCode.getFirstToken(cases[defaultPosition])!.loc,\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6572/javascript\n\nimport estree from 'estree';\nimport { Rule } from 'eslint';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { interceptReport, isNumberLiteral } from '../helpers';\n\n// The core implementation of this rule reports all enums for which there is a member value that is\n// not initialized explicitly. Here, the decorator's purpose is to restrict the scope of the rule only\n// to enums that already initialize a subset of members and leave the remaining ones uninitialized, with\n// the exception of those that enforce a numerical order by assigning a literal to the first member value.\n// In other words, the decorated rule ignores enums that don't initialize any member value or those\n// that initialize their first member with a number literal.\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.hasSuggestions = true;\n  return interceptReport(rule, (context, descriptor) => {\n    const enumMember = (descriptor as any).node as TSESTree.TSEnumMember;\n    const enumDecl = enumMember.parent as TSESTree.TSEnumDeclaration;\n    if (anyInitialized(enumDecl) && !numericalOrder(enumDecl)) {\n      context.report(descriptor);\n    }\n  });\n}\n\nfunction anyInitialized(enumDecl: TSESTree.TSEnumDeclaration) {\n  return enumDecl.members.some(m => m.initializer !== undefined);\n}\n\nfunction numericalOrder(enumDecl: TSESTree.TSEnumDeclaration) {\n  const firstMember = enumDecl.members[0];\n  const membersRest = enumDecl.members.slice(1);\n  return (\n    firstMember.initializer?.type === 'Literal' &&\n    isNumberLiteral(firstMember.initializer as estree.Node) &&\n    membersRest.every(m => m.initializer === undefined)\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { tsEslintRules } from '../typescript-eslint';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(tsEslintRules['prefer-enum-initializers']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4138/javascript\n\nimport { Rule, AST, Scope } from 'eslint';\nimport { interceptReport } from '../helpers';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\n\nconst element = 'element';\n\n// core implementation of this rule does not provide quick fixes\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.hasSuggestions = true;\n  return interceptReport(rule, (context, reportDescriptor) => {\n    const forStmt = (reportDescriptor as any).node as estree.ForStatement;\n    const suggest: Rule.SuggestionReportDescriptor[] = [];\n    if (isFixable(context.sourceCode.getScope(forStmt))) {\n      suggest.push({\n        desc: 'Replace with \"for of\" loop',\n        fix: fixer => rewriteForStatement(forStmt, context, fixer),\n      });\n    }\n    context.report({\n      ...reportDescriptor,\n      suggest,\n    });\n  });\n}\n\nfunction isFixable(scope: Scope.Scope): boolean {\n  return (\n    scope.references.every(reference => reference.identifier.name !== element) &&\n    scope.childScopes.every(isFixable)\n  );\n}\n\nfunction rewriteForStatement(\n  forStmt: estree.ForStatement,\n  context: Rule.RuleContext,\n  fixer: Rule.RuleFixer,\n) {\n  const fixes: Rule.Fix[] = [];\n\n  /* rewrite `for` header: `(init; test; update)` -> `(const element of <array>) ` */\n  const openingParenthesis = context.sourceCode.getFirstToken(\n    forStmt,\n    token => token.value === '(',\n  )!;\n  const closingParenthesis = context.sourceCode.getTokenBefore(\n    forStmt.body,\n    token => token.value === ')',\n  )!;\n\n  const arrayExpr = extractArrayExpression(forStmt);\n  const arrayText = context.sourceCode.getText(arrayExpr);\n\n  const headerRange: AST.Range = [openingParenthesis.range[1], closingParenthesis.range[0]];\n  const headerText = `const ${element} of ${arrayText}`;\n  fixes.push(fixer.replaceTextRange(headerRange, headerText));\n\n  /* rewrite `for` body: `<array>[<index>]` -> `element` */\n  const [indexVar] = context.sourceCode.getDeclaredVariables(forStmt.init!);\n  for (const reference of indexVar.references) {\n    const id = reference.identifier;\n    if (contains(forStmt.body, id)) {\n      const arrayAccess = (id as TSESTree.Node).parent as estree.Node;\n      fixes.push(fixer.replaceText(arrayAccess, element));\n    }\n  }\n\n  return fixes;\n}\n\nfunction extractArrayExpression(forStmt: estree.ForStatement) {\n  return ((forStmt.test as estree.BinaryExpression).right as estree.MemberExpression).object;\n}\n\nfunction contains(outer: estree.Node, inner: estree.Node) {\n  return outer.range![0] <= inner.range![0] && outer.range![1] >= inner.range![1];\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { tsEslintRules } from '../typescript-eslint';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(tsEslintRules['prefer-for-of']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6598/javascript\n\nimport { Rule } from 'eslint';\nimport { interceptReport } from '../helpers';\n\n// Rewording one of the issue messages reported by the core implementation.\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.messages!['functionTypeOverCallableType'] =\n    '{{ literalOrInterface }} has only a call signature, you should use a function type instead.';\n  return interceptReport(rule, (context, reportDescriptor) => {\n    context.report({\n      ...reportDescriptor,\n    });\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { tsEslintRules } from '../typescript-eslint';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(tsEslintRules['prefer-function-type']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { interceptReport } from '../helpers';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, (context: Rule.RuleContext, descriptor: Rule.ReportDescriptor) => {\n    const { node } = descriptor as { node: estree.Node };\n    const moduleKeyword = context.sourceCode.getFirstToken(node, token => token.value === 'module');\n    if (moduleKeyword?.loc) {\n      context.report({ ...descriptor, loc: moduleKeyword.loc });\n    } else {\n      context.report(descriptor);\n    }\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4156/javascript\n\nimport { tsEslintRules as rules } from '../typescript-eslint';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(rules['prefer-namespace-keyword']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { tsEslintRules } from '../typescript-eslint';\nimport { type Rule } from 'eslint';\nimport {\n  getTypeFromTreeNode,\n  interceptReport,\n  isNullOrUndefinedType,\n  isObjectType,\n  isBooleanType,\n} from '../helpers';\nimport { type LogicalExpression } from 'estree';\n\nconst preferNullishCoalescingRule = tsEslintRules['prefer-nullish-coalescing'];\n\nexport const rule = interceptReport(preferNullishCoalescingRule, (context, reportDescriptor) => {\n  const { node: token, messageId } = reportDescriptor as Rule.ReportDescriptor & {\n    node: Rule.Node;\n    messageId: string;\n  };\n\n  if (messageId === 'preferNullishOverOr') {\n    const services = context.sourceCode.parserServices;\n    const rangeIndex = (\n      token as {\n        range: [number, number];\n      }\n    ).range[0];\n    const node = context.sourceCode.getNodeByRangeIndex(rangeIndex) as LogicalExpression;\n    const leftOperand = node.left;\n    const leftOperandType = getTypeFromTreeNode(leftOperand, services);\n\n    if (\n      leftOperandType.isUnion() &&\n      leftOperandType.types.some(isNullOrUndefinedType) &&\n      (leftOperandType.types.some(isBooleanType) || leftOperandType.types.some(isObjectType))\n    ) {\n      return;\n    }\n  }\n\n  context.report(reportDescriptor);\n});\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6661/javascript\n\nimport { Rule } from 'eslint';\nimport { CallExpression } from 'estree';\nimport { interceptReport } from '../helpers';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, (context, reportDescriptor) => {\n    if ('node' in reportDescriptor) {\n      const { node, ...rest } = reportDescriptor;\n      const call = node as CallExpression;\n      context.report({\n        node: call.callee,\n        ...rest,\n      });\n    }\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport { eslintRules } from '../core';\nimport { decorate } from './decorator';\nimport { isSupported } from '@sonar/jsts';\n\nconst decorated = decorate(eslintRules['prefer-object-spread']);\n\nexport const rule: Rule.RuleModule = {\n  meta: decorated.meta,\n  create(context) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax#browser_compatibility\n    if (!isSupported(context.filename, { node: '8.3.0' })) {\n      return {};\n    }\n\n    return decorated.create(context);\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4634/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isFunctionNode } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      promiseAction: 'Replace this trivial promise with \"Promise.{{action}}\".',\n      suggestPromiseAction: 'Replace with \"Promise.{{action}}\"',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      NewExpression: (node: estree.Node) => {\n        const newExpr = node as estree.NewExpression;\n        const executor = getPromiseExecutor(newExpr, context);\n        if (executor) {\n          checkExecutor(newExpr, executor, context);\n        }\n      },\n    };\n  },\n};\n\nfunction getPromiseExecutor(node: estree.NewExpression, context: Rule.RuleContext) {\n  if (\n    node.callee.type === 'Identifier' &&\n    context.sourceCode.getText(node.callee) === 'Promise' &&\n    node.arguments.length === 1\n  ) {\n    return node.arguments[0];\n  }\n  return undefined;\n}\n\nfunction checkExecutor(\n  newExpr: estree.NewExpression,\n  executor: estree.Node,\n  context: Rule.RuleContext,\n) {\n  if (!isFunctionNode(executor)) {\n    return;\n  }\n  const { params, body } = executor;\n  const [resolveParameterDeclaration, rejectParameterDeclaration] = params;\n\n  const resolveParameterName = getParameterName(resolveParameterDeclaration);\n  const rejectParameterName = getParameterName(rejectParameterDeclaration);\n\n  const bodyExpression = getOnlyBodyExpression(body);\n  if (bodyExpression && bodyExpression.type === 'CallExpression') {\n    const { callee, arguments: args } = bodyExpression;\n    if (callee.type === 'Identifier') {\n      const action = getPromiseAction(callee.name, resolveParameterName, rejectParameterName);\n      if (action && args.length === 1) {\n        context.report({\n          messageId: 'promiseAction',\n          data: {\n            action,\n          },\n          node: newExpr.callee,\n          suggest: [\n            {\n              messageId: 'suggestPromiseAction',\n              data: {\n                action,\n              },\n              fix: fixer => {\n                const argText = context.sourceCode.getText(args[0]);\n                return fixer.replaceText(newExpr, `Promise.${action}(${argText})`);\n              },\n            },\n          ],\n        });\n      }\n    }\n  }\n}\n\nfunction getOnlyBodyExpression(node: estree.Node) {\n  let bodyExpression: estree.Node | undefined;\n  if (node.type === 'BlockStatement') {\n    if (node.body.length === 1) {\n      const statement = node.body[0];\n      if (statement.type === 'ExpressionStatement') {\n        bodyExpression = statement.expression;\n      }\n    }\n  } else {\n    bodyExpression = node;\n  }\n  return bodyExpression;\n}\n\nfunction getPromiseAction(\n  callee: string,\n  resolveParameterName: string | undefined,\n  rejectParameterName: string | undefined,\n) {\n  switch (callee) {\n    case resolveParameterName:\n      return 'resolve';\n    case rejectParameterName:\n      return 'reject';\n    default:\n      return undefined;\n  }\n}\n\nfunction getParameterName(node: estree.Node | undefined) {\n  return node && node.type === 'Identifier' ? node.name : undefined;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6666/javascript\n\nimport { Rule, AST } from 'eslint';\nimport * as estree from 'estree';\nimport { interceptReport } from '../helpers';\n\n// core implementation of this rule does not provide quick fixes\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.hasSuggestions = true;\n  return interceptReport(rule, (context, reportDescriptor) => {\n    const suggest: Rule.SuggestionReportDescriptor[] = [];\n    const node = (reportDescriptor as any).node as estree.Node;\n    if (\n      node.type === 'CallExpression' &&\n      node.callee.type === 'MemberExpression' &&\n      node.arguments.length === 2\n    ) {\n      const {\n        callee: { object, property },\n        arguments: [, args],\n      } = node;\n      if (\n        property.type === 'Identifier' &&\n        property.name === 'apply' &&\n        object.range &&\n        args.range\n      ) {\n        const range: AST.Range = [object.range[1], args.range[0]];\n        suggest.push({\n          desc: 'Replace apply() with spread syntax',\n          fix: fixer => fixer.replaceTextRange(range, '(...'),\n        });\n      }\n    }\n    context.report({ ...reportDescriptor, suggest });\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { eslintRules } from '../core';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(eslintRules['prefer-spread']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6557/javascript\n\nimport { Rule } from 'eslint';\nimport { interceptReport } from '../helpers';\n\n// Core implementation of this rule does not provide a message for quick fixes. Normally, we would\n// just map the rule id to a message in src/linter/quickfixes/messages.ts. However,\n// here we need a different message per method, that is, String#startsWith and String#endsWith.\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.hasSuggestions = true;\n  return interceptReport(rule, (context, descriptor) => {\n    /**\n     * Because TypeScript ESLint's rule provides a different message id for the\n     * methods String#startsWith and String#endsWith, we reuse that very same\n     * identifier as the message id of the fix transformed into a suggestion.\n     */\n    const { fix, messageId } = descriptor as { fix: Rule.ReportFixer; messageId: string };\n    const suggest: Rule.SuggestionReportDescriptor[] = [\n      {\n        messageId,\n        fix,\n      },\n    ];\n    delete descriptor['fix'];\n    context.report({ ...descriptor, suggest });\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { tsEslintRules } from '../typescript-eslint';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(tsEslintRules['prefer-string-starts-ends-with']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { interceptReport } from '../helpers';\n\n// core implementation of this rule raises issues on binary expressions with string literal operand(s)\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, reportExempting(isTwoOperands));\n}\n\nfunction reportExempting(\n  exemptionCondition: (node: estree.BinaryExpression) => boolean,\n): (context: Rule.RuleContext, reportDescriptor: Rule.ReportDescriptor) => void {\n  return (context, reportDescriptor) => {\n    if ('node' in reportDescriptor) {\n      const expr = reportDescriptor['node'] as estree.BinaryExpression;\n      if (!exemptionCondition(expr)) {\n        context.report(reportDescriptor);\n      }\n    }\n  };\n}\n\nfunction isTwoOperands(node: estree.BinaryExpression) {\n  return node.right.type !== 'BinaryExpression' && node.left.type !== 'BinaryExpression';\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { eslintRules } from '../core';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(eslintRules['prefer-template']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4322/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { getMainFunctionTokenLocation } from 'eslint-plugin-sonarjs/lib/src/utils/locations';\nimport { getParent, RuleContext, isUndefined } from '../helpers';\n\ntype FunctionLikeDeclaration = TSESTree.FunctionDeclaration | TSESTree.FunctionExpression;\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      useTypePredicate:\n        'Declare this function return type using type predicate \"{{castedExpressionText}} is {{castedTypeText}}\".',\n      suggestTypePredicate: 'Use type predicate',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      \"MethodDefinition[kind='method'] FunctionExpression\"(node: estree.Node) {\n        checkFunctionLikeDeclaration(node as FunctionLikeDeclaration, context);\n      },\n      FunctionDeclaration(node: estree.Node) {\n        checkFunctionLikeDeclaration(node as FunctionLikeDeclaration, context);\n      },\n    };\n  },\n};\n\nfunction checkFunctionLikeDeclaration(\n  functionDeclaration: FunctionLikeDeclaration,\n  context: Rule.RuleContext,\n) {\n  if (\n    functionDeclaration.returnType &&\n    functionDeclaration.returnType.typeAnnotation.type === 'TSTypePredicate'\n  ) {\n    return;\n  }\n\n  const body = functionDeclaration.body;\n  const returnedExpression = getReturnedExpression(body);\n  if (!returnedExpression) {\n    return;\n  }\n\n  if (isInequalityBinaryExpression(returnedExpression)) {\n    const { left, right } = returnedExpression;\n    if (isUndefined(right)) {\n      checkCastedType(functionDeclaration, left, context);\n    } else if (isUndefined(left)) {\n      checkCastedType(functionDeclaration, right, context);\n    }\n  } else if (isBooleanCall(returnedExpression)) {\n    checkCastedType(functionDeclaration, returnedExpression.arguments[0], context);\n  } else if (isNegation(returnedExpression) && isNegation(returnedExpression.argument)) {\n    checkCastedType(functionDeclaration, returnedExpression.argument.argument, context);\n  }\n}\n\nfunction getReturnedExpression(\n  block?: TSESTree.BlockStatement | null,\n): TSESTree.Expression | undefined | null {\n  if (block && block.body.length === 1) {\n    const statement = block.body[0];\n    if (statement.type === 'ReturnStatement') {\n      return statement.argument;\n    }\n  }\n  return undefined;\n}\n\nfunction isInequalityBinaryExpression(\n  returnExpression: TSESTree.Expression,\n): returnExpression is TSESTree.BinaryExpression {\n  return (\n    returnExpression.type === 'BinaryExpression' &&\n    (returnExpression.operator === '!==' || returnExpression.operator === '!=')\n  );\n}\n\nfunction checkCastedType(\n  node: FunctionLikeDeclaration,\n  expression: TSESTree.Node,\n  context: Rule.RuleContext,\n) {\n  const sourceCode = context.sourceCode;\n  const castedType = getCastTupleFromMemberExpression(expression);\n  if (castedType && (castedType[1] as TSESTree.Node).type !== 'TSAnyKeyword') {\n    const nOfParam = node.params.length;\n    if (nOfParam === 1 || (nOfParam === 0 && castedType[0].type === 'ThisExpression')) {\n      const castedExpressionText = sourceCode.getText(castedType[0]);\n      const castedTypeText = sourceCode.getText(castedType[1]);\n      const predicate = `: ${castedExpressionText} is ${castedTypeText}`;\n      const suggest = getTypePredicateSuggestion(node, context, predicate);\n      context.report({\n        messageId: 'useTypePredicate',\n        data: {\n          castedExpressionText,\n          castedTypeText,\n        },\n        loc: getMainFunctionTokenLocation(\n          node as TSESTree.FunctionLike,\n          getParent(context, node as estree.Node) as TSESTree.Node,\n          context as unknown as RuleContext,\n        ),\n        suggest,\n      });\n    }\n  }\n}\n\nfunction getTypePredicateSuggestion(\n  node: FunctionLikeDeclaration,\n  context: Rule.RuleContext,\n  predicate: string,\n) {\n  const suggestions: Rule.SuggestionReportDescriptor[] = [];\n  let fix: (fixer: Rule.RuleFixer) => Rule.Fix;\n  if (node.returnType) {\n    fix = fixer => fixer.replaceText(node.returnType as unknown as estree.Node, predicate);\n  } else {\n    const closingParenthesis = context.sourceCode.getTokenBefore(\n      node.body as estree.Node,\n      token => token.value === ')',\n    )!;\n    fix = fixer => fixer.insertTextAfter(closingParenthesis, predicate);\n  }\n  suggestions.push({ messageId: 'suggestTypePredicate', fix });\n  return suggestions;\n}\n\nfunction getCastTupleFromMemberExpression(\n  node: TSESTree.Node,\n): [estree.Node, estree.Node] | undefined {\n  if (node.type === 'MemberExpression') {\n    const object = node.object as TSESTree.Node;\n    if (object.type === 'TSAsExpression' || object.type === 'TSTypeAssertion') {\n      return [object.expression as estree.Node, object.typeAnnotation as unknown as estree.Node];\n    }\n  }\n  return undefined;\n}\n\nfunction isNegation(node: TSESTree.Expression): node is TSESTree.UnaryExpression {\n  return node.type === 'UnaryExpression' && node.prefix && node.operator === '!';\n}\n\nfunction isBooleanCall(node: TSESTree.Expression): node is TSESTree.CallExpression {\n  if (node.type === 'CallExpression') {\n    const callee = node.callee;\n    return node.arguments.length === 1 && callee.type === 'Identifier' && callee.name === 'Boolean';\n  }\n  return false;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4823/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isMemberExpression } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      safeArg: `Make sure that command line arguments are used safely here.`,\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      MemberExpression(node: estree.Node) {\n        if (isMemberExpression(node, 'process', 'argv')) {\n          context.report({\n            messageId: 'safeArg',\n            node,\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4507/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  flattenArgs,\n  getUniqueWriteUsageOrNode,\n  getFullyQualifiedName,\n  isMemberWithProperty,\n} from '../helpers';\n\nconst ERRORHANDLER_MODULE = 'errorhandler';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      deactivateDebug:\n        'Make sure this debug feature is deactivated before delivering the code in production.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      CallExpression(node: estree.Node) {\n        const callExpression = node as estree.CallExpression;\n        // app.use(...)\n        checkErrorHandlerMiddleware(context, callExpression);\n      },\n    };\n  },\n};\n\nfunction checkErrorHandlerMiddleware(\n  context: Rule.RuleContext,\n  callExpression: estree.CallExpression,\n) {\n  const { callee, arguments: args } = callExpression;\n  if (\n    isMemberWithProperty(callee, 'use') &&\n    args.length > 0 &&\n    !isInsideConditional(context, callExpression)\n  ) {\n    for (const m of flattenArgs(context, args)) {\n      const middleware = getUniqueWriteUsageOrNode(context, m);\n      if (\n        middleware.type === 'CallExpression' &&\n        getFullyQualifiedName(context, middleware) === ERRORHANDLER_MODULE\n      ) {\n        context.report({\n          node: middleware,\n          messageId: 'deactivateDebug',\n        });\n      }\n    }\n  }\n}\n\nfunction isInsideConditional(context: Rule.RuleContext, node: estree.Node): boolean {\n  const ancestors = context.sourceCode.getAncestors(node);\n  return ancestors.some(ancestor => ancestor.type === 'IfStatement');\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2245/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getFullyQualifiedName } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      safeGenerator: 'Make sure that using this pseudorandom number generator is safe here.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      CallExpression(node: estree.CallExpression) {\n        const fqn = getFullyQualifiedName(context, node);\n        if (fqn === 'Math.random') {\n          context.report({\n            messageId: 'safeGenerator',\n            node,\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1444/javascript\n\nimport { Rule } from 'eslint';\nimport { PropertyDefinition } from 'estree';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      message: `Make this public static property readonly.`,\n      fix: 'Add \"readonly\" keyword',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      'PropertyDefinition[readonly!=true][static=true][accessibility!=\"private\"][accessibility!=\"protected\"]'(\n        node: PropertyDefinition,\n      ) {\n        context.report({\n          messageId: 'message',\n          node: node.key,\n          suggest: [\n            {\n              fix: fixer => {\n                const tokens = context.sourceCode.getTokens(node);\n                const staticToken = tokens.find(t => t.value === 'static');\n                return fixer.insertTextAfter(staticToken!, ' readonly');\n              },\n              messageId: 'fix',\n            },\n          ],\n        });\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5443/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\n\nconst UNIX_DIRECTORIES = [\n  '/tmp/',\n  '/var/tmp/',\n  '/usr/tmp/',\n  '/dev/shm/',\n  '/dev/mqueue/',\n  '/run/lock/',\n  '/var/run/lock/',\n  '/library/caches/',\n  '/users/shared/',\n  '/private/tmp/',\n  '/private/var/tmp/',\n].map(v => new RegExp(`^${v}`, 'i'));\n\nconst WINDOWS_DIRECTORIES_PATTERN = new RegExp(\n  '^[^\\\\\\\\]*(\\\\\\\\){1,2}(Windows(\\\\\\\\){1,2}Temp|Temp|TMP)(\\\\\\\\.*|$)',\n  'i',\n);\nconst SENSITIVE_ENV_VARIABLES = ['TMPDIR', 'TMP', 'TEMPDIR', 'TEMP'];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      safeDirectory: 'Make sure publicly writable directories are used safely here.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      Literal: (node: estree.Node) => {\n        const literal = node as estree.Literal;\n        // Using literal.raw instead of literal.value as the latter escapes backslashes\n        const value = literal.raw?.slice(1, literal.raw.length - 1);\n        if (\n          value &&\n          (UNIX_DIRECTORIES.find(i => value.match(i)) || value.match(WINDOWS_DIRECTORIES_PATTERN))\n        ) {\n          context.report({\n            node: literal,\n            messageId: 'safeDirectory',\n          });\n        }\n      },\n      MemberExpression: (node: estree.Node) => {\n        const memberExpression = node as estree.MemberExpression;\n        const { object, property } = memberExpression;\n        if (\n          property.type !== 'Identifier' ||\n          !SENSITIVE_ENV_VARIABLES.includes(property.name) ||\n          object.type !== 'MemberExpression'\n        ) {\n          return;\n        }\n        if (\n          object.property.type === 'Identifier' &&\n          object.property.name === 'env' &&\n          object.object.type === 'Identifier' &&\n          object.object.name === 'process'\n        ) {\n          context.report({ node: memberExpression, messageId: 'safeDirectory' });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6959/javascript\n\nimport * as estree from 'estree';\nimport { Rule } from 'eslint';\nimport {\n  getUniqueWriteUsageOrNode,\n  isArray as isArrayType,\n  isArrayExpression,\n  isCallingMethod,\n  isRequiredParserServices,\n} from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      message: 'Add an initial value to this \"reduce()\" call.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n\n    function isArray(node: estree.Node) {\n      if (isRequiredParserServices(services)) {\n        return isArrayType(node, services);\n      } else {\n        return isArrayExpression(getUniqueWriteUsageOrNode(context, node));\n      }\n    }\n\n    return {\n      CallExpression(node) {\n        if (isCallingMethod(node, 1, 'reduce') && isArray(node.callee.object)) {\n          context.report({\n            node: node.callee.property,\n            messageId: 'message',\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6564/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { isTypeAlias } from '../helpers';\n\nconst COMMON_NODE_TYPES = new Set([\n  'TSAnyKeyword',\n  'TSBigIntKeyword',\n  'TSBooleanKeyword',\n  'TSNeverKeyword',\n  'TSNullKeyword',\n  'TSNumberKeyword',\n  'TSStringKeyword',\n  'TSSymbolKeyword',\n  'TSUndefinedKeyword',\n  'TSUnknownKeyword',\n  'TSVoidKeyword',\n]);\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      redundantTypeAlias:\n        'Remove this redundant type alias and replace its occurrences with \"{{type}}\".',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      TSTypeAliasDeclaration(node: estree.Node) {\n        const { id, typeAnnotation } = node as unknown as TSESTree.TSTypeAliasDeclaration;\n        if (COMMON_NODE_TYPES.has(typeAnnotation.type) || isTypeAlias(typeAnnotation, context)) {\n          const sourceCode = context.sourceCode;\n          const tpe = sourceCode.getTokens(typeAnnotation as unknown as estree.Node)[0];\n          context.report({\n            messageId: 'redundantTypeAlias',\n            node: id,\n            data: {\n              type: tpe.value,\n            },\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5843/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport * as regexpp from '@eslint-community/regexpp';\nimport {\n  Assertion,\n  Backreference,\n  CapturingGroup,\n  CharacterClass,\n  Group,\n  LookaroundAssertion,\n  Pattern,\n  Quantifier,\n} from '@eslint-community/regexpp/ast';\nimport {\n  getUniqueWriteUsage,\n  isBinaryPlus,\n  isIdentifier,\n  isRegexLiteral,\n  isRequiredParserServices,\n  isStaticTemplateLiteral,\n  isStringLiteral,\n  LocationHolder,\n  toEncodedMessage,\n} from '../helpers';\nimport {\n  getParsedRegex,\n  getRegexpLocation,\n  getRegexpRange,\n  isRegExpConstructor,\n  isStringRegexMethodCall,\n} from '../helpers/regex';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nconst DEFAULT_THESHOLD = 20;\n\nexport type Options = [\n  {\n    threshold: number;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          threshold: {\n            type: 'integer',\n          },\n        },\n      },\n      {\n        type: 'string',\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const options = context.options as Options;\n    const threshold = options.length > 0 ? options[0].threshold : DEFAULT_THESHOLD;\n    const services = context.sourceCode.parserServices;\n    const regexNodes: estree.Node[] = [];\n    return {\n      'Literal[regex]:exit': (node: estree.Node) => {\n        regexNodes.push(node);\n      },\n      'NewExpression:exit': (node: estree.Node) => {\n        if (isRegExpConstructor(node)) {\n          regexNodes.push(node);\n        }\n      },\n      'CallExpression:exit': (node: estree.Node) => {\n        const callExpr = node as estree.CallExpression;\n        if (isRequiredParserServices(services) && isStringRegexMethodCall(callExpr, services)) {\n          regexNodes.push(callExpr.arguments[0]);\n        } else if (isRegExpConstructor(callExpr)) {\n          regexNodes.push(callExpr);\n        }\n      },\n      'Program:exit': () => {\n        regexNodes.forEach(regexNode => checkRegexComplexity(regexNode, threshold, context));\n      },\n    };\n  },\n};\n\nfunction checkRegexComplexity(\n  regexNode: estree.Node,\n  threshold: number,\n  context: Rule.RuleContext,\n) {\n  for (const regexParts of findRegexParts(regexNode, context)) {\n    let complexity = 0;\n    const secondaryLocations: LocationHolder[] = [];\n    const secondaryMessages: string[] = [];\n    for (const regexPart of regexParts) {\n      const calculator = new ComplexityCalculator(regexPart, context);\n      calculator.visit();\n      calculator.components.forEach(component => {\n        secondaryLocations.push(component.location);\n        secondaryMessages.push(component.message);\n      });\n      complexity += calculator.complexity;\n    }\n    if (complexity > threshold) {\n      context.report({\n        message: toEncodedMessage(\n          `Simplify this regular expression to reduce its complexity from ${complexity} to the ${threshold} allowed.`,\n          secondaryLocations,\n          secondaryMessages,\n          complexity - threshold,\n        ),\n        node: regexParts[0],\n      });\n    }\n  }\n}\n\ntype RegexPart = estree.Literal | estree.TemplateLiteral;\n\nfunction findRegexParts(node: estree.Node, context: Rule.RuleContext): RegexPart[][] {\n  const finder = new RegexPartFinder(context);\n  finder.find(node);\n  return finder.parts;\n}\n\nclass RegexPartFinder {\n  readonly parts: RegexPart[][] = [];\n\n  readonly handledIdentifiers: Array<estree.Node> = [];\n\n  constructor(private readonly context: Rule.RuleContext) {}\n\n  find(node: estree.Node) {\n    if (isRegExpConstructor(node)) {\n      this.find(node.arguments[0]);\n    } else if (isRegexLiteral(node)) {\n      this.parts.push([node]);\n    } else if (isStringLiteral(node)) {\n      this.parts.push([node]);\n    } else if (isStaticTemplateLiteral(node)) {\n      this.parts.push([node]);\n    } else if (isIdentifier(node)) {\n      if (!this.handledIdentifiers.includes(node)) {\n        this.handledIdentifiers.push(node);\n\n        const initializer = getUniqueWriteUsage(this.context, node.name, node);\n\n        if (initializer) {\n          this.find(initializer);\n        }\n      }\n    } else if (isBinaryPlus(node)) {\n      const literals: estree.Literal[] = [];\n      this.findInStringConcatenation(node.left, literals);\n      this.findInStringConcatenation(node.right, literals);\n      if (literals.length > 0) {\n        this.parts.push(literals);\n      }\n    }\n  }\n\n  findInStringConcatenation(node: estree.Node, literals: estree.Literal[]) {\n    if (isStringLiteral(node)) {\n      literals.push(node);\n    } else if (isBinaryPlus(node)) {\n      this.findInStringConcatenation(node.left, literals);\n      this.findInStringConcatenation(node.right, literals);\n    } else {\n      this.find(node);\n    }\n  }\n}\n\ntype Disjunction = CapturingGroup | Group | LookaroundAssertion | Pattern;\n\nclass ComplexityCalculator {\n  nesting = 1;\n  complexity = 0;\n  components: { location: LocationHolder; message: string }[] = [];\n  regexPartAST: regexpp.AST.Node | null;\n\n  constructor(\n    readonly regexPart: RegexPart,\n    readonly context: Rule.RuleContext,\n  ) {\n    this.regexPartAST = getParsedRegex(regexPart, context);\n  }\n\n  visit() {\n    if (!this.regexPartAST) {\n      return;\n    }\n    regexpp.visitRegExpAST(this.regexPartAST, {\n      onAssertionEnter: (node: Assertion) => {\n        /* lookaround */\n        if (node.kind === 'lookahead' || node.kind === 'lookbehind') {\n          const [start, end] = getRegexpRange(this.regexPart, node);\n          this.increaseComplexity(this.nesting, node, [\n            0,\n            -(end - start - 1) + (node.kind === 'lookahead' ? '?='.length : '?<='.length),\n          ]);\n          this.nesting++;\n          this.onDisjunctionEnter(node);\n        }\n      },\n      onAssertionLeave: (node: Assertion) => {\n        /* lookaround */\n        if (node.kind === 'lookahead' || node.kind === 'lookbehind') {\n          this.onDisjunctionLeave(node);\n          this.nesting--;\n        }\n      },\n      onBackreferenceEnter: (node: Backreference) => {\n        this.increaseComplexity(1, node);\n      },\n      onCapturingGroupEnter: (node: CapturingGroup) => {\n        /* disjunction */\n        this.onDisjunctionEnter(node);\n      },\n      onCapturingGroupLeave: (node: CapturingGroup) => {\n        /* disjunction */\n        this.onDisjunctionLeave(node);\n      },\n      onCharacterClassEnter: (node: CharacterClass) => {\n        /* character class */\n        const [start, end] = getRegexpRange(this.regexPart, node);\n        this.increaseComplexity(1, node, [0, -(end - start - 1)]);\n        this.nesting++;\n      },\n      onCharacterClassLeave: (_node: CharacterClass) => {\n        /* character class */\n        this.nesting--;\n      },\n      onGroupEnter: (node: Group) => {\n        /* disjunction */\n        this.onDisjunctionEnter(node);\n      },\n      onGroupLeave: (node: Group) => {\n        /* disjunction */\n        this.onDisjunctionLeave(node);\n      },\n      onPatternEnter: (node: Pattern) => {\n        /* disjunction */\n        this.onDisjunctionEnter(node);\n      },\n      onPatternLeave: (node: Pattern) => {\n        /* disjunction */\n        this.onDisjunctionLeave(node);\n      },\n      onQuantifierEnter: (node: Quantifier) => {\n        /* repetition */\n        const [start] = getRegexpRange(this.regexPart, node);\n        const [, end] = getRegexpRange(this.regexPart, node.element);\n        this.increaseComplexity(this.nesting, node, [end - start, 0]);\n        this.nesting++;\n      },\n      onQuantifierLeave: (_node: Quantifier) => {\n        /* repetition */\n        this.nesting--;\n      },\n    });\n  }\n\n  private increaseComplexity(increment: number, node: regexpp.AST.Node, offset?: number[]) {\n    this.complexity += increment;\n    let message = '+' + increment;\n    if (increment > 1) {\n      message += ` (incl ${increment - 1} for nesting)`;\n    }\n    const loc = getRegexpLocation(this.regexPart, node, this.context, offset);\n    if (loc) {\n      this.components.push({\n        location: {\n          loc,\n        },\n        message,\n      });\n    }\n  }\n\n  private onDisjunctionEnter(node: Disjunction) {\n    if (node.alternatives.length > 1) {\n      let { alternatives } = node;\n      let increment = this.nesting;\n      while (alternatives.length > 1) {\n        const [start, end] = getRegexpRange(this.regexPart, alternatives[1]);\n        this.increaseComplexity(increment, alternatives[1], [-1, -(end - start)]);\n        increment = 1;\n        alternatives = alternatives.slice(1);\n      }\n      this.nesting++;\n    }\n  }\n\n  private onDisjunctionLeave(node: Disjunction) {\n    if (node.alternatives.length > 1) {\n      this.nesting--;\n    }\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4784/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isIdentifier, isMemberWithProperty } from '../helpers';\n\nconst stringMethods = ['match', 'search', 'split'];\nconst minPatternLength = 3;\nconst specialChars = ['+', '*', '{'];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      safeRegex: 'Make sure that using a regular expression is safe here.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      Literal(node: estree.Node) {\n        const { regex } = node as estree.RegExpLiteral;\n        if (regex) {\n          const { pattern } = regex;\n          if (isUnsafeRegexLiteral(pattern)) {\n            context.report({\n              messageId: 'safeRegex',\n              node,\n            });\n          }\n        }\n      },\n\n      CallExpression(node: estree.Node) {\n        const { callee, arguments: args } = node as estree.CallExpression;\n        if (isMemberWithProperty(callee, ...stringMethods)) {\n          checkFirstArgument(args, context);\n        }\n      },\n\n      NewExpression(node: estree.Node) {\n        const { callee, arguments: args } = node as estree.NewExpression;\n        if (isIdentifier(callee, 'RegExp')) {\n          checkFirstArgument(args, context);\n        }\n      },\n    };\n  },\n};\n\nfunction checkFirstArgument(args: estree.Node[], context: Rule.RuleContext) {\n  const firstArg = args[0];\n  if (\n    firstArg &&\n    firstArg.type === 'Literal' &&\n    typeof firstArg.value === 'string' &&\n    isUnsafeRegexLiteral(firstArg.value)\n  ) {\n    context.report({\n      messageId: 'safeRegex',\n      node: firstArg,\n    });\n  }\n}\n\nfunction isUnsafeRegexLiteral(value: string) {\n  return value.length >= minPatternLength && hasEnoughNumberOfSpecialChars(value);\n}\n\nfunction hasEnoughNumberOfSpecialChars(value: string) {\n  let numberOfSpecialChars = 0;\n  for (const c of value) {\n    if (specialChars.includes(c)) {\n      numberOfSpecialChars++;\n    }\n    if (numberOfSpecialChars === 2) {\n      return true;\n    }\n  }\n  return false;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6441/javascript\n\nimport { Rule } from 'eslint';\nimport reactHooks from 'eslint-plugin-react-hooks';\nimport { mergeRules, rule as detectReact } from '../helpers';\n\nconst rulesOfHooks = reactHooks.rules['rules-of-hooks'];\n\nexport const rule: Rule.RuleModule = {\n  meta: rulesOfHooks.meta,\n  create(context: Rule.RuleContext) {\n    function overrideContext(overrides: any) {\n      Object.setPrototypeOf(overrides, context);\n      return overrides;\n    }\n\n    let isReact = false;\n\n    const detectReactListener = detectReact.create(\n      overrideContext({\n        report(_descriptor: Rule.ReportDescriptor): void {\n          isReact = true;\n        },\n      }),\n    );\n    const rulesOfHooksListener = rulesOfHooks.create(\n      overrideContext({\n        report(descriptor: Rule.ReportDescriptor): void {\n          if (isReact) {\n            context.report(descriptor);\n          }\n        },\n      }),\n    );\n\n    return mergeRules(detectReactListener, rulesOfHooksListener);\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1438/javascript\n\nimport { Rule } from 'eslint';\nimport { interceptReport } from '../helpers';\n\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, fixLocation);\n}\n\nfunction fixLocation(context: Rule.RuleContext, reportDescriptor: Rule.ReportDescriptor) {\n  const report = reportDescriptor as any;\n  if (report.loc?.start && report.messageId === 'missingSemi') {\n    report.loc = report.loc.start;\n  }\n  context.report(reportDescriptor);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { tsEslintRules } from '../typescript-eslint';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(tsEslintRules['semi']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5876/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { childrenOf } from '../../linter';\nimport {\n  isIdentifier,\n  getPropertyWithValue,\n  last,\n  getValueOfExpression,\n  getFullyQualifiedName,\n} from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      createSession:\n        'Create a new session during user authentication to prevent session fixation attacks.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    let sessionRegenerate = false;\n\n    function isSessionRegenerate(node: estree.Node) {\n      return (\n        node.type === 'CallExpression' &&\n        node.callee.type === 'MemberExpression' &&\n        isIdentifier(node.callee.property, 'regenerate')\n      );\n    }\n\n    function visitCallback(node: estree.Node) {\n      if (sessionRegenerate) {\n        // terminate recursion once call is detected\n        return;\n      }\n      if (isSessionRegenerate(node)) {\n        sessionRegenerate = true;\n        return;\n      }\n      childrenOf(node, context.sourceCode.visitorKeys).forEach(visitCallback);\n    }\n\n    function hasSessionFalseOption(callExpression: estree.CallExpression) {\n      const opt = callExpression.arguments[1];\n      if (opt?.type === 'ObjectExpression') {\n        const sessionProp = getPropertyWithValue(context, opt, 'session', false);\n        return !!sessionProp;\n      }\n      return false;\n    }\n\n    return {\n      CallExpression: (node: estree.Node) => {\n        const callExpression = node as estree.CallExpression;\n        if (getFullyQualifiedName(context, callExpression) === 'passport.authenticate') {\n          if (hasSessionFalseOption(callExpression)) {\n            return;\n          }\n          const parent = last(context.sourceCode.getAncestors(node));\n          if (parent.type === 'CallExpression') {\n            const callback = getValueOfExpression(\n              context,\n              (parent as estree.CallExpression).arguments[2],\n              'FunctionExpression',\n            );\n            if (callback && callback.type === 'FunctionExpression') {\n              sessionRegenerate = false;\n              visitCallback(callback);\n              if (!sessionRegenerate) {\n                context.report({ node: callback, messageId: 'createSession' });\n              }\n            }\n          }\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3499/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    function raiseIssue(\n      node: estree.ObjectExpression,\n      begin: number,\n      end: number,\n      positionMessage: string,\n    ) {\n      const properties = node.properties;\n      const secondaryNodes = [];\n      const secondaryMessages = [];\n\n      for (let i = begin; i < end; i++) {\n        const prop = properties[i] as estree.Property;\n        if (prop.shorthand) {\n          secondaryNodes.push(prop);\n          secondaryMessages.push(`Move to ${positionMessage}`);\n        }\n      }\n\n      const message = toEncodedMessage(\n        `Group all shorthand properties at ${positionMessage} of this object declaration.`,\n        secondaryNodes as TSESTree.Node[],\n        secondaryMessages,\n      );\n\n      context.report({\n        message,\n        loc: context.sourceCode.getFirstToken(node)!.loc,\n      });\n    }\n    return {\n      ObjectExpression(node: estree.Node) {\n        const objectExpression = node as estree.ObjectExpression;\n        const objectExpressionProperties = objectExpression.properties;\n        if (objectExpressionProperties.some(p => p.type !== 'Property')) {\n          return;\n        }\n        const isShorthandPropertyList = objectExpressionProperties.map(\n          p => (p as estree.Property).shorthand,\n        );\n        const shorthandPropertiesNumber = isShorthandPropertyList.filter(b => b).length;\n\n        const numberOfShorthandAtBeginning = getNumberOfTrueAtBeginning(isShorthandPropertyList);\n        const numberOfShorthandAtEnd = getNumberOfTrueAtBeginning(\n          [...isShorthandPropertyList].reverse(),\n        );\n\n        const allAtBeginning = numberOfShorthandAtBeginning === shorthandPropertiesNumber;\n        const allAtEnd = numberOfShorthandAtEnd === shorthandPropertiesNumber;\n\n        const propertiesNumber = isShorthandPropertyList.length;\n\n        if (!allAtBeginning && numberOfShorthandAtBeginning > numberOfShorthandAtEnd) {\n          raiseIssue(\n            objectExpression,\n            numberOfShorthandAtBeginning,\n            propertiesNumber,\n            'the beginning',\n          );\n        } else if (!allAtEnd && numberOfShorthandAtEnd > numberOfShorthandAtBeginning) {\n          raiseIssue(objectExpression, 0, propertiesNumber - numberOfShorthandAtEnd, 'the end');\n        } else if (!allAtBeginning && !allAtEnd) {\n          raiseIssue(objectExpression, 0, propertiesNumber, 'either the beginning or end');\n        }\n      },\n    };\n  },\n};\n\nfunction getNumberOfTrueAtBeginning(list: Array<boolean>) {\n  let numberOfTrueAtBeginning = 0;\n  for (const b of list) {\n    if (b) {\n      numberOfTrueAtBeginning++;\n    } else {\n      break;\n    }\n  }\n  return numberOfTrueAtBeginning;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6397/javascript\n\nimport { Rule } from 'eslint';\nimport { CharacterClass, CharacterClassElement } from '@eslint-community/regexpp/ast';\nimport { createRegExpRule } from '../helpers/regex';\n\nconst FORBIDDEN_TYPES = [\n  'EscapeCharacterSet',\n  'UnicodePropertyCharacterSet',\n  'Character',\n  'CharacterSet',\n];\nconst EXCEPTION_META_CHARACTERS = '[{(.?+*$^\\\\\\\\';\n\nexport const rule: Rule.RuleModule = createRegExpRule(\n  context => {\n    return {\n      onCharacterClassEnter: (node: CharacterClass) => {\n        if (hasSingleForbiddenCharacter(node.elements) && !node.negate) {\n          context.reportRegExpNode({\n            messageId: 'issue',\n            node: context.node,\n            regexpNode: node,\n          });\n        }\n      },\n    };\n  },\n  {\n    meta: {\n      messages: {\n        issue: 'Replace this character class by the character itself.',\n      },\n    },\n  },\n);\n\nfunction hasSingleForbiddenCharacter(elems: CharacterClassElement[]) {\n  return (\n    elems.length === 1 &&\n    FORBIDDEN_TYPES.includes(elems[0].type) &&\n    !EXCEPTION_META_CHARACTERS.includes(elems[0].raw)\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6035/javascript\n\nimport { Rule } from 'eslint';\nimport { AST } from '@eslint-community/regexpp';\nimport { Alternation, createRegExpRule } from '../helpers/regex';\n\nexport const rule: Rule.RuleModule = createRegExpRule(context => {\n  function checkAlternation(alternation: Alternation) {\n    const { alternatives } = alternation;\n    if (alternatives.length <= 1) {\n      return;\n    }\n    if (\n      alternatives.every(alt => alt.elements.length === 1 && alt.elements[0].type === 'Character')\n    ) {\n      context.reportRegExpNode({\n        message: 'Replace this alternation with a character class.',\n        node: context.node,\n        regexpNode: alternation,\n      });\n    }\n  }\n  return {\n    onPatternEnter: checkAlternation,\n    onGroupEnter: checkAlternation,\n    onCapturingGroupEnter: checkAlternation,\n    onAssertionEnter(node: AST.Assertion) {\n      if (node.kind === 'lookahead' || node.kind === 'lookbehind') {\n        checkAlternation(node as Alternation);\n      }\n    },\n  };\n});\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5852/javascript\n\nimport { Rule } from 'eslint';\nimport { RegExpLiteral } from '@eslint-community/regexpp/ast';\nimport { analyse } from 'scslre';\nimport { createRegExpRule } from '../helpers/regex';\n\nconst message = `Make sure the regex used here, which is vulnerable to super-linear runtime due to backtracking, cannot lead to denial of service.`;\n\nexport const rule: Rule.RuleModule = createRegExpRule(context => {\n  return {\n    onRegExpLiteralEnter: (node: RegExpLiteral) => {\n      const { reports } = analyse(node);\n      if (reports.length > 0) {\n        context.report({\n          message,\n          node: context.node,\n        });\n      }\n    },\n  };\n});\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4818/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getFullyQualifiedName } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      safeSocket: 'Make sure that sockets are used safely here.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      NewExpression: (node: estree.Node) =>\n        checkCallExpression(node as estree.NewExpression, context, 'net.Socket'),\n      CallExpression: (node: estree.Node) =>\n        checkCallExpression(\n          node as estree.CallExpression,\n          context,\n          'net.createConnection',\n          'net.connect',\n        ),\n    };\n  },\n};\n\nfunction checkCallExpression(\n  callExpr: estree.CallExpression,\n  context: Rule.RuleContext,\n  ...sensitiveFqns: string[]\n) {\n  const callFqn = getFullyQualifiedName(context, callExpr);\n  if (sensitiveFqns.some(sensitiveFqn => sensitiveFqn === callFqn)) {\n    context.report({ messageId: 'safeSocket', node: callExpr.callee });\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2392/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    let scopeRanges: [number, number][] = [];\n    let reported: estree.Identifier[] = [];\n\n    function enterScope(node: estree.Node) {\n      scopeRanges.push(node.range!);\n    }\n\n    function exitScope() {\n      scopeRanges.pop();\n    }\n\n    return {\n      Program(node) {\n        scopeRanges = [node.range!];\n        reported = [];\n      },\n\n      BlockStatement: enterScope,\n      'BlockStatement:exit': exitScope,\n      ForStatement: enterScope,\n      'ForStatement:exit': exitScope,\n      ForInStatement: enterScope,\n      'ForInStatement:exit': exitScope,\n      ForOfStatement: enterScope,\n      'ForOfStatement:exit': exitScope,\n      SwitchStatement: enterScope,\n      'SwitchStatement:exit': exitScope,\n\n      VariableDeclaration: (node: estree.Node) => {\n        const varDeclaration = node as estree.VariableDeclaration;\n\n        if (varDeclaration.kind !== 'var') {\n          return;\n        }\n\n        const scopeRange = scopeRanges[scopeRanges.length - 1];\n\n        function isOutsideOfScope(reference: estree.Identifier) {\n          const idRange = reference.range!;\n          return idRange[0] < scopeRange[0] || idRange[1] > scopeRange[1];\n        }\n\n        context.sourceCode.getDeclaredVariables(node).forEach(variable => {\n          const referencesOutside = variable.references\n            .map(ref => ref.identifier)\n            .filter(isOutsideOfScope);\n          if (referencesOutside.length === 0) {\n            return;\n          }\n          const definition = variable.defs.find(def =>\n            varDeclaration.declarations.includes(def.node),\n          );\n          if (definition && !reported.includes(definition.name)) {\n            context.report({\n              node: definition.name,\n              message: toEncodedMessage(\n                `Consider moving declaration of '${variable.name}' ` +\n                  `as it is referenced outside current binding context.`,\n                referencesOutside as TSESTree.Node[],\n                Array(referencesOutside.length).fill('Outside reference.'),\n              ),\n            });\n            variable.defs.map(def => def.name).forEach(defId => reported.push(defId));\n          }\n        });\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6439/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  getTypeFromTreeNode,\n  isBigIntType,\n  isNumberType,\n  isRequiredParserServices,\n  isStringType,\n} from '../helpers';\n\nconst detectReactNativeSelector = [\n  ':matches(',\n  [\n    'CallExpression[callee.name=\"require\"][arguments.0.value=\"react-native\"]',\n    'ImportDeclaration[source.value=\"react-native\"]',\n  ].join(','),\n  ')',\n].join('');\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      nonBooleanMightRender: 'Convert the conditional to a boolean to avoid leaked value',\n      suggestConversion: 'Convert the conditional to a boolean',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    if (!isRequiredParserServices(context.sourceCode.parserServices)) {\n      return {};\n    }\n    let usesReactNative = false;\n\n    return {\n      [detectReactNativeSelector]() {\n        usesReactNative = true;\n      },\n      'JSXExpressionContainer > LogicalExpression[operator=\"&&\"]'(node: estree.LogicalExpression) {\n        const leftSide = node.left;\n        checkNonBoolean(context, usesReactNative ? isStringOrNumber : isNumber, leftSide);\n      },\n    };\n  },\n};\n\nfunction report(node: estree.Node, context: Rule.RuleContext) {\n  context.report({\n    messageId: 'nonBooleanMightRender',\n    node,\n    suggest: [\n      {\n        messageId: 'suggestConversion',\n        fix: fixer => {\n          const sourceCode = context.sourceCode;\n          const previousToken = sourceCode.getTokenBefore(node);\n          const nextToken = sourceCode.getTokenAfter(node);\n\n          const fixes = [];\n          if (\n            !!previousToken &&\n            !!nextToken &&\n            node.range !== undefined &&\n            previousToken.value === '(' &&\n            previousToken.range[1] <= node.range[0] &&\n            nextToken.value === ')' &&\n            nextToken.range[0] >= node.range[1]\n          ) {\n            fixes.push(fixer.remove(previousToken));\n            fixes.push(fixer.remove(nextToken));\n          }\n          fixes.push(fixer.replaceText(node, `!!(${sourceCode.getText(node)})`));\n          return fixes;\n        },\n      },\n    ],\n  });\n}\n\nfunction isStringOrNumber(node: estree.Node, context: Rule.RuleContext) {\n  const type = getTypeFromTreeNode(node, context.sourceCode.parserServices);\n  return isStringType(type) || isBigIntType(type) || isNumberType(type);\n}\n\nfunction isNumber(node: estree.Node, context: Rule.RuleContext) {\n  const type = getTypeFromTreeNode(node, context.sourceCode.parserServices);\n  return isBigIntType(type) || isNumberType(type);\n}\n\nfunction checkNonBoolean(\n  context: Rule.RuleContext,\n  isLeakingType: (node: estree.Node, context: Rule.RuleContext) => boolean,\n  node: estree.Node,\n): void {\n  if (node.type === 'LogicalExpression') {\n    checkNonBoolean(context, isLeakingType, node.left);\n    checkNonBoolean(context, isLeakingType, node.right);\n  } else if (isLeakingType(node, context)) {\n    report(node, context);\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// Greatly inspired by https://github.com/eslint/eslint/blob/561b6d4726f3e77dd40ba0d340ca7f08429cd2eb/lib/rules/max-lines-per-function.js\n// We had to fork the implementation to control the reporting (issue location), in order to provide a better user experience.\n\n// https://sonarsource.github.io/rspec/#/rspec/S138/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { getMainFunctionTokenLocation } from 'eslint-plugin-sonarjs/lib/src/utils/locations';\nimport { getNodeParent, getParent, last, RuleContext } from '../helpers';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\ninterface FunctionKnowledge {\n  node: estree.Node;\n  lineCount: number;\n  startsWithCapital: boolean;\n  returnsJSX: boolean;\n}\n\nexport type Options = [\n  {\n    maximum: number;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    messages: {\n      functionMaxLine:\n        'This function has {{lineCount}} lines, which is greater than the {{threshold}} lines authorized. Split it into smaller functions.',\n    },\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          maximum: {\n            type: 'integer',\n          },\n        },\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const [{ maximum: threshold }] = context.options as Options;\n\n    const sourceCode = context.sourceCode;\n    const lines = sourceCode.lines;\n\n    const commentLineNumbers = getCommentLineNumbers(sourceCode.getAllComments());\n\n    const functionStack: estree.Node[] = [];\n    const functionKnowledge = new Map<estree.Node, FunctionKnowledge>();\n    return {\n      'FunctionDeclaration, FunctionExpression, ArrowFunctionExpression': (node: estree.Node) => {\n        functionStack.push(node);\n        const parent = getParent(context, node);\n\n        if (!node.loc || isIIFE(node, parent as estree.Node)) {\n          return;\n        }\n\n        const lineCount = getLocsNumber(node.loc, lines, commentLineNumbers);\n        const startsWithCapital = nameStartsWithCapital(node);\n        functionKnowledge.set(node, { node, lineCount, startsWithCapital, returnsJSX: false });\n      },\n      ReturnStatement: (node: estree.Node) => {\n        const returnStatement = node as estree.ReturnStatement;\n        const knowledge = functionKnowledge.get(last(functionStack));\n        if (\n          knowledge &&\n          returnStatement.argument &&\n          (returnStatement.argument as any).type.startsWith('JSX')\n        ) {\n          knowledge.returnsJSX = true;\n        }\n      },\n      'FunctionDeclaration:exit': () => {\n        functionStack.pop();\n      },\n      'FunctionExpression:exit': () => {\n        functionStack.pop();\n      },\n      'ArrowFunctionExpression:exit': () => {\n        functionStack.pop();\n      },\n      'Program:exit': () => {\n        for (const knowledge of functionKnowledge.values()) {\n          const { node, lineCount } = knowledge;\n          if (lineCount > threshold && !isReactFunctionComponent(knowledge)) {\n            const functionLike = node as TSESTree.FunctionLike;\n            context.report({\n              messageId: 'functionMaxLine',\n              data: {\n                lineCount: lineCount.toString(),\n                threshold: `${threshold}`,\n              },\n              loc: getMainFunctionTokenLocation(\n                functionLike,\n                functionLike.parent,\n                context as unknown as RuleContext,\n              ),\n            });\n          }\n        }\n      },\n    };\n  },\n};\n\nexport function getLocsNumber(\n  loc: estree.SourceLocation,\n  lines: string[],\n  commentLineNumbers: Map<number, estree.Comment>,\n) {\n  let lineCount = 0;\n\n  for (let i = loc.start.line - 1; i < loc.end.line; ++i) {\n    const line = lines[i];\n    const comment = commentLineNumbers.get(i + 1);\n    if (comment && isFullLineComment(line, i + 1, comment)) {\n      continue;\n    }\n\n    if (line.match(/^\\s*$/u)) {\n      continue;\n    }\n\n    lineCount++;\n  }\n\n  return lineCount;\n}\n\nexport function getCommentLineNumbers(comments: estree.Comment[]): Map<number, estree.Comment> {\n  const map = new Map();\n\n  comments.forEach(comment => {\n    if (comment.loc) {\n      for (let i = comment.loc.start.line; i <= comment.loc.end.line; i++) {\n        map.set(i, comment);\n      }\n    }\n  });\n  return map;\n}\n\nfunction isFullLineComment(line: string, lineNumber: number, comment: estree.Comment) {\n  if (!comment.loc) {\n    return false;\n  }\n  const { start, end } = comment.loc;\n  const isFirstTokenOnLine = start.line === lineNumber && !line.slice(0, start.column).trim();\n  const isLastTokenOnLine = end.line === lineNumber && !line.slice(end.column).trim();\n\n  return (\n    comment &&\n    (start.line < lineNumber || isFirstTokenOnLine) &&\n    (end.line > lineNumber || isLastTokenOnLine)\n  );\n}\n\nfunction isIIFE(node: estree.Node, parent: estree.Node) {\n  return (\n    node.type === 'FunctionExpression' &&\n    parent &&\n    parent.type === 'CallExpression' &&\n    parent.callee === node\n  );\n}\n\nfunction isReactFunctionComponent(knowledge: FunctionKnowledge) {\n  return knowledge.startsWithCapital && knowledge.returnsJSX;\n}\n\nfunction nameStartsWithCapital(node: estree.Node) {\n  const identifier = getIdentifierFromNormalFunction(node) ?? getIdentifierFromArrowFunction(node);\n\n  if (!identifier) {\n    return false;\n  }\n  return isIdentifierUppercase(identifier);\n\n  /**\n   * Picks `Foo` from: `let Foo = () => {}`\n   */\n  function getIdentifierFromArrowFunction(node: estree.Node) {\n    if (node.type !== 'ArrowFunctionExpression') {\n      return null;\n    }\n    const parent = getNodeParent(node);\n    if (!parent) {\n      return null;\n    }\n    if (parent.type === 'VariableDeclarator') {\n      return parent.id as estree.Identifier;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Picks `Foo` from:\n   * - `function Foo() {}`\n   * - `let bar = function Foo() {}`\n   */\n  function getIdentifierFromNormalFunction(node: estree.Node) {\n    if (node.type === 'FunctionDeclaration' || node.type === 'FunctionExpression') {\n      return node.id;\n    }\n  }\n\n  function isIdentifierUppercase(node: estree.Identifier) {\n    return node.name.startsWith(node.name[0].toUpperCase());\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S104/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getLocsNumber, getCommentLineNumbers } from '../S138/rule';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nexport type Options = [\n  {\n    maximum: number;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    messages: {\n      maxFileLine:\n        'This file has {{lineCount}} lines, which is greater than {{threshold}} authorized. Split it into smaller files.',\n    },\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          maximum: {\n            type: 'integer',\n          },\n        },\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const [{ maximum: threshold }] = context.options as Options;\n\n    const sourceCode = context.sourceCode;\n    const lines = sourceCode.lines;\n\n    const commentLineNumbers = getCommentLineNumbers(sourceCode.getAllComments());\n\n    return {\n      'Program:exit': (node: estree.Node) => {\n        if (!node.loc) {\n          return;\n        }\n\n        const lineCount = getLocsNumber(node.loc, lines, commentLineNumbers);\n\n        if (lineCount > threshold) {\n          context.report({\n            messageId: 'maxFileLine',\n            data: {\n              lineCount: lineCount.toString(),\n              threshold: `${threshold}`,\n            },\n            loc: { line: 0, column: 0 },\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S107/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { eslintRules } from '../core';\nimport {\n  getFullyQualifiedName,\n  isFunctionCall,\n  isIdentifier,\n  interceptReport,\n  mergeRules,\n} from '../helpers';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nconst eslintMaxParams = eslintRules['max-params'];\n\nexport type Options = [\n  {\n    max: number;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    messages: { ...eslintMaxParams.meta?.messages },\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          max: {\n            type: 'integer',\n          },\n        },\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    /**\n     * Decorates ESLint `max-params` to ignore TypeScript constructor when its parameters\n     * are all parameter properties, e.g., `constructor(private a: any, public b: any) {}`.\n     */\n    const ruleDecoration: Rule.RuleModule = interceptReport(\n      eslintMaxParams,\n      function (context: Rule.RuleContext, descriptor: Rule.ReportDescriptor) {\n        const [{ max }] = context.options as Options;\n        if ('node' in descriptor) {\n          const functionLike = descriptor.node as TSESTree.FunctionLike;\n          if (!isException(functionLike)) {\n            context.report(descriptor);\n          }\n        }\n\n        function isException(functionLike: TSESTree.FunctionLike) {\n          return isBeyondMaxParams(functionLike) || isAngularConstructor(functionLike);\n        }\n\n        function isBeyondMaxParams(functionLike: TSESTree.FunctionLike) {\n          return functionLike.params.filter(p => p.type !== 'TSParameterProperty').length <= max;\n        }\n\n        function isAngularConstructor(functionLike: TSESTree.FunctionLike) {\n          /** A constructor is represented as MethodDefinition > FunctionExpression */\n          const maybeConstructor = functionLike.parent;\n          if (!isConstructor(maybeConstructor)) {\n            return false;\n          }\n\n          /** A component is represented as ClassDeclaration > ClassBody */\n          const maybeComponent = maybeConstructor.parent?.parent;\n          if (!isAngularComponent(maybeComponent)) {\n            return false;\n          }\n\n          return true;\n\n          function isConstructor(\n            node: TSESTree.Node | undefined,\n          ): node is TSESTree.MethodDefinition {\n            return (\n              node?.type === 'MethodDefinition' &&\n              isIdentifier(node.key as estree.Node, 'constructor')\n            );\n          }\n\n          function isAngularComponent(node: TSESTree.Node | undefined) {\n            return (\n              node?.type === 'ClassDeclaration' &&\n              node.decorators?.some(decorator => {\n                const node = decorator.expression as estree.Node;\n                return (\n                  isFunctionCall(node) &&\n                  getFullyQualifiedName(context, node.callee) === '@angular.core.Component'\n                );\n              })\n            );\n          }\n        }\n      },\n    );\n\n    /**\n     * Extends ESLint `max-params` to detect TypeScript function\n     * declarations, e.g., `function f(p: any): any;`.\n     */\n    const ruleExtension: Rule.RuleModule = {\n      meta: {\n        messages: { ...ruleDecoration.meta!.messages },\n      },\n      create(context: Rule.RuleContext) {\n        return {\n          TSDeclareFunction: checkFunction,\n          TSEmptyBodyFunctionExpression: checkFunction,\n        };\n\n        function checkFunction(node: estree.Node) {\n          const functionLike = node as unknown as TSESTree.FunctionLike;\n          const [{ max }] = context.options as Options;\n          const numParams = functionLike.params.length;\n          if (numParams > max) {\n            context.report({\n              messageId: 'exceed',\n              loc: getFunctionHeaderLocation(functionLike),\n              data: {\n                name: getFunctionNameWithKind(functionLike),\n                count: numParams.toString(),\n                max: max.toString(),\n              },\n            });\n          }\n\n          function getFunctionHeaderLocation(functionLike: TSESTree.FunctionLike) {\n            const sourceCode = context.sourceCode;\n            const functionNode = (\n              functionLike.type === 'TSEmptyBodyFunctionExpression'\n                ? functionLike.parent!\n                : functionLike\n            ) as estree.Node;\n            const headerStart = sourceCode.getFirstToken(functionNode)!;\n            const headerEnd = sourceCode.getFirstToken(functionNode, token => token.value === '(')!;\n            return {\n              start: headerStart.loc.start,\n              end: headerEnd.loc.start,\n            };\n          }\n\n          function getFunctionNameWithKind(functionLike: TSESTree.FunctionLike) {\n            let name: string | undefined;\n            let kind = 'function';\n            switch (functionLike.type) {\n              case 'TSDeclareFunction':\n                kind = 'Function declaration';\n                if (functionLike.id) {\n                  name = functionLike.id.name;\n                }\n                break;\n              case 'TSEmptyBodyFunctionExpression': {\n                kind = 'Empty function';\n                const parent = functionLike.parent;\n                if (parent?.type === 'MethodDefinition' && parent.key.type === 'Identifier') {\n                  name = parent.key.name;\n                }\n                break;\n              }\n            }\n            if (name) {\n              return `${kind} '${name}'`;\n            } else {\n              return kind;\n            }\n          }\n        }\n      },\n    };\n\n    const decorationListeners: Rule.RuleListener = ruleDecoration.create(context);\n    const extensionListeners: Rule.RuleListener = ruleExtension.create(context);\n\n    return mergeRules(decorationListeners, extensionListeners);\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6324/javascript\n\nimport { Rule } from 'eslint';\nimport { Character } from '@eslint-community/regexpp/ast';\nimport { createRegExpRule } from '../helpers/regex';\n\nconst EXCEPTIONS = ['\\t', '\\n'];\n\nexport const rule: Rule.RuleModule = createRegExpRule(context => {\n  return {\n    onCharacterEnter: (character: Character) => {\n      const { value, raw } = character;\n      if (\n        value >= 0x00 &&\n        value <= 0x1f &&\n        (isSameInterpreted(raw, value) || raw.startsWith('\\\\x') || raw.startsWith('\\\\u')) &&\n        !EXCEPTIONS.includes(raw)\n      ) {\n        context.reportRegExpNode({\n          message: 'Remove this control character.',\n          node: context.node,\n          regexpNode: character,\n        });\n      }\n    },\n  };\n});\n\n/**\n * When the character has been interpreted, we need to compare its\n * code point value.\n */\nfunction isSameInterpreted(raw: string, value: number) {\n  return raw.codePointAt(0) === value;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1534/javascript\n\nimport { Rule, AST } from 'eslint';\nimport { interceptReport } from '../helpers';\nimport * as estree from 'estree';\n\n// core implementation of ESLint 'no-dupe-keys' does not provide quick fixes\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.hasSuggestions = true;\n  return interceptReport(rule, (context, reportDescriptor) => {\n    context.report({\n      ...reportDescriptor,\n      suggest: [\n        {\n          desc: 'Remove this duplicate property',\n          fix(fixer) {\n            const propertyToRemove = getPropertyNode(reportDescriptor, context)!;\n            const commaAfter = context.sourceCode.getTokenAfter(\n              propertyToRemove,\n              token => token.value === ',',\n            );\n            const commaBefore = context.sourceCode.getTokenBefore(\n              propertyToRemove,\n              token => token.value === ',',\n            )!;\n\n            let start = commaBefore.range[1];\n            let end = propertyToRemove.range![1];\n            if (commaAfter) {\n              end = commaAfter.range[1];\n            } else {\n              start = commaBefore.range[0];\n            }\n            return fixer.removeRange([start, end]);\n          },\n        },\n      ],\n    });\n  });\n}\n\nfunction getPropertyNode(reportDescriptor: Rule.ReportDescriptor, context: Rule.RuleContext) {\n  if ('node' in reportDescriptor && 'loc' in reportDescriptor) {\n    const objectLiteral = reportDescriptor['node'] as estree.ObjectExpression;\n    const loc = reportDescriptor['loc'] as AST.SourceLocation;\n\n    const transformPosToIndex = (p: estree.Position) => context.sourceCode.getIndexFromLoc(p);\n    return objectLiteral.properties.find(\n      property =>\n        transformPosToIndex(property.loc?.start!) <= transformPosToIndex(loc?.start) &&\n        transformPosToIndex(property.loc?.end!) >= transformPosToIndex(loc?.end),\n    );\n  } else {\n    throw new Error('Missing properties in report descriptor for rule S1534');\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1534/javascript\n\nimport { Rule } from 'eslint';\nimport { eslintRules } from '../core';\nimport { tsEslintRules } from '../typescript-eslint';\nimport react from 'eslint-plugin-react';\nimport { mergeRules } from '../helpers';\nimport { decorate } from './decorator';\n\nconst noDupeKeysRule = decorate(eslintRules['no-dupe-keys']);\nconst noDupeClassMembersRule = tsEslintRules['no-dupe-class-members'];\nconst jsxNoDuplicatePropsRule = react.rules['jsx-no-duplicate-props'];\n\nexport const rule: Rule.RuleModule = {\n  /**\n   * The metadata from `no-dupe-class-members` and `jsx-no-duplicate-props` are required for issue messages.\n   * However, we don't include those from `no-dupe-keys` because of a duplicate message id, and we use instead\n   * the message id from `no-dupe-class-members`, which is a bit more generic.\n   */\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      ...noDupeClassMembersRule.meta!.messages,\n      ...jsxNoDuplicatePropsRule.meta!.messages,\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const noDupeKeysListener: Rule.RuleListener = noDupeKeysRule.create(context);\n    const noDupeClassMembersListener: Rule.RuleListener = noDupeClassMembersRule.create(context);\n    const jsxNoDuplicatePropsListener: Rule.RuleListener = jsxNoDuplicatePropsRule.create(context);\n\n    return mergeRules(noDupeKeysListener, noDupeClassMembersListener, jsxNoDuplicatePropsListener);\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2639/javascript\n\nimport { Rule } from 'eslint';\nimport { CharacterClass } from '@eslint-community/regexpp/ast';\nimport { createRegExpRule } from '../helpers/regex';\n\nexport const rule: Rule.RuleModule = createRegExpRule(\n  context => {\n    return {\n      onCharacterClassEnter: (node: CharacterClass) => {\n        if (node.elements.length === 0 && !node.negate) {\n          context.reportRegExpNode({\n            messageId: 'issue',\n            node: context.node,\n            regexpNode: node,\n          });\n        }\n      },\n    };\n  },\n  {\n    meta: {\n      messages: {\n        issue: \"Rework this empty character class that doesn't match anything.\",\n      },\n    },\n  },\n);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S128/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getParent } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      switchEnd:\n        'End this switch case with an unconditional break, continue, return or throw statement.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    let currentCodePath: Rule.CodePath | null = null;\n    let currentCodeSegment: Rule.CodePathSegment | null = null;\n    let enteringSwitchCase = false;\n    const segmentsWithExit: Set<string> = new Set();\n    const initialSegmentBySwitchCase: Map<estree.SwitchCase, Rule.CodePathSegment> = new Map();\n    const switchCaseStack: estree.SwitchCase[] = [];\n\n    function noComment(node: estree.Node) {\n      return context.sourceCode.getCommentsAfter(node).length === 0;\n    }\n\n    function isAfterProcessExitCall(\n      segment: Rule.CodePathSegment,\n      initialSegment: Rule.CodePathSegment,\n    ) {\n      const stack = [];\n      const visitedSegments: Set<string> = new Set();\n      stack.push(segment);\n      while (stack.length !== 0) {\n        const current = stack.pop()!;\n        visitedSegments.add(current.id);\n        if (!segmentsWithExit.has(current.id)) {\n          if (current === initialSegment) {\n            return false;\n          }\n          current.prevSegments.filter(p => !visitedSegments.has(p.id)).forEach(p => stack.push(p));\n        }\n      }\n      return true;\n    }\n\n    return {\n      onCodePathStart(codePath: Rule.CodePath) {\n        currentCodePath = codePath;\n      },\n      onCodePathEnd() {\n        currentCodePath = currentCodePath!.upper;\n      },\n      onCodePathSegmentStart(segment: Rule.CodePathSegment) {\n        currentCodeSegment = segment;\n        if (enteringSwitchCase) {\n          initialSegmentBySwitchCase.set(\n            switchCaseStack.pop() as estree.SwitchCase,\n            currentCodeSegment,\n          );\n          enteringSwitchCase = false;\n        }\n      },\n      CallExpression(node: estree.Node) {\n        const callExpr = node as estree.CallExpression;\n        if (isProcessExitCall(callExpr)) {\n          segmentsWithExit.add(currentCodeSegment!.id);\n        }\n      },\n      SwitchCase(node: estree.Node) {\n        enteringSwitchCase = true;\n        switchCaseStack.push(node as estree.SwitchCase);\n      },\n      'SwitchCase:exit'(node: estree.Node) {\n        const switchCase = node as estree.SwitchCase;\n        const initialSegment: Rule.CodePathSegment = initialSegmentBySwitchCase.get(switchCase)!;\n        const isReachable = currentCodePath!.currentSegments.some(\n          s => s.reachable && !isAfterProcessExitCall(s, initialSegment),\n        );\n        const { cases } = getParent(context, node) as estree.SwitchStatement;\n        if (\n          isReachable &&\n          switchCase.consequent.length > 0 &&\n          cases[cases.length - 1] !== node &&\n          noComment(switchCase)\n        ) {\n          context.report({\n            messageId: 'switchEnd',\n            loc: context.sourceCode.getFirstToken(node)!.loc,\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction isProcessExitCall(callExpr: estree.CallExpression) {\n  return (\n    callExpr.callee.type === 'MemberExpression' &&\n    callExpr.callee.object.type === 'Identifier' &&\n    callExpr.callee.object.name === 'process' &&\n    callExpr.callee.property.type === 'Identifier' &&\n    callExpr.callee.property.name === 'exit'\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5856/javascript\n\nimport { Rule } from 'eslint';\nimport {\n  getTypeFromTreeNode,\n  isIdentifier,\n  isRequiredParserServices,\n  isStringLiteral,\n  isStringType,\n} from '../helpers';\nimport * as estree from 'estree';\nimport { RegExpValidator } from '@eslint-community/regexpp';\n\nconst validator = new RegExpValidator();\n\nexport const rule: Rule.RuleModule = {\n  create(context: Rule.RuleContext) {\n    function getFlags(node: estree.CallExpression): string | null {\n      if (node.arguments.length < 2) {\n        return '';\n      }\n\n      if (isStringLiteral(node.arguments[1])) {\n        return node.arguments[1].value as string;\n      }\n\n      return null;\n    }\n\n    function validateRegExpPattern(pattern: string, uFlag: boolean): string | null {\n      try {\n        validator.validatePattern(pattern, undefined, undefined, uFlag);\n        return null;\n      } catch (err) {\n        return err.message;\n      }\n    }\n\n    function validateRegExpFlags(flags: string) {\n      try {\n        validator.validateFlags(flags);\n        return null;\n      } catch {\n        return `Invalid flags supplied to RegExp constructor '${flags}'`;\n      }\n    }\n\n    function isRegExpConstructor(call: estree.CallExpression) {\n      const { callee } = call;\n      return callee.type === 'Identifier' && callee.name === 'RegExp';\n    }\n\n    function isStringMatch(call: estree.CallExpression) {\n      const services = context.sourceCode.parserServices;\n      if (!isRequiredParserServices(services)) {\n        return false;\n      }\n      const { callee } = call;\n      return (\n        callee.type === 'MemberExpression' &&\n        isStringType(getTypeFromTreeNode(callee.object, services)) &&\n        isIdentifier(callee.property, 'match')\n      );\n    }\n\n    function getPattern(call: estree.CallExpression): string | null {\n      if (isStringLiteral(call.arguments[0])) {\n        return call.arguments[0].value as string;\n      }\n      return null;\n    }\n\n    return {\n      'CallExpression, NewExpression'(node: estree.Node) {\n        const call = node as estree.CallExpression;\n        if (!isRegExpConstructor(call) && !isStringMatch(call)) {\n          return;\n        }\n        const pattern = getPattern(call);\n        if (!pattern) {\n          return;\n        }\n        const flags = getFlags(call);\n\n        const message =\n          (flags && validateRegExpFlags(flags)) ||\n          // If flags are unknown, report the regex only if its pattern is invalid both with and without the \"u\" flag\n          (flags === null\n            ? validateRegExpPattern(pattern, true) && validateRegExpPattern(pattern, false)\n            : validateRegExpPattern(pattern, flags.includes('u')));\n\n        if (message) {\n          context.report({\n            node,\n            message,\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S109/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { tsEslintRules } from '../typescript-eslint';\nimport { getNodeParent, isMethodInvocation } from '../helpers';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\nexport const rule: RuleModule = {\n  meta: {\n    messages: {\n      noMagic: 'No magic number: {{raw}}.',\n    },\n    schema: [\n      {\n        type: 'object',\n        properties: {},\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const baseRule = tsEslintRules['no-magic-numbers'].create(context);\n    return {\n      Literal: (node: estree.Node) => {\n        if (!isNumericLiteral(node)) {\n          return;\n        }\n        const numericLiteral = getNumericLiteral(node);\n        if (!numericLiteral) {\n          return;\n        }\n        const { value, parent } = numericLiteral;\n        if (\n          isPower(value) ||\n          isJSX(context, node) ||\n          isBitwiseOperator(parent) ||\n          isJsonStringify(parent)\n        ) {\n          return;\n        }\n        // Delegate to the typescript-eslint rule\n        // @ts-ignore\n        baseRule.Literal(node);\n      },\n    };\n  },\n};\n\nfunction getNumericLiteral(node: estree.Literal) {\n  // Literal or UnaryExpression\n  let numberNode;\n  let raw: string;\n  let value = numericLiteralValue(node);\n  let parent = getNodeParent(node);\n\n  if (!parent || !value) {\n    return undefined;\n  }\n  // Treat unary minus as a part of the number\n  if (parent.type === 'UnaryExpression' && parent.operator === '-') {\n    numberNode = parent;\n    parent = getNodeParent(parent);\n    value = -value;\n    raw = `-${node.raw}`;\n  } else {\n    numberNode = node;\n    raw = node.raw ?? '';\n  }\n\n  return { numberNode, raw, value, parent };\n}\n\nfunction numericLiteralValue(node: estree.Literal) {\n  if (typeof node.value === 'number') {\n    return node.value;\n  }\n}\n\nfunction isNumericLiteral(node: estree.Node): node is estree.Literal {\n  return (\n    node.type === 'Literal' && (typeof node.value === 'number' || typeof node.value === 'bigint')\n  );\n}\n\nfunction isPower(value: number) {\n  return Number.isInteger(Math.log10(value)) || Number.isInteger(Math.log2(value));\n}\n\nfunction isJSX(context: Rule.RuleContext, node: estree.Node) {\n  return context.sourceCode.getAncestors(node).some(node => node.type.startsWith('JSX'));\n}\n\nfunction isBitwiseOperator(node: estree.Node) {\n  return (\n    node.type === 'BinaryExpression' && ['&', '|', '^', '<<', '>>', '>>>'].includes(node.operator)\n  );\n}\n\nfunction isJsonStringify(node: estree.Node) {\n  return node.type === 'CallExpression' && isMethodInvocation(node, 'JSON', 'stringify', 3);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5868/javascript\n\nimport { AST, Rule } from 'eslint';\nimport { ancestorsChain, isRegexLiteral } from '../helpers';\nimport {\n  createRegExpRule,\n  getFlags,\n  getPatternFromNode,\n  isRegExpConstructor,\n} from '../helpers/regex';\nimport { RegExpValidator } from '@eslint-community/regexpp';\nimport { Character, CharacterClassElement } from '@eslint-community/regexpp/ast';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\n\nconst MODIFIABLE_REGEXP_FLAGS_TYPES: estree.Node['type'][] = [\n  'Literal',\n  'TemplateLiteral',\n  'TaggedTemplateExpression',\n];\n\nconst metadata = {\n  meta: {\n    hasSuggestions: true,\n  },\n};\n\nexport const rule: Rule.RuleModule = createRegExpRule(context => {\n  function characters(nodes: CharacterClassElement[]): Character[][] {\n    let current: Character[] = [];\n    const sequences: Character[][] = [current];\n    for (const node of nodes) {\n      if (node.type === 'Character') {\n        current.push(node);\n      } else if (node.type === 'CharacterClassRange') {\n        // for following regexp [xa-z] we produce [[xa],[z]]\n        // we would report for example if instead of 'xa' there would be unicode combined class\n        current.push(node.min);\n        current = [node.max];\n        sequences.push(current);\n      } else if (node.type === 'CharacterSet' && current.length > 0) {\n        // CharacterSet is for example [\\d], ., or \\p{ASCII}\n        // see https://github.com/mysticatea/regexpp/blob/master/src/ast.ts#L222\n        current = [];\n        sequences.push(current);\n      }\n    }\n    return sequences;\n  }\n\n  function checkSequence(sequence: Character[]) {\n    // Stop on the first illegal character in the sequence\n    for (let index = 0; index < sequence.length; index++) {\n      if (checkCharacter(sequence[index], index, sequence)) {\n        return;\n      }\n    }\n  }\n\n  function checkCharacter(character: Character, index: number, characters: Character[]) {\n    // Stop on the first failed check as there may be overlaps between checks\n    // for instance a zero-width-sequence containing a modified emoji.\n    for (const check of characterChecks) {\n      if (check(character, index, characters)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function checkCombinedCharacter(character: Character, index: number, characters: Character[]) {\n    let reported = false;\n    if (\n      index !== 0 &&\n      isCombiningCharacter(character.value) &&\n      !isCombiningCharacter(characters[index - 1].value)\n    ) {\n      const combinedChar = characters[index - 1].raw + characters[index].raw;\n      const message = `Move this Unicode combined character '${combinedChar}' outside of the character class`;\n      context.reportRegExpNode({ regexpNode: characters[index], node: context.node, message });\n      reported = true;\n    }\n    return reported;\n  }\n\n  function checkSurrogatePairTailCharacter(\n    character: Character,\n    index: number,\n    characters: Character[],\n  ) {\n    let reported = false;\n    if (index !== 0 && isSurrogatePair(characters[index - 1].value, character.value)) {\n      const surrogatePair = characters[index - 1].raw + characters[index].raw;\n      const message = `Move this Unicode surrogate pair '${surrogatePair}' outside of the character class or use 'u' flag`;\n      const pattern = getPatternFromNode(context.node, context)?.pattern;\n      let suggest: Rule.ReportDescriptorOptions['suggest'];\n\n      if (pattern && isValidWithUnicodeFlag(pattern)) {\n        suggest = [\n          {\n            desc: \"Add unicode 'u' flag to regex\",\n            fix: fixer => addUnicodeFlag(fixer, context.node),\n          },\n        ];\n      }\n\n      context.reportRegExpNode({\n        regexpNode: characters[index],\n        node: context.node,\n        message,\n        suggest,\n      });\n      reported = true;\n    }\n    return reported;\n  }\n\n  function addUnicodeFlag(fixer: Rule.RuleFixer, node: estree.Node) {\n    if (isRegexLiteral(node)) {\n      return insertTextAfter(fixer, node, 'u');\n    }\n\n    const regExpConstructor = getRegExpConstructor(node);\n    if (!regExpConstructor) {\n      return null;\n    }\n\n    const args = regExpConstructor.arguments;\n    if (args.length === 1) {\n      const token = sourceCode.getLastToken(regExpConstructor, { skip: 1 });\n      return insertTextAfter(fixer, token, ', \"u\"');\n    }\n\n    if (args.length > 1 && args[1]?.range && hasModifiableFlags(regExpConstructor)) {\n      const [start, end] = args[1].range;\n      return fixer.insertTextAfterRange([start, end - 1], 'u');\n    }\n\n    return null;\n  }\n\n  function checkModifiedEmojiCharacter(\n    character: Character,\n    index: number,\n    characters: Character[],\n  ) {\n    let reported = false;\n    if (\n      index !== 0 &&\n      isEmojiModifier(character.value) &&\n      !isEmojiModifier(characters[index - 1].value)\n    ) {\n      const modifiedEmoji = characters[index - 1].raw + characters[index].raw;\n      const message = `Move this Unicode modified Emoji '${modifiedEmoji}' outside of the character class`;\n      context.reportRegExpNode({ regexpNode: characters[index], node: context.node, message });\n      reported = true;\n    }\n    return reported;\n  }\n\n  function checkRegionalIndicatorCharacter(\n    character: Character,\n    index: number,\n    characters: Character[],\n  ) {\n    let reported = false;\n    if (\n      index !== 0 &&\n      isRegionalIndicator(character.value) &&\n      isRegionalIndicator(characters[index - 1].value)\n    ) {\n      const regionalIndicator = characters[index - 1].raw + characters[index].raw;\n      const message = `Move this Unicode regional indicator '${regionalIndicator}' outside of the character class`;\n      context.reportRegExpNode({ regexpNode: characters[index], node: context.node, message });\n      reported = true;\n    }\n    return reported;\n  }\n\n  function checkZeroWidthJoinerCharacter(\n    character: Character,\n    index: number,\n    characters: Character[],\n  ) {\n    let reported = false;\n    if (\n      index !== 0 &&\n      index !== characters.length - 1 &&\n      isZeroWidthJoiner(character.value) &&\n      !isZeroWidthJoiner(characters[index - 1].value) &&\n      !isZeroWidthJoiner(characters[index + 1].value)\n    ) {\n      // It's practically difficult to determine the full joined character sequence\n      // as it may join more than 2 elements that consist of characters or modified Emojis\n      // see: https://unicode.org/emoji/charts/emoji-zwj-sequences.html\n      const message = 'Move this Unicode joined character sequence outside of the character class';\n      context.reportRegExpNode({ regexpNode: characters[index - 1], node: context.node, message });\n      reported = true;\n    }\n    return reported;\n  }\n\n  function isValidWithUnicodeFlag(pattern: string) {\n    try {\n      validator.validatePattern(pattern, undefined, undefined, true);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  const sourceCode = context.sourceCode;\n  const validator = new RegExpValidator();\n\n  // The order matters as surrogate pair check may trigger at the same time as zero-width-joiner.\n  const characterChecks = [\n    checkCombinedCharacter,\n    checkZeroWidthJoinerCharacter,\n    checkModifiedEmojiCharacter,\n    checkRegionalIndicatorCharacter,\n    checkSurrogatePairTailCharacter,\n  ];\n\n  return {\n    onCharacterClassEnter(ccNode) {\n      for (const chars of characters(ccNode.elements)) {\n        checkSequence(chars);\n      }\n    },\n  };\n}, metadata);\n\nfunction isCombiningCharacter(codePoint: number) {\n  return /^[\\p{Mc}\\p{Me}\\p{Mn}]$/u.test(String.fromCodePoint(codePoint));\n}\n\nfunction isSurrogatePair(lead: number, tail: number) {\n  return lead >= 0xd800 && lead < 0xdc00 && tail >= 0xdc00 && tail < 0xe000;\n}\n\nfunction isEmojiModifier(code: number) {\n  return code >= 0x1f3fb && code <= 0x1f3ff;\n}\n\nfunction isRegionalIndicator(code: number) {\n  return code >= 0x1f1e6 && code <= 0x1f1ff;\n}\n\nfunction isZeroWidthJoiner(code: number) {\n  return code === 0x200d;\n}\n\nfunction getRegExpConstructor(node: estree.Node) {\n  return ancestorsChain(node as TSESTree.Node, new Set(['CallExpression', 'NewExpression'])).find(\n    n => isRegExpConstructor(n as estree.Node),\n  ) as estree.CallExpression | estree.NewExpression | undefined;\n}\n\nfunction hasModifiableFlags(regExpConstructor: estree.CallExpression | estree.NewExpression) {\n  const args = regExpConstructor.arguments;\n  return (\n    typeof args[1]?.range?.[0] === 'number' &&\n    typeof args[1]?.range?.[1] === 'number' &&\n    getFlags(regExpConstructor) != null &&\n    MODIFIABLE_REGEXP_FLAGS_TYPES.includes(args[1].type)\n  );\n}\n\nfunction insertTextAfter(\n  fixer: Rule.RuleFixer,\n  node: estree.Node | AST.Token | null,\n  text: string,\n) {\n  return node ? fixer.insertTextAfter(node, text) : null;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6326/javascript\n\nimport { AST, Rule } from 'eslint';\nimport * as regexpp from '@eslint-community/regexpp';\nimport { createRegExpRule, getRegexpRange } from '../helpers/regex';\n\nexport const rule: Rule.RuleModule = createRegExpRule(\n  context => {\n    let rawPattern: string;\n\n    return {\n      onRegExpLiteralEnter: (node: regexpp.AST.RegExpLiteral) => {\n        rawPattern = node.raw;\n      },\n      onCharacterEnter: (node: regexpp.AST.Character) => {\n        if (node.raw !== ' ' || node.parent.type === 'CharacterClass') {\n          return;\n        }\n\n        const nextChar = rawPattern[node.start + 1];\n        if (nextChar !== ' ') {\n          const spacesBefore = countSpacesBefore(rawPattern, node.start);\n          if (spacesBefore > 0) {\n            const spacesNumber = spacesBefore + 1;\n            const quantifier = `{${spacesNumber}}`;\n            const [start, end] = getRegexpRange(context.node, node);\n            const range: AST.Range = [start - spacesNumber + 1, end];\n            context.reportRegExpNode({\n              message: `If multiple spaces are required here, use number quantifier (${quantifier}).`,\n              regexpNode: node,\n              offset: [-spacesNumber + 1, 0],\n              node: context.node,\n              suggest: [\n                {\n                  desc: `Use quantifier ${quantifier}`,\n                  fix: fixer => fixer.replaceTextRange(range, ` ${quantifier}`),\n                },\n              ],\n            });\n          }\n        }\n      },\n    };\n  },\n  {\n    meta: {\n      hasSuggestions: true,\n    },\n  },\n);\n\nfunction countSpacesBefore(pattern: string, index: number) {\n  let counter = 0;\n  for (let i = index - 1; i > 0; i--) {\n    if (pattern[i] === ' ') {\n      counter++;\n    } else {\n      break;\n    }\n  }\n\n  return counter;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6441/javascript\n\nimport { Rule } from 'eslint';\nimport react from 'eslint-plugin-react';\nimport { rule as detectReact, mergeRules } from '../helpers';\n\nconst noUnusedClassComponentMethod = react.rules['no-unused-class-component-methods'];\n\nfunction overrideContext(context: Rule.RuleContext, overrides: any): Rule.RuleContext {\n  Object.setPrototypeOf(overrides, context);\n  return overrides;\n}\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      unused:\n        'Remove this property or method or refactor this component, as \"{{name}}\" is not used inside component body',\n      unusedWithClass:\n        'Remove this property or method or refactor \"{{className}}\", as \"{{name}}\" is not used inside component body',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    let isReact = false;\n\n    const detectReactListener: Rule.RuleListener = detectReact.create(\n      overrideContext(context, {\n        report(_descriptor: Rule.ReportDescriptor): void {\n          isReact = true;\n        },\n      }),\n    );\n\n    const noUnusedClassComponentMethodListener: Rule.RuleListener =\n      noUnusedClassComponentMethod.create(\n        overrideContext(context, {\n          report(descriptor: Rule.ReportDescriptor): void {\n            if (isReact) {\n              context.report(descriptor);\n            }\n          },\n        }),\n      );\n\n    return mergeRules(detectReactListener, noUnusedClassComponentMethodListener);\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1481/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      unusedFunction: `Remove unused function '{{symbol}}'.`,\n      unusedVariable: `Remove the declaration of the unused '{{symbol}}' variable.`,\n    },\n  },\n  create(context: Rule.RuleContext) {\n    let toIgnore: estree.Identifier[] = [];\n    let jsxComponentsToIgnore: string[] = [];\n\n    function checkVariable(v: Scope.Variable, toCheck: 'let-const-function' | 'all') {\n      if (v.defs.length === 0) {\n        return;\n      }\n      const type = v.defs[0].type;\n      if (type !== 'Variable' && type !== 'FunctionName') {\n        return;\n      }\n      if (toCheck === 'let-const-function') {\n        const def = v.defs[0];\n        if (def.parent && def.parent.type === 'VariableDeclaration' && def.parent.kind === 'var') {\n          return;\n        }\n      }\n\n      const defs = v.defs.map(def => def.name);\n      const unused = v.references.every(ref => defs.includes(ref.identifier));\n\n      if (unused && !toIgnore.includes(defs[0]) && !jsxComponentsToIgnore.includes(v.name)) {\n        const messageAndData = getMessageAndData(v.name, type === 'FunctionName');\n        defs.forEach(def =>\n          context.report({\n            node: def,\n            ...messageAndData,\n          }),\n        );\n      }\n    }\n\n    function isParentOfModuleScope(scope: Scope.Scope) {\n      return scope.childScopes.some(s => s.type === 'module');\n    }\n\n    function checkScope(\n      scope: Scope.Scope,\n      checkedInParent: 'nothing' | 'let-const-function' | 'all',\n    ) {\n      let toCheck = checkedInParent;\n      if (scope.type === 'function' && !isParentOfModuleScope(scope)) {\n        toCheck = 'all';\n      } else if (checkedInParent === 'nothing' && scope.type === 'block') {\n        toCheck = 'let-const-function';\n      }\n\n      if (toCheck !== 'nothing' && scope.type !== 'function-expression-name') {\n        scope.variables.forEach(v => checkVariable(v, toCheck as 'let-const-function' | 'all'));\n      }\n\n      scope.childScopes.forEach(childScope => checkScope(childScope, toCheck));\n    }\n\n    return {\n      ObjectPattern: (node: estree.Node) => {\n        const elements = (node as estree.ObjectPattern).properties;\n        const hasRest = elements.some(element => (element as any).type === 'RestElement');\n\n        if (!hasRest) {\n          return;\n        }\n\n        elements.forEach(element => {\n          if (\n            element.type === 'Property' &&\n            element.shorthand &&\n            element.value.type === 'Identifier'\n          ) {\n            toIgnore.push(element.value);\n          }\n        });\n      },\n\n      JSXIdentifier: (node: estree.Node) => {\n        // using 'any' as standard typings for AST don't provide types for JSX\n        jsxComponentsToIgnore.push((node as any).name);\n      },\n\n      'Program:exit': (node: estree.Node) => {\n        checkScope(context.sourceCode.getScope(node), 'nothing');\n        toIgnore = [];\n        jsxComponentsToIgnore = [];\n      },\n    };\n  },\n};\n\nfunction getMessageAndData(name: string, isFunction: boolean) {\n  if (isFunction) {\n    return { messageId: 'unusedFunction', data: { symbol: name } };\n  } else {\n    return { messageId: 'unusedVariable', data: { symbol: name } };\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6582/javascript\n\nimport { Rule } from 'eslint';\nimport { tsEslintRules } from '../typescript-eslint';\n\n/**\n * Original rule 'prefer-optional-chain' from TypeScript ESLint.\n */\nconst preferOptionalChainRule = tsEslintRules['prefer-optional-chain'];\n\n/**\n * Sanitized rule 'prefer-optional-chain' from TypeScript ESLint.\n *\n * TypeScript ESLint's rule raises a runtime error if the parser services of the\n * injected context is missing some helper functions allowing to convert between\n * TypeScript ESLint and TypeScript ASTs. Contrary to rules requiring type checking,\n * there is no way to determine programmatically if a rule requires such a service.\n *\n * This is the case for the rule 'prefer-optional-chain', for which we need to provide\n * a custom sanitization in case the parser services miss these helpers.\n *\n * @see https://github.com/typescript-eslint/typescript-eslint/blob/cf045f2c390353c1a074ba85391f773f1ede702c/packages/eslint-plugin/src/rules/prefer-optional-chain.ts#LL54C39-L54C39\n * @see https://github.com/typescript-eslint/typescript-eslint/blob/cf045f2c390353c1a074ba85391f773f1ede702c/packages/utils/src/eslint-utils/getParserServices.ts#L19-L25\n */\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    fixable: 'code',\n    messages: { ...preferOptionalChainRule.meta!.messages },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!services?.program || !services.esTreeNodeToTSNodeMap || !services.tsNodeToESTreeNodeMap) {\n      return {};\n    }\n    return preferOptionalChainRule.create(context);\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6759/javascript\n\nimport { Rule } from 'eslint';\nimport { Function, Node, ReturnStatement } from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport {\n  RequiredParserServices,\n  getTypeFromTreeNode,\n  getUniqueWriteUsageOrNode,\n  isRequiredParserServices,\n  last,\n} from '../helpers';\nimport * as ts from 'typescript';\n\n/**\n * Stacks return statements per function.\n */\ninterface FunctionInfo {\n  returns: ReturnStatement[];\n}\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      readOnlyProps: 'Mark the props of the component as read-only.',\n      readOnlyPropsFix: 'Mark the props as read-only',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n    const functionInfo: FunctionInfo[] = [];\n    return {\n      ':function'() {\n        functionInfo.push({ returns: [] });\n      },\n      ':function:exit'(node: Function) {\n        /* Functional component */\n        const info = functionInfo.pop();\n        if (!info || !isFunctionalComponent(node, info)) {\n          return;\n        }\n\n        /* Provides props */\n        const [props] = node.params;\n        if (!props) {\n          return;\n        }\n\n        /* Includes type annotation */\n        const { typeAnnotation } = props as TSESTree.Parameter & {\n          typeAnnotation?: TSESTree.TSTypeAnnotation;\n        };\n        if (!typeAnnotation) {\n          return;\n        }\n\n        /* Read-only props */\n        if (!isReadOnly(props, services)) {\n          context.report({\n            node: props,\n            messageId: 'readOnlyProps',\n            suggest: [\n              {\n                messageId: 'readOnlyPropsFix',\n                fix(fixer) {\n                  const tpe = typeAnnotation.typeAnnotation as unknown as Node;\n                  const oldText = context.sourceCode.getText(tpe);\n                  const newText = `Readonly<${oldText}>`;\n                  return fixer.replaceText(tpe, newText);\n                },\n              },\n            ],\n          });\n        }\n      },\n      ReturnStatement(node: ReturnStatement) {\n        last(functionInfo).returns.push(node);\n      },\n    };\n\n    /**\n     * A function is considered to be a React functional component if it\n     * is a named function declaration with a starting uppercase letter,\n     * it takes at most one parameter, and it returns some JSX value.\n     */\n    function isFunctionalComponent(node: Function, info: FunctionInfo) {\n      /* Named function declaration */\n      if (node.type !== 'FunctionDeclaration' || node.id === null) {\n        return false;\n      }\n\n      /* Starts with uppercase */\n      const name = node.id.name;\n      if (!(name && /^[A-Z]/.test(name))) {\n        return false;\n      }\n\n      /* At most one parameter (for props) */\n      const paramCount = node.params.length;\n      if (paramCount > 1) {\n        return false;\n      }\n\n      /* Returns JSX value */\n      const { returns } = info;\n      for (const ret of returns) {\n        if (!ret.argument) {\n          continue;\n        }\n\n        const value = getUniqueWriteUsageOrNode(context, ret.argument);\n        if (value.type.startsWith('JSX')) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * A props type is considered to be read-only if the type annotation\n     * is decorated with TypeScript utility type `Readonly` or if it refers\n     * to a pure type declaration, i.e. where all its members are read-only.\n     */\n    function isReadOnly(props: Node, services: RequiredParserServices) {\n      const tpe = getTypeFromTreeNode(props, services);\n\n      /* Readonly utility type */\n      const { aliasSymbol } = tpe;\n      if (aliasSymbol?.escapedName === 'Readonly') {\n        return true;\n      }\n\n      /* Resolve symbol definition */\n      const symbol = tpe.getSymbol();\n      if (!symbol?.declarations) {\n        /* Kill the noise */\n        return true;\n      }\n\n      /* Pure type declaration */\n      const declarations = symbol.declarations;\n      for (const decl of declarations) {\n        if (ts.isInterfaceDeclaration(decl)) {\n          const node = services.tsNodeToESTreeNodeMap.get(decl);\n          if (node?.type === 'TSInterfaceDeclaration') {\n            const {\n              body: { body: members },\n            } = node;\n            if (members.every(m => m.type === 'TSPropertySignature' && m.readonly)) {\n              return true;\n            }\n          }\n        }\n\n        if (ts.isTypeLiteralNode(decl)) {\n          const node = services.tsNodeToESTreeNodeMap.get(decl);\n          if (node?.type === 'TSTypeLiteral') {\n            const { members } = node;\n            if (members.every(m => m.type === 'TSPropertySignature' && m.readonly)) {\n              return true;\n            }\n          }\n        }\n      }\n\n      return false;\n    }\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6594/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  getNodeParent,\n  getVariableFromName,\n  isMemberWithProperty,\n  isRequiredParserServices,\n  isString,\n} from '../helpers';\nimport { getParsedRegex } from '../helpers/regex';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      useExec: 'Use the \"RegExp.exec()\" method instead.',\n      suggestExec: 'Replace with \"RegExp.exec()\"',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n    return {\n      \"CallExpression[arguments.length=1] > MemberExpression.callee[property.name='match'][computed=false]\":\n        (memberExpr: estree.MemberExpression) => {\n          const { object, property } = memberExpr;\n          if (!isString(object, services)) {\n            return;\n          }\n\n          const callExpr = (memberExpr as any).parent as estree.CallExpression;\n          const regex = getParsedRegex(callExpr.arguments[0], context);\n          if (regex?.flags.global) {\n            return;\n          }\n\n          const variable = getLhsVariable(callExpr);\n          for (const ref of variable?.references ?? []) {\n            const id = ref.identifier;\n            const parent = getNodeParent(id);\n            if (isMemberWithProperty(parent, 'length')) {\n              return;\n            }\n          }\n\n          context.report({\n            node: property,\n            messageId: 'useExec',\n            suggest: [\n              {\n                messageId: 'suggestExec',\n                fix(fixer) {\n                  const strText = context.sourceCode.getText(object);\n                  const regText = context.sourceCode.getText(callExpr.arguments[0]);\n                  const code = `RegExp(${regText}).exec(${strText})`;\n                  return fixer.replaceText(callExpr, code);\n                },\n              },\n            ],\n          });\n        },\n    };\n\n    /**\n     * Extracts the left-hand side variable of expressions\n     * like `x` in `const x = <node>` or `x` in `x = <node>`.\n     */\n    function getLhsVariable(node: estree.Node) {\n      const parent = getNodeParent(node);\n      let ident: estree.Identifier | undefined;\n      if (parent.type === 'VariableDeclarator' && parent.id.type === 'Identifier') {\n        ident = parent.id;\n      } else if (parent.type === 'AssignmentExpression' && parent.left.type === 'Identifier') {\n        ident = parent.left;\n      }\n      if (ident) {\n        return getVariableFromName(context, ident.name, node);\n      }\n      return null;\n    }\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2077/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isRequireModule, isMemberWithProperty } from '../helpers';\n\nconst dbModules = ['pg', 'mysql', 'mysql2', 'sequelize'];\n\ntype Argument = estree.Expression | estree.SpreadElement;\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      safeQuery: `Make sure that executing SQL queries is safe here.`,\n    },\n  },\n  create(context: Rule.RuleContext) {\n    let isDbModuleImported = false;\n\n    return {\n      Program() {\n        // init flag for each file\n        isDbModuleImported = false;\n      },\n\n      ImportDeclaration(node: estree.Node) {\n        const { source } = node as estree.ImportDeclaration;\n        if (dbModules.includes(String(source.value))) {\n          isDbModuleImported = true;\n        }\n      },\n\n      CallExpression(node: estree.Node) {\n        const call = node as estree.CallExpression;\n        const { callee, arguments: args } = call;\n\n        if (isRequireModule(call, ...dbModules)) {\n          isDbModuleImported = true;\n          return;\n        }\n\n        if (\n          isDbModuleImported &&\n          isMemberWithProperty(callee, 'query') &&\n          isQuestionable(args[0])\n        ) {\n          context.report({\n            messageId: 'safeQuery',\n            node: callee,\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction isQuestionable(sqlQuery: Argument | undefined) {\n  if (!sqlQuery) {\n    return false;\n  }\n  if (isTemplateWithVar(sqlQuery)) {\n    return true;\n  }\n  if (isConcatenation(sqlQuery)) {\n    return isVariableConcat(sqlQuery);\n  }\n  return (\n    sqlQuery.type === 'CallExpression' && isMemberWithProperty(sqlQuery.callee, 'concat', 'replace')\n  );\n}\n\nfunction isVariableConcat(node: estree.BinaryExpression): boolean {\n  const { left, right } = node;\n  if (!isHardcodedLiteral(right)) {\n    return true;\n  }\n  if (isConcatenation(left)) {\n    return isVariableConcat(left);\n  }\n  return !isHardcodedLiteral(left);\n}\n\nfunction isTemplateWithVar(node: estree.Node) {\n  return node.type === 'TemplateLiteral' && node.expressions.length !== 0;\n}\n\nfunction isTemplateWithoutVar(node: estree.Node) {\n  return node.type === 'TemplateLiteral' && node.expressions.length === 0;\n}\n\nfunction isConcatenation(node: estree.Node): node is estree.BinaryExpression {\n  return node.type === 'BinaryExpression' && node.operator === '+';\n}\n\nfunction isHardcodedLiteral(node: estree.Node) {\n  return node.type === 'Literal' || isTemplateWithoutVar(node);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5973/javascript\n\nimport { Rule } from 'eslint';\nimport { Mocha, getFullyQualifiedName, isIdentifier, isMethodInvocation } from '../helpers';\nimport * as estree from 'estree';\nimport { getDependencies } from '@sonar/jsts';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      stable:\n        'Make your tests stable so that they pass on the first try, or remove the flaky ones.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const describes: estree.Node[] = [];\n\n    const hasJest = hasJestDependency(context);\n\n    return {\n      /**\n       * We use the stack approach to check for Mocha retries inside describe blocks,\n       * and implicitly test cases.\n       */\n      CallExpression(node: estree.CallExpression) {\n        if (hasJestRetry(context, node, hasJest)) {\n          report(context, node);\n          return;\n        }\n        if (Mocha.isDescribeCase(node)) {\n          describes.push(node);\n          return;\n        }\n        if (describes.length > 0) {\n          checkMochaRetries(context, node);\n        }\n      },\n      'CallExpression:exit': (node: estree.Node) => {\n        if (Mocha.isDescribeCase(node)) {\n          describes.pop();\n        }\n      },\n      'Program:exit': () => {\n        describes.length = 0;\n      },\n    };\n  },\n};\n\nfunction hasJestRetry(context: Rule.RuleContext, node: estree.CallExpression, hasJest: boolean) {\n  const callExpressionName = getFullyQualifiedName(context, node);\n  return (\n    callExpressionName === 'jest.retryTimes' ||\n    (hasJest && isMethodInvocation(node, 'jest', 'retryTimes', 1))\n  );\n}\n\nfunction hasJestDependency(context: Rule.RuleContext) {\n  const dependencies = getDependencies(context.filename);\n  return dependencies.has('jest');\n}\n\n/**\n * Flag if `this.retries()`\n */\nfunction checkMochaRetries(context: Rule.RuleContext, node: estree.CallExpression) {\n  const callee = node.callee;\n  if (\n    callee.type === 'MemberExpression' &&\n    callee.object.type === 'ThisExpression' &&\n    isIdentifier(callee.property, 'retries')\n  ) {\n    report(context, node);\n  }\n}\n\nfunction report(context: Rule.RuleContext, node: estree.CallExpression) {\n  context.report({\n    messageId: 'stable',\n    node,\n  });\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4829/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isMemberExpression } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      safeStdin: `Make sure that reading the standard input is safe here.`,\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      MemberExpression(node: estree.Node) {\n        if (isMemberExpression(node, 'process', 'stdin')) {\n          context.report({\n            messageId: 'safeStdin',\n            node,\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6351/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  functionLike,\n  getParent,\n  getUniqueWriteUsage,\n  getVariableFromName,\n  isCallingMethod,\n  isDotNotation,\n  isMethodCall,\n  isRegexLiteral,\n  toEncodedMessage,\n} from '../helpers';\nimport { getFlags, isRegExpConstructor } from '../helpers/regex';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\ntype RegexInfo = { node: estree.Node; flags: string };\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const invocations = new Map<Scope.Variable, estree.CallExpression[]>();\n    const regexes: RegexInfo[] = [];\n    const resets = new Set<Scope.Variable>();\n    return {\n      'Literal:exit': (node: estree.Node) => {\n        extractRegex(node, regexes);\n      },\n      'CallExpression:exit': (node: estree.Node) => {\n        const callExpr = node as estree.CallExpression;\n        extractRegex(node, regexes);\n        extractRegexInvocation(callExpr, regexes, invocations, context);\n        checkWhileConditionRegex(callExpr, context);\n      },\n      'MemberExpression:exit': (node: estree.Node) => {\n        extractResetRegex(node, regexes, resets, context);\n      },\n      'NewExpression:exit': (node: estree.Node) => {\n        extractRegex(node, regexes);\n      },\n      'Program:exit': () => {\n        regexes.forEach(regex => checkGlobalStickyRegex(regex, context));\n        invocations.forEach((usages, regex) =>\n          checkMultipleInputsRegex(regex, usages, resets, context),\n        );\n      },\n    };\n  },\n};\n\nfunction extractRegex(node: estree.Node, acc: RegexInfo[]) {\n  if (isRegexLiteral(node)) {\n    const { flags } = node.regex;\n    acc.push({ node, flags });\n  } else if (isRegExpConstructor(node)) {\n    const flags = getFlags(node) ?? '';\n    acc.push({ node, flags });\n  }\n}\n\nfunction extractRegexInvocation(\n  callExpr: estree.CallExpression,\n  regexes: RegexInfo[],\n  invocations: Map<Scope.Variable, estree.CallExpression[]>,\n  context: Rule.RuleContext,\n) {\n  if (\n    isCallingMethod(callExpr, 1, 'exec', 'test') &&\n    callExpr.callee.object.type === 'Identifier'\n  ) {\n    const { object } = callExpr.callee;\n    const variable = getVariableFromName(context, object.name, callExpr);\n    if (variable) {\n      const value = getUniqueWriteUsage(context, variable.name, callExpr);\n      const regex = regexes.find(r => r.node === value);\n      if (regex?.flags.includes('g')) {\n        const usages = invocations.get(variable);\n        if (usages) {\n          usages.push(callExpr);\n        } else {\n          invocations.set(variable, [callExpr]);\n        }\n      }\n    }\n  }\n}\n\nfunction extractResetRegex(\n  node: estree.Node,\n  regexes: RegexInfo[],\n  resets: Set<Scope.Variable>,\n  context: Rule.RuleContext,\n) {\n  /* RegExp.prototype.lastIndex = ... */\n  if (\n    isDotNotation(node) &&\n    node.object.type === 'Identifier' &&\n    node.property.name === 'lastIndex'\n  ) {\n    const parent = getParent(context, node);\n    if (parent?.type === 'AssignmentExpression' && parent.left === node) {\n      const variable = getVariableFromName(context, node.object.name, node);\n      if (variable) {\n        const value = getUniqueWriteUsage(context, variable.name, node);\n        const regex = regexes.find(r => r.node === value);\n        if (regex) {\n          resets.add(variable);\n        }\n      }\n    }\n  }\n}\n\nfunction checkWhileConditionRegex(callExpr: estree.CallExpression, context: Rule.RuleContext) {\n  /* RegExp.prototype.exec() within while conditions */\n  if (isMethodCall(callExpr)) {\n    const { object, property } = callExpr.callee;\n    if ((isRegexLiteral(object) || isRegExpConstructor(object)) && property.name === 'exec') {\n      const flags = object.type === 'Literal' ? object.regex.flags : getFlags(object);\n      if (flags?.includes('g') && isWithinWhileCondition(callExpr, context)) {\n        context.report({\n          message: toEncodedMessage('Extract this regular expression to avoid infinite loop.', []),\n          node: object,\n        });\n      }\n    }\n  }\n}\n\nfunction checkGlobalStickyRegex(regex: RegexInfo, context: Rule.RuleContext) {\n  /* RegExp with `g` and `y` flags */\n  if (regex.flags.includes('g') && regex.flags.includes('y')) {\n    context.report({\n      message: toEncodedMessage(\n        `Remove the 'g' flag from this regex as it is shadowed by the 'y' flag.`,\n        [],\n      ),\n      node: regex.node,\n    });\n  }\n}\n\nfunction checkMultipleInputsRegex(\n  regex: Scope.Variable,\n  usages: estree.CallExpression[],\n  resets: Set<Scope.Variable>,\n  context: Rule.RuleContext,\n) {\n  /* RegExp.prototype.exec(input) / RegExp.prototype.test(input) */\n  if (!resets.has(regex)) {\n    const definition = regex.defs.find(def => def.type === 'Variable' && def.node.init);\n    const uniqueInputs = new Set<string>(\n      usages.map(callExpr => context.sourceCode.getText(callExpr.arguments[0])),\n    );\n    const regexReset = uniqueInputs.has(`''`) || uniqueInputs.has(`\"\"`);\n    if (definition && uniqueInputs.size > 1 && !regexReset) {\n      const pattern = definition.node.init as estree.Expression;\n      context.report({\n        message: toEncodedMessage(\n          `Remove the 'g' flag from this regex as it is used on different inputs.`,\n          usages,\n          usages.map((_, idx) => `Usage ${idx + 1}`),\n        ),\n        node: pattern,\n      });\n    }\n  }\n}\n\nfunction isWithinWhileCondition(node: estree.Node, context: Rule.RuleContext) {\n  const ancestors = context.sourceCode.getAncestors(node);\n  let parent: estree.Node | undefined;\n  let child: estree.Node = node;\n  while ((parent = ancestors.pop()) !== undefined) {\n    if (functionLike.has(parent.type)) {\n      break;\n    }\n    if (parent.type === 'WhileStatement' || parent.type === 'DoWhileStatement') {\n      return parent.test === child;\n    }\n    child = parent;\n  }\n  return false;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5734/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  Express,\n  getPropertyWithValue,\n  getValueOfExpression,\n  getFullyQualifiedName,\n  getProperty,\n} from '../helpers';\n\nconst HSTS = 'hsts';\nconst HELMET = 'helmet';\nconst MAX_AGE = 'maxAge';\nconst INCLUDE_SUB_DOMAINS = 'includeSubDomains';\nconst RECOMMENDED_MAX_AGE = 15552000;\n\nexport const rule: Rule.RuleModule = Express.SensitiveMiddlewarePropertyRule(\n  findSensitiveTransportSecurityPolicyProperty,\n  `Disabling Strict-Transport-Security policy is security-sensitive.`,\n);\n\nfunction findSensitiveTransportSecurityPolicyProperty(\n  context: Rule.RuleContext,\n  node: estree.CallExpression,\n): estree.Property[] {\n  const sensitiveFinders = [findSensitiveHsts, findSensitiveMaxAge, findSensitiveIncludeSubDomains];\n  const sensitives: estree.Property[] = [];\n  const { callee, arguments: args } = node;\n  if (args.length === 1 && args[0].type === 'ObjectExpression') {\n    const [options] = args;\n    for (const finder of sensitiveFinders) {\n      const maybeSensitive = finder(context, callee, options);\n      if (maybeSensitive) {\n        sensitives.push(maybeSensitive);\n      }\n    }\n  }\n  return sensitives;\n}\n\nfunction findSensitiveHsts(\n  context: Rule.RuleContext,\n  middleware: estree.Node,\n  options: estree.ObjectExpression,\n): estree.Property | undefined {\n  if (getFullyQualifiedName(context, middleware) === HELMET) {\n    return getPropertyWithValue(context, options, HSTS, false);\n  }\n  return undefined;\n}\n\nfunction findSensitiveMaxAge(\n  context: Rule.RuleContext,\n  middleware: estree.Node,\n  options: estree.ObjectExpression,\n): estree.Property | undefined {\n  if (isHstsMiddlewareNode(context, middleware)) {\n    const maybeMaxAgeProperty = getProperty(options, MAX_AGE, context);\n    if (maybeMaxAgeProperty) {\n      const maybeMaxAgeValue = getValueOfExpression(context, maybeMaxAgeProperty.value, 'Literal');\n      if (\n        typeof maybeMaxAgeValue?.value === 'number' &&\n        maybeMaxAgeValue.value < RECOMMENDED_MAX_AGE\n      ) {\n        return maybeMaxAgeProperty;\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction findSensitiveIncludeSubDomains(\n  context: Rule.RuleContext,\n  middleware: estree.Node,\n  options: estree.ObjectExpression,\n): estree.Property | undefined {\n  if (isHstsMiddlewareNode(context, middleware)) {\n    return getPropertyWithValue(context, options, INCLUDE_SUB_DOMAINS, false);\n  }\n  return undefined;\n}\n\nfunction isHstsMiddlewareNode(context: Rule.RuleContext, node: estree.Node): boolean {\n  const fqn = getFullyQualifiedName(context, node);\n  return fqn === `${HELMET}.${HSTS}` || fqn === HSTS;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3003/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { isString, isRequiredParserServices, toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n    return {\n      BinaryExpression: (node: estree.Node) => {\n        const { operator, left, right } = node as estree.BinaryExpression;\n        if (\n          ['<', '<=', '>', '>='].includes(operator) &&\n          isString(left, services) &&\n          isString(right, services) &&\n          !isLiteralException(left) &&\n          !isLiteralException(right) &&\n          !isWithinSortCallback(context, node)\n        ) {\n          context.report({\n            message: toEncodedMessage(\n              `Convert operands of this use of \"${operator}\" to number type.`,\n              [left, right],\n            ),\n            loc: context.sourceCode\n              .getTokensBetween(left, right)\n              .find(token => token.type === 'Punctuator' && token.value === operator)!.loc,\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction isLiteralException(node: estree.Node) {\n  return node.type === 'Literal' && node.raw!.length === 3;\n}\n\nfunction isWithinSortCallback(context: Rule.RuleContext, node: estree.Node) {\n  const ancestors = context.sourceCode.getAncestors(node).reverse();\n  const maybeCallback = ancestors.find(node =>\n    ['ArrowFunctionExpression', 'FunctionExpression'].includes(node.type),\n  );\n  if (maybeCallback) {\n    const callback = maybeCallback as TSESTree.Node;\n    const parent = callback.parent;\n    if (parent?.type === 'CallExpression') {\n      const { callee, arguments: args } = parent;\n      let funcName: string | undefined;\n      if (callee.type === 'Identifier') {\n        funcName = callee.name;\n      } else if (callee.type === 'MemberExpression' && callee.property.type === 'Identifier') {\n        funcName = callee.property.name;\n      }\n      return funcName?.match(/sort/i) && args.some(arg => arg === callback);\n    }\n  }\n  return false;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3854/javascript\n\nimport { Rule } from 'eslint';\nimport { eslintRules } from '../core';\nimport { mergeRules } from '../helpers';\n\nconst constructorSuperRule = eslintRules['constructor-super'];\nconst noThisBeforeSuperRule = eslintRules['no-this-before-super'];\n\nexport const rule: Rule.RuleModule = {\n  // meta of constructor-super and no-this-before-super is required for issue messages\n  meta: {\n    messages: { ...constructorSuperRule.meta!.messages, ...noThisBeforeSuperRule.meta!.messages },\n  },\n  create(context: Rule.RuleContext) {\n    const constructorSuperListener: Rule.RuleListener = constructorSuperRule.create(context);\n    const notThisBeforeSuperListener: Rule.RuleListener = noThisBeforeSuperRule.create(context);\n\n    return mergeRules(constructorSuperListener, notThisBeforeSuperListener);\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S131/javascript\n\nimport * as estree from 'estree';\nimport { Rule, SourceCode } from 'eslint';\nimport { tsEslintRules } from '../typescript-eslint';\nimport { isRequiredParserServices, isUnion, interceptReport, mergeRules } from '../helpers';\n\n/**\n * This rule raises issues on switch statements without a default branch if, and only if,\n * the discriminant of the switch statement is not of union type. This exception is due to\n * `switch-exhaustiveness-check` decorated below which checks the exhaustiveness of switch\n * statements on TypeScript unions and enums. Therefore, we avoid here raising multiple issues if the\n * discriminant of the switch statement denotes a union or enum, provided that type information is available.\n */\nconst switchWithoutDefaultRule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      switchDefault: `Add a \"default\" clause to this \"switch\" statement.`,\n      addDefault: 'Add a \"default\" branch.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    const hasTypeInformation = isRequiredParserServices(services);\n    return {\n      SwitchStatement(node: estree.SwitchStatement) {\n        const { discriminant, cases } = node;\n        if (hasTypeInformation && isUnion(discriminant, services)) {\n          return;\n        }\n        const defaultClause = cases.find(c => c.test === null);\n        if (!defaultClause) {\n          const switchKeyword = getSwitchKeyword(node, context);\n          context.report({\n            messageId: 'switchDefault',\n            loc: switchKeyword.loc,\n            suggest: [\n              {\n                messageId: 'addDefault',\n                fix(fixer: Rule.RuleFixer): Rule.Fix | null {\n                  return fixSwitch(fixer, node, context.sourceCode);\n                },\n              },\n            ],\n          });\n        }\n      },\n    };\n  },\n};\n\n/**\n * The rule `switch-exhaustiveness-check` is a TypeScript ESLint rule that uses type information.\n * Therefore, we need to sanitize the rule in case TypeScript's type checker is missing when the\n * rule is executed to prevent runtime errors. Furthermore, we need to decorate the rule so that\n * it raises issues at the same location, that is, the `switch` keyword.\n */\nconst switchExhaustivenessRule = tsEslintRules['switch-exhaustiveness-check'];\nconst decoratedSwitchExhaustivenessRule: Rule.RuleModule = interceptReport(\n  switchExhaustivenessRule,\n  function (context: Rule.RuleContext, descriptor: Rule.ReportDescriptor) {\n    const switchNode = (descriptor as any).node.parent as estree.Node;\n    const switchKeyword = getSwitchKeyword(switchNode, context);\n    context.report({ ...descriptor, loc: switchKeyword.loc });\n  },\n);\n\nfunction getSwitchKeyword(node: estree.Node, context: Rule.RuleContext) {\n  return context.sourceCode.getFirstToken(\n    node,\n    token => token.type === 'Keyword' && token.value === 'switch',\n  )!;\n}\n\nfunction fixSwitch(\n  fixer: Rule.RuleFixer,\n  node: estree.SwitchStatement,\n  sourceCode: SourceCode,\n): Rule.Fix | null {\n  /** Either suggest a default branch after the last case while preserving contextual indentation */\n\n  const lastCase = node.cases.length > 0 ? node.cases[node.cases.length - 1] : null;\n\n  const caseIndent = lastCase\n    ? ' '.repeat(lastCase.loc?.start.column!)\n    : ' '.repeat(node.loc?.start.column!);\n  const code = \"default: { throw new Error('Not implemented yet'); }\";\n  const fixString = `${caseIndent}${code}`;\n\n  if (lastCase) {\n    return fixer.insertTextAfter(lastCase, `\\n${fixString}`);\n  }\n\n  /* Or suggest a default branch with the same indentation level as the switch starting line */\n\n  const openingBrace = sourceCode.getTokenAfter(\n    node.discriminant,\n    token => token.type === 'Punctuator' && token.value === '{',\n  )!;\n\n  const closingBrace = sourceCode.getTokenAfter(\n    node.discriminant,\n    token => token.type === 'Punctuator' && token.value === '}',\n  )!;\n\n  return fixer.replaceTextRange(\n    [openingBrace.range[0], closingBrace.range[1]],\n    ['{', fixString, `${caseIndent}}`].join('\\n'),\n  );\n}\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      ...switchWithoutDefaultRule.meta?.messages,\n      ...decoratedSwitchExhaustivenessRule.meta?.messages,\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return mergeRules(\n      switchWithoutDefaultRule.create(context),\n      decoratedSwitchExhaustivenessRule.create(context),\n    );\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nimport { TSESTree } from '@typescript-eslint/utils';\n\nconst HTML_TAG_NAMES = new Set([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'applet',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'basefont',\n  'bdi',\n  'bdo',\n  'bgsound',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'command',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'image',\n  'img',\n  'input',\n  'ins',\n  'isindex',\n  'kbd',\n  'keygen',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'listing',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'math',\n  'menu',\n  'menuitem',\n  'meta',\n  'meter',\n  'multicol',\n  'nav',\n  'nextid',\n  'nobr',\n  'noembed',\n  'noframes',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'plaintext',\n  'pre',\n  'progress',\n  'q',\n  'rb',\n  'rbc',\n  'rp',\n  'rt',\n  'rtc',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'search',\n  'section',\n  'select',\n  'shadow',\n  'slot',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'svg',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n  'xmp',\n]);\n\nexport function isHtmlElement(node: TSESTree.JSXElement) {\n  return (\n    node.openingElement.name.type === 'JSXIdentifier' &&\n    HTML_TAG_NAMES.has(node.openingElement.name.name)\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nimport { TSESTree } from '@typescript-eslint/utils';\nimport jsxAstUtils from 'jsx-ast-utils';\nimport { Rule } from 'eslint';\nimport getElementType from 'eslint-plugin-jsx-a11y/lib/util/getElementType';\nimport { isHtmlElement } from './isHtmlElement';\n\nexport type TableCell = {\n  isHeader: boolean;\n  headers?: string[];\n  id?: string;\n  node: TSESTree.JSXElement;\n  internalNodeId: number;\n};\n\ntype TableCellInternal = TableCell & {\n  rowSpan: number;\n};\n\nconst MAX_ROW_SPAN = 65534;\nconst MAX_INVALID_COL_SPAN = 10000;\nconst KNOWN_TABLE_STRUCTURE_ELEMENTS = ['thead', 'tbody', 'tfoot'];\n\nfunction computeSpan(tree: TSESTree.JSXElement, spanKey: string): number {\n  let span = 1;\n  const spanAttr = jsxAstUtils.getProp(tree.openingElement.attributes, spanKey);\n  if (spanAttr) {\n    span = parseInt(String(jsxAstUtils.getLiteralPropValue(spanAttr)));\n  }\n  return span;\n}\n\nfunction rowSpan(tree: TSESTree.JSXElement): number {\n  let value = computeSpan(tree, 'rowspan');\n  if (value > MAX_ROW_SPAN) {\n    value = MAX_ROW_SPAN;\n  }\n  return value;\n}\n\nfunction colSpan(tree: TSESTree.JSXElement): number {\n  let value = computeSpan(tree, 'colspan');\n  if (value > MAX_INVALID_COL_SPAN) {\n    value = 1;\n  }\n  return value;\n}\n\nfunction getHeaders(tree: TSESTree.JSXElement): string[] | undefined {\n  const headers = jsxAstUtils.getProp(tree.openingElement.attributes, 'headers');\n  if (headers) {\n    const headerVal = jsxAstUtils.getLiteralPropValue(headers);\n    if (headerVal && String(headerVal).trim() !== '') {\n      return String(headerVal).split(/\\s+/);\n    }\n  }\n  return undefined;\n}\n\nfunction getID(tree: TSESTree.JSXElement): string | undefined {\n  const id = jsxAstUtils.getProp(tree.openingElement.attributes, 'id');\n  if (id) {\n    return String(jsxAstUtils.getLiteralPropValue(id));\n  }\n  return undefined;\n}\n\nfunction createTableCell(internalCell: TableCellInternal): TableCell {\n  // Drop rowSpan from the cell\n  const { rowSpan, ...tableCell } = internalCell;\n  return tableCell;\n}\n\nfunction extractRows(\n  context: Rule.RuleContext,\n  tree: TSESTree.JSXElement | TSESTree.JSXFragment,\n): TableCellInternal[][] | null {\n  const rows: TableCellInternal[][] = [];\n  let internalNodeCount = 0;\n  let unknownTableStructure = false;\n\n  const extractRow = (tree: TSESTree.JSXElement): TableCellInternal[] | null => {\n    const row: TableCellInternal[] = [];\n    let unknownRowStructure = false;\n    tree.children.forEach(child => {\n      if (\n        (child.type === 'JSXExpressionContainer' &&\n          child.expression.type === 'JSXEmptyExpression') ||\n        child.type === 'JSXText'\n      ) {\n        // Skip comment\n        return;\n      }\n      const isTdOrTh =\n        child.type === 'JSXElement' &&\n        child.openingElement.name.type === 'JSXIdentifier' &&\n        ['td', 'th'].includes(child.openingElement.name.name);\n      if (!isTdOrTh) {\n        unknownRowStructure = true;\n        return;\n      }\n      const colSpanValue = colSpan(child);\n      const rowSpanValue = rowSpan(child);\n      const headers = getHeaders(child);\n      const id = getID(child);\n      for (let i = 0; i < colSpanValue; i++) {\n        row.push({\n          rowSpan: rowSpanValue,\n          isHeader:\n            child.openingElement.name.type === 'JSXIdentifier' &&\n            child.openingElement.name.name === 'th',\n          headers,\n          id,\n          node: child,\n          internalNodeId: internalNodeCount,\n        });\n      }\n      internalNodeCount += 1;\n    });\n    if (unknownRowStructure) {\n      return null;\n    }\n    return row;\n  };\n\n  const handleInternalStructure = (tree: TSESTree.JSXElement | TSESTree.JSXFragment) => {\n    const extractedRows = extractRows(context, tree);\n    if (extractedRows === null) {\n      unknownTableStructure = true;\n    } else if (extractedRows.length > 0) {\n      rows.push(...extractedRows);\n    }\n  };\n\n  tree.children.forEach(child => {\n    if (child.type === 'JSXElement') {\n      const childType = getElementType(context)(child.openingElement).toLowerCase();\n      if (childType === 'tr') {\n        const extractedRow = extractRow(child);\n        if (!extractedRow) {\n          unknownTableStructure = true;\n        } else {\n          rows.push(extractedRow);\n        }\n      } else if (childType === 'table') {\n        // skip\n      } else if (KNOWN_TABLE_STRUCTURE_ELEMENTS.includes(childType)) {\n        handleInternalStructure(child);\n      } else if (!isHtmlElement(child)) {\n        unknownTableStructure = true;\n      }\n    } else if (\n      child.type === 'JSXExpressionContainer' &&\n      child.expression.type !== 'JSXEmptyExpression'\n    ) {\n      unknownTableStructure = true;\n    } else if (child.type === 'JSXFragment') {\n      handleInternalStructure(child);\n    }\n  });\n  if (unknownTableStructure) {\n    return null;\n  }\n  return rows;\n}\n\nexport function computeGrid(\n  context: Rule.RuleContext,\n  tree: TSESTree.JSXElement,\n): TableCell[][] | null {\n  const rows = extractRows(context, tree);\n  if (rows === null) {\n    return null;\n  }\n  if (rows.length === 0) {\n    return [];\n  }\n  const nbColumns = rows[0].length;\n  const columns: (TableCellInternal | undefined)[] = Array.from({ length: nbColumns });\n  let row = 0;\n  const result: TableCell[][] = [];\n  while (row < rows.length) {\n    const resultRow: TableCell[] = [];\n    let indexInRow = 0;\n    // Checks if any of the cells in the current row that is added was used from the incoming rows[row]\n    let usedCurrentRow = false;\n    // Checks if row was built entirely out of columns with rowSpan == 0\n    let onlyMaxRowSpan = true;\n    for (let column = 0; column < nbColumns; column++) {\n      if (!columns[column]) {\n        if (indexInRow === rows[row].length) {\n          // We have reached the end of the current row from the table definition\n          continue;\n        }\n        columns[column] = rows[row][indexInRow];\n        indexInRow++;\n        usedCurrentRow = true;\n      }\n      const currentCell = columns[column];\n      if (!currentCell) {\n        continue;\n      }\n      resultRow.push(createTableCell(currentCell));\n      if (currentCell.rowSpan > 0) {\n        // Mark that there is at least one cell that is not built entirely out of columns with rowSpan == 0\n        onlyMaxRowSpan = false;\n        currentCell.rowSpan--;\n        if (currentCell.rowSpan === 0) {\n          columns[column] = undefined;\n        }\n      }\n    }\n    if (onlyMaxRowSpan) {\n      // If the row was built entirely out of columns with rowSpan == 0, we finish the construction\n      break;\n    }\n    result.push(resultRow);\n    if (usedCurrentRow) {\n      // Increment the row index only if we used any of the cells from the incoming rows[row]\n      row++;\n    }\n  }\n  return result;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5256/javascript\n\nimport getElementType from 'eslint-plugin-jsx-a11y/lib/util/getElementType';\nimport * as estree from 'estree';\nimport { Rule } from 'eslint';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport jsxAstUtils from 'jsx-ast-utils';\nimport { computeGrid } from '../helpers/table';\nimport { isPresentationTable } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {},\n  create(context: Rule.RuleContext) {\n    const checkValidTable = (tree: TSESTree.JSXElement): boolean => {\n      const grid = computeGrid(context, tree);\n      if (grid === null) {\n        // Unknown table structure, dont raise issue\n        return true;\n      }\n      if (grid.length === 0) {\n        return false;\n      }\n      for (const row of grid) {\n        if (row.every(({ isHeader }) => isHeader)) {\n          return true;\n        }\n      }\n      for (let col = 0; col < grid[0].length; col++) {\n        if (grid.every(row => col >= row.length || row[col].isHeader)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    return {\n      JSXElement(node: estree.Node) {\n        const tree = node as unknown as TSESTree.JSXElement;\n        const elementType = getElementType(context)(tree.openingElement);\n        if (elementType === 'table') {\n          if (isPresentationTable(context, tree.openingElement)) {\n            return;\n          }\n          const ariaHidden = jsxAstUtils.getProp(tree.openingElement.attributes, 'aria-hidden');\n          if (ariaHidden && jsxAstUtils.getLiteralPropValue(ariaHidden) === true) {\n            return;\n          }\n          if (!checkValidTable(tree)) {\n            context.report({\n              node,\n              message: 'Add a valid header row or column to this \"<table>\".',\n            });\n          }\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5260/javascript\n\nimport getElementType from 'eslint-plugin-jsx-a11y/lib/util/getElementType';\nimport * as estree from 'estree';\nimport { Rule } from 'eslint';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { computeGrid, TableCell } from '../helpers/table';\n\ntype BlockInfo = {\n  minRow: number;\n  maxRow: number;\n  minCol: number;\n  maxCol: number;\n  cell: TableCell;\n};\n\nexport const rule: Rule.RuleModule = {\n  meta: {},\n  create(context: Rule.RuleContext) {\n    const verifyHeaderReferences = (tree: TSESTree.JSXElement) => {\n      const grid = computeGrid(context, tree);\n      if (grid === null || grid.length === 0) {\n        // Unknown table structures as well as empty tables should be considered valid\n        return;\n      }\n      const rowHeaders: Set<string>[] = Array.from({ length: grid.length }, (_, idx) => {\n        const ids = grid[idx]\n          .filter(({ isHeader, id }) => isHeader && id)\n          .map(({ id }) => id) as string[];\n        return new Set<string>(ids);\n      });\n      const colHeaders: Set<string>[] = Array.from({ length: grid[0].length }, (_, idx) => {\n        const ids = grid\n          .map(row => row[idx])\n          .filter(cell => cell)\n          .filter(({ isHeader, id }) => isHeader && id)\n          .map(({ id }) => id) as string[];\n        return new Set<string>(ids);\n      });\n      const allHeaders = new Set([\n        ...rowHeaders.reduce((headers, acc) => new Set([...headers, ...acc]), new Set()),\n        ...colHeaders.reduce((headers, acc) => new Set([...headers, ...acc]), new Set()),\n      ]);\n\n      const internalNodeToPositions = compileBlockInfo(grid);\n      for (const { minRow, maxRow, minCol, maxCol, cell } of internalNodeToPositions.values()) {\n        if (!cell.headers || cell.headers.length === 0) {\n          continue;\n        }\n        const actualHeaders = [\n          ...colHeaders.slice(minCol, maxCol + 1),\n          ...rowHeaders.slice(minRow, maxRow + 1),\n        ].reduce((headers, acc) => new Set([...headers, ...acc]), new Set());\n        for (const header of cell.headers) {\n          if (!actualHeaders.has(header)) {\n            if (allHeaders.has(header)) {\n              context.report({\n                node: cell.node as unknown as estree.Node,\n                message: `id \"${header}\" in \"headers\" references the header of another column/row.`,\n              });\n            } else {\n              context.report({\n                node: cell.node as unknown as estree.Node,\n                message: `id \"${header}\" in \"headers\" does not reference any <th> header.`,\n              });\n            }\n          }\n        }\n      }\n    };\n\n    return {\n      JSXElement(node: estree.Node) {\n        const tree = node as unknown as TSESTree.JSXElement;\n        const elementType = getElementType(context)(tree.openingElement);\n        if (elementType === 'table') {\n          verifyHeaderReferences(tree);\n        }\n      },\n    };\n  },\n};\n\n/**\n * Extracts an alternative representation of the blocks making up the table. Takes into account that a single block can\n * span more than just a 1x1 cell thanks to the \"rowspan\" and \"colspan\" attributes. Each block is assigned an internal\n * number during computation. Afterward, for each block, we compute its position in the resulting table.\n */\nfunction compileBlockInfo(grid: TableCell[][]) {\n  const internalNodeToPositions = new Map<number, BlockInfo>();\n  for (let row = 0; row < grid.length; row++) {\n    for (let col = 0; col < grid[row].length; col++) {\n      const cell = grid[row][col];\n      if (!cell.headers) {\n        continue;\n      }\n      const oldValue = internalNodeToPositions.get(cell.internalNodeId);\n      if (oldValue !== undefined) {\n        internalNodeToPositions.set(cell.internalNodeId, {\n          ...oldValue,\n          maxRow: row,\n          maxCol: col,\n        });\n      } else {\n        internalNodeToPositions.set(cell.internalNodeId, {\n          minRow: row,\n          maxRow: row,\n          minCol: col,\n          maxCol: col,\n          cell,\n        });\n      }\n    }\n  }\n  return internalNodeToPositions;\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5958/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getVariableFromIdentifier, isIdentifier, Mocha } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  create(context: Rule.RuleContext) {\n    let catchWithDone = false;\n\n    function isInsideTest(node: estree.Node) {\n      return context.sourceCode\n        .getAncestors(node)\n        .some(n => n.type === 'CallExpression' && Mocha.isTestConstruct(n));\n    }\n\n    return {\n      'CatchClause CallExpression[callee.name=\"done\"]': (_node: estree.Node) => {\n        catchWithDone = true;\n      },\n      'CatchClause:exit': (node: estree.Node) => {\n        if (!catchWithDone || !isInsideTest(node)) {\n          return;\n        }\n        catchWithDone = false;\n        const { param } = node as estree.CatchClause;\n        if (param && param.type === 'Identifier') {\n          const exception = getVariableFromIdentifier(param, context.sourceCode.getScope(node));\n          if (exception && exception.references.length === 0) {\n            context.report({\n              node: param,\n              message:\n                'Either the exception should be passed to \"done(e)\", or the exception should be tested further.',\n            });\n          }\n        }\n      },\n      CallExpression(node: estree.Node) {\n        const callExpr = node as estree.CallExpression;\n        if (\n          isInsideTest(node) &&\n          isThrowAssertWithoutNot(callExpr) &&\n          (callExpr.arguments.length === 0 ||\n            (callExpr.arguments.length === 1 && isIdentifier(callExpr.arguments[0], 'Error')))\n        ) {\n          context.report({\n            node: callExpr.callee.property,\n            message: 'Assert more concrete exception type or assert the message of exception.',\n          });\n        }\n      },\n    };\n  },\n};\n\n// find nodes in shape expect(...).a.b.c.throw() or a.should.throw()\nfunction isThrowAssertWithoutNot(\n  node: estree.CallExpression,\n): node is estree.CallExpression & { callee: estree.MemberExpression } {\n  if (node.callee.type !== 'MemberExpression') {\n    return false;\n  }\n  let { object, property } = node.callee;\n  if (!isIdentifier(property, 'throw')) {\n    return false;\n  }\n  while (object.type === 'MemberExpression') {\n    if (isIdentifier(object.property, 'not')) {\n      return false;\n    }\n    if (isIdentifier(object.property, 'should')) {\n      return true;\n    }\n    object = object.object;\n  }\n  return object.type === 'CallExpression' && isIdentifier(object.callee, 'expect');\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S135/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    let jumpTargets: JumpTarget[] = [];\n\n    function enterScope() {\n      jumpTargets.push(new JumpTarget());\n    }\n\n    function leaveScope() {\n      jumpTargets.pop();\n    }\n\n    function increateNumberOfJumpsInScopes(jump: estree.Node, label?: string) {\n      for (const jumpTarget of [...jumpTargets].reverse()) {\n        jumpTarget.jumps.push(jump);\n        if (label === jumpTarget.label) {\n          break;\n        }\n      }\n    }\n\n    function leaveScopeAndCheckNumberOfJumps(node: estree.Node) {\n      const jumps = jumpTargets.pop()?.jumps;\n      if (jumps && jumps.length > 1) {\n        const sourceCode = context.sourceCode;\n        const firstToken = sourceCode.getFirstToken(node);\n        context.report({\n          loc: firstToken!.loc,\n          message: toEncodedMessage(\n            'Reduce the total number of \"break\" and \"continue\" statements in this loop to use one at most.',\n            jumps,\n            jumps.map(jmp =>\n              jmp.type === 'BreakStatement' ? '\"break\" statement.' : '\"continue\" statement.',\n            ),\n          ),\n        });\n      }\n    }\n\n    return {\n      Program: () => {\n        jumpTargets = [];\n      },\n      BreakStatement: (node: estree.Node) => {\n        const breakStatement = node as estree.BreakStatement;\n        increateNumberOfJumpsInScopes(breakStatement, breakStatement.label?.name);\n      },\n      ContinueStatement: (node: estree.Node) => {\n        const continueStatement = node as estree.ContinueStatement;\n        increateNumberOfJumpsInScopes(continueStatement, continueStatement.label?.name);\n      },\n      SwitchStatement: enterScope,\n      'SwitchStatement:exit': leaveScope,\n      ForStatement: enterScope,\n      'ForStatement:exit': leaveScopeAndCheckNumberOfJumps,\n      ForInStatement: enterScope,\n      'ForInStatement:exit': leaveScopeAndCheckNumberOfJumps,\n      ForOfStatement: enterScope,\n      'ForOfStatement:exit': leaveScopeAndCheckNumberOfJumps,\n      WhileStatement: enterScope,\n      'WhileStatement:exit': leaveScopeAndCheckNumberOfJumps,\n      DoWhileStatement: enterScope,\n      'DoWhileStatement:exit': leaveScopeAndCheckNumberOfJumps,\n      LabeledStatement: (node: estree.Node) => {\n        const labeledStatement = node as estree.LabeledStatement;\n        jumpTargets.push(new JumpTarget(labeledStatement.label.name));\n      },\n      'LabeledStatement:exit': leaveScope,\n    };\n  },\n};\n\nclass JumpTarget {\n  label?: string;\n  jumps: estree.Node[] = [];\n\n  constructor(label?: string) {\n    this.label = label;\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5867/javascript\n\nimport { Rule } from 'eslint';\nimport { Character, Quantifier, RegExpLiteral } from '@eslint-community/regexpp/ast';\nimport { LocationHolder, toEncodedMessage } from '../helpers';\nimport { createRegExpRule, getRegexpLocation } from '../helpers/regex';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = createRegExpRule(\n  context => {\n    const unicodeProperties: { character: Character; offset: number }[] = [];\n    const unicodeCharacters: Quantifier[] = [];\n    let rawPattern: string;\n    let isUnicodeEnabled = false;\n    return {\n      onRegExpLiteralEnter: (node: RegExpLiteral) => {\n        rawPattern = node.raw;\n        isUnicodeEnabled = node.flags.unicode;\n      },\n      onQuantifierEnter: (quantifier: Quantifier) => {\n        if (isUnicodeEnabled) {\n          return;\n        }\n        /* \\u{hhhh}, \\u{hhhhh} */\n        const { raw, min: hex } = quantifier;\n        if (\n          raw.startsWith('\\\\u') &&\n          !raw.includes(',') &&\n          ['hhhh'.length, 'hhhhh'.length].includes(hex.toString().length)\n        ) {\n          unicodeCharacters.push(quantifier);\n        }\n      },\n      onCharacterEnter: (character: Character) => {\n        if (isUnicodeEnabled) {\n          return;\n        }\n        const c = character.raw;\n        if (c !== '\\\\p' && c !== '\\\\P') {\n          return;\n        }\n        let state:\n          | 'start'\n          | 'openingBracket'\n          | 'alpha'\n          | 'equal'\n          | 'alpha1'\n          | 'closingBracket'\n          | 'end' = 'start';\n        let offset = character.start + c.length;\n        let nextChar: string;\n        do {\n          nextChar = rawPattern[offset];\n          offset++;\n          switch (state) {\n            case 'start':\n              if (nextChar === '{') {\n                state = 'openingBracket';\n              } else {\n                state = 'end';\n              }\n              break;\n            case 'openingBracket':\n              if (/[a-zA-Z]/.test(nextChar)) {\n                state = 'alpha';\n              } else {\n                state = 'end';\n              }\n              break;\n            case 'alpha':\n              if (/[a-zA-Z]/.test(nextChar)) {\n                state = 'alpha';\n              } else if (nextChar === '=') {\n                state = 'equal';\n              } else if (nextChar === '}') {\n                state = 'closingBracket';\n              } else {\n                state = 'end';\n              }\n              break;\n            case 'equal':\n              if (/[a-zA-Z]/.test(nextChar)) {\n                state = 'alpha1';\n              } else {\n                state = 'end';\n              }\n              break;\n            case 'alpha1':\n              if (/[a-zA-Z]/.test(nextChar)) {\n                state = 'alpha1';\n              } else if (nextChar === '}') {\n                state = 'closingBracket';\n              } else {\n                state = 'end';\n              }\n              break;\n            case 'closingBracket':\n              state = 'end';\n              unicodeProperties.push({ character, offset: offset - c.length - 1 });\n              break;\n          }\n        } while (state !== 'end');\n      },\n      onRegExpLiteralLeave: (regexp: RegExpLiteral) => {\n        if (!isUnicodeEnabled && (unicodeProperties.length > 0 || unicodeCharacters.length > 0)) {\n          const secondaryLocations: LocationHolder[] = [];\n          const secondaryMessages: string[] = [];\n          unicodeProperties.forEach(p => {\n            const loc = getRegexpLocation(context.node, p.character, context, [0, p.offset]);\n            if (loc) {\n              secondaryLocations.push({ loc });\n              secondaryMessages.push('Unicode property');\n            }\n          });\n          unicodeCharacters.forEach(c => {\n            const loc = getRegexpLocation(context.node, c, context);\n            if (loc) {\n              secondaryLocations.push({ loc });\n              secondaryMessages.push('Unicode character');\n            }\n          });\n          context.reportRegExpNode({\n            message: toEncodedMessage(\n              `Enable the 'u' flag for this regex using Unicode constructs.`,\n              secondaryLocations,\n              secondaryMessages,\n            ),\n            node: context.node,\n            regexpNode: regexp,\n          });\n        }\n      },\n    };\n  },\n  {\n    meta: {\n      schema: [\n        {\n          // internal parameter for rules having secondary locations\n          enum: [SONAR_RUNTIME],\n        },\n      ],\n    },\n  },\n);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S6535/javascript\n\nimport { Rule } from 'eslint';\nimport { eslintRules } from '../core';\nimport { interceptReport, mergeRules } from '../helpers';\n\n/**\n * We want to merge ESLint rules 'no-useless-escape' and 'no-nonoctal-decimal-escape'. However,\n * both share a common message id 'escapeBackslash' but a different description for quickfixes.\n * To prevent one overwritting the other, we need to decorate one and map the conflicting message\n * id to a different one when intercepting a report.\n *\n * Here we arbitrarily choose to decorate 'no-nonoctal-decimal-escape'.\n */\nconst noUselessEscapeRule = eslintRules['no-useless-escape'];\nconst noNonoctalDecimalEscapeRule = eslintRules['no-nonoctal-decimal-escape'];\n\n/**\n * We replace the message id 'escapeBackslash' of 'no-nonoctal-decimal-escape' with 'nonOctalEscapeBacklash'.\n */\nnoNonoctalDecimalEscapeRule.meta!.messages!['nonOctalEscapeBacklash'] =\n  noNonoctalDecimalEscapeRule.meta!.messages!['escapeBackslash'];\ndelete noNonoctalDecimalEscapeRule.meta!.messages!['escapeBackslash'];\n\n/**\n * We decorate 'no-nonoctal-decimal-escape' to map suggestions with the message id 'escapeBackslash' to 'nonOctalEscapeBacklash'.\n */\nconst decoratedNoNonoctalDecimalEscapeRule = decorateNoNonoctalDecimalEscape(\n  noNonoctalDecimalEscapeRule,\n);\nfunction decorateNoNonoctalDecimalEscape(rule: Rule.RuleModule): Rule.RuleModule {\n  return interceptReport(rule, (context, descriptor) => {\n    const { suggest, ...rest } = descriptor;\n    suggest?.forEach(s => {\n      const suggestion = s as { messageId: string };\n      if (suggestion.messageId === 'escapeBackslash') {\n        suggestion.messageId = 'nonOctalEscapeBacklash';\n      }\n    });\n    context.report({ suggest, ...rest });\n  });\n}\n\nexport const rule: Rule.RuleModule = {\n  // meta of `no-useless-escape` and `no-nonoctal-decimal-escape` are required for issue messages and quickfixes\n  meta: {\n    hasSuggestions: true,\n    messages: {\n      ...noUselessEscapeRule.meta!.messages,\n      ...decoratedNoNonoctalDecimalEscapeRule.meta!.messages,\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const noUselessEscapeListener: Rule.RuleListener = noUselessEscapeRule.create(context);\n    const decoratedNoNonoctalDecimalEscapeListener: Rule.RuleListener =\n      decoratedNoNonoctalDecimalEscapeRule.create(context);\n    return mergeRules(noUselessEscapeListener, decoratedNoNonoctalDecimalEscapeListener);\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1128/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport { AST } from 'vue-eslint-parser';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport {\n  isRequiredParserServices,\n  removeNodeWithLeadingWhitespaces,\n  isInsideVueSetupScript,\n} from '../helpers';\n\nconst EXCLUDED_IMPORTS = ['React'];\nconst JSDOC_TAGS = [\n  '@abstract',\n  '@access',\n  '@alias',\n  '@arg',\n  '@argument',\n  '@async',\n  '@augments',\n  '@author',\n  '@borrows',\n  '@callback',\n  '@class',\n  '@classdesc',\n  '@const',\n  '@constant',\n  '@constructor',\n  '@constructs',\n  '@copyright',\n  '@default',\n  '@defaultvalue',\n  '@deprecated',\n  '@desc',\n  '@description',\n  '@emits',\n  '@enum',\n  '@event',\n  '@example',\n  '@exception',\n  '@exports',\n  '@extends',\n  '@external',\n  '@file',\n  '@fileoverview',\n  '@fires',\n  '@func',\n  '@function',\n  '@generator',\n  '@global',\n  '@hideconstructor',\n  '@host',\n  '@ignore',\n  '@implements',\n  '@inheritdoc',\n  '@inner',\n  '@instance',\n  '@interface',\n  '@kind',\n  '@lends',\n  '@license',\n  '@link',\n  '@linkcode',\n  '@linkplain',\n  '@listens',\n  '@member',\n  '@memberof',\n  '@method',\n  '@mixes',\n  '@mixin',\n  '@module',\n  '@name',\n  '@namespace',\n  '@override',\n  '@overview',\n  '@package',\n  '@param',\n  '@private',\n  '@prop',\n  '@property',\n  '@protected',\n  '@public',\n  '@readonly',\n  '@requires',\n  '@return',\n  '@returns',\n  '@see',\n  '@since',\n  '@static',\n  '@summary',\n  '@this',\n  '@throws',\n  '@todo',\n  '@tutorial',\n  '@type',\n  '@typedef',\n  '@var',\n  '@variation',\n  '@version',\n  '@virtual',\n  '@yield',\n  '@yields',\n];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      removeUnusedImport: `Remove this unused import of '{{symbol}}'.`,\n      suggestRemoveWholeStatement: `Remove this import statement`,\n      suggestRemoveOneVariable: `Remove this variable import`,\n    },\n    hasSuggestions: true,\n  },\n  create(context: Rule.RuleContext) {\n    const isJsxPragmaSet =\n      context.sourceCode.getAllComments().findIndex(comment => comment.value.includes('@jsx jsx')) >\n      -1;\n    const unusedImports: { id: estree.Identifier; importDecl: estree.ImportDeclaration }[] = [];\n    const tsTypeIdentifiers: Set<string> = new Set();\n    const vueIdentifiers: Set<string> = new Set();\n    const saveTypeIdentifier = (node: estree.Identifier) => tsTypeIdentifiers.add(node.name);\n\n    function isExcluded(variable: Scope.Variable) {\n      return EXCLUDED_IMPORTS.includes(variable.name);\n    }\n\n    function isUnused(variable: Scope.Variable) {\n      return variable.references.length === 0;\n    }\n\n    function isImplicitJsx(variable: Scope.Variable) {\n      return variable.name === 'jsx' && isJsxPragmaSet;\n    }\n\n    const ruleListener = {\n      ImportDeclaration: (node: estree.Node) => {\n        const variables = context.sourceCode.getDeclaredVariables(node);\n        for (const variable of variables) {\n          if (!isExcluded(variable) && !isImplicitJsx(variable) && isUnused(variable)) {\n            unusedImports.push({\n              id: variable.identifiers[0],\n              importDecl: node as estree.ImportDeclaration,\n            });\n          }\n        }\n      },\n      'TSTypeReference > Identifier, TSClassImplements > Identifier, TSInterfaceHeritage > Identifier':\n        (node: estree.Node) => {\n          saveTypeIdentifier(node as estree.Identifier);\n        },\n      \"TSQualifiedName[left.type = 'Identifier']\": (node: estree.Node) => {\n        saveTypeIdentifier((node as unknown as TSESTree.TSQualifiedName).left as estree.Identifier);\n      },\n      \"TSInterfaceHeritage > MemberExpression[object.type = 'Identifier'], TSClassImplements > MemberExpression[object.type = 'Identifier']\":\n        (node: estree.Node) => {\n          saveTypeIdentifier(\n            (node as unknown as TSESTree.MemberExpression).object as estree.Identifier,\n          );\n        },\n      'Program:exit': () => {\n        const jsxFactories = getJsxFactories(context);\n        const jsxIdentifiers = getJsxIdentifiers(context);\n        const jsDocComments = getJsDocComments(context);\n        unusedImports\n          .filter(\n            ({ id: unused }) =>\n              !jsxIdentifiers.includes(unused.name) &&\n              !tsTypeIdentifiers.has(unused.name) &&\n              !(vueIdentifiers.has(unused.name) && isInsideVueSetupScript(unused, context)) &&\n              !jsxFactories.has(unused.name) &&\n              !jsDocComments.some(comment => comment.value.includes(unused.name)),\n          )\n          .forEach(unused =>\n            context.report({\n              messageId: 'removeUnusedImport',\n              data: {\n                symbol: unused.id.name,\n              },\n              node: unused.id,\n              suggest: [getSuggestion(context, unused)],\n            }),\n          );\n      },\n    };\n\n    // @ts-ignore\n    if (context.sourceCode.parserServices.defineTemplateBodyVisitor) {\n      return context.sourceCode.parserServices.defineTemplateBodyVisitor(\n        {\n          VElement: (node: AST.VElement) => {\n            const { rawName } = node;\n            const name = rawName.split('.')[0];\n            vueIdentifiers.add(toCamelCase(name));\n            vueIdentifiers.add(toPascalCase(name));\n          },\n          VDirectiveKey: (node: AST.VDirectiveKey) => {\n            const {\n              name: { name },\n            } = node;\n            vueIdentifiers.add(toCamelCase(name));\n            vueIdentifiers.add(toPascalCase(name));\n          },\n          Identifier: (node: AST.ESLintIdentifier) => {\n            vueIdentifiers.add(node.name);\n          },\n        },\n        ruleListener,\n        { templateBodyTriggerSelector: 'Program' },\n      );\n    }\n\n    return ruleListener;\n  },\n};\n\n// vue only capitalizes the char after '-'\nfunction toCamelCase(str: string) {\n  return str.replace(/-\\w/g, s => s[1].toUpperCase());\n}\n\nfunction toPascalCase(str: string) {\n  const camelized = toCamelCase(str);\n  return camelized[0].toUpperCase() + camelized.slice(1);\n}\n\nfunction getSuggestion(\n  context: Rule.RuleContext,\n  { id, importDecl }: { id: estree.Identifier; importDecl: estree.ImportDeclaration },\n): Rule.SuggestionReportDescriptor {\n  const variables = context.sourceCode.getDeclaredVariables(importDecl);\n  if (variables.length === 1) {\n    return {\n      messageId: 'suggestRemoveWholeStatement',\n      fix: fixer => {\n        return removeNodeWithLeadingWhitespaces(context, importDecl, fixer);\n      },\n    };\n  }\n\n  const specifiers = importDecl.specifiers;\n  const unusedSpecifier = specifiers.find(specifier => specifier.local === id)!;\n  const code = context.sourceCode;\n  let range: [number, number];\n\n  switch (unusedSpecifier.type) {\n    case 'ImportDefaultSpecifier': {\n      const tokenAfter = code.getTokenAfter(id)!;\n      // default import is always first\n      range = [id.range![0], code.getTokenAfter(tokenAfter)!.range[0]];\n      break;\n    }\n\n    case 'ImportNamespaceSpecifier':\n      // namespace import is always second\n      range = [code.getTokenBefore(unusedSpecifier)!.range[0], unusedSpecifier.range![1]];\n      break;\n\n    case 'ImportSpecifier': {\n      const simpleSpecifiers = specifiers.filter(specifier => specifier.type === 'ImportSpecifier');\n      const index = simpleSpecifiers.findIndex(specifier => specifier === unusedSpecifier);\n      if (simpleSpecifiers.length === 1) {\n        range = [specifiers[0].range![1], code.getTokenAfter(unusedSpecifier)!.range[1]];\n      } else if (index === 0) {\n        range = [simpleSpecifiers[0].range![0], simpleSpecifiers[1].range![0]];\n      } else {\n        range = [simpleSpecifiers[index - 1].range![1], simpleSpecifiers[index].range![1]];\n      }\n    }\n  }\n\n  return {\n    messageId: 'suggestRemoveOneVariable',\n    fix: fixer => {\n      return fixer.removeRange(range);\n    },\n  };\n}\n\nfunction getJsxFactories(context: Rule.RuleContext) {\n  const factories = new Set<string>();\n  const parserServices = context.sourceCode.parserServices;\n  if (isRequiredParserServices(parserServices)) {\n    const compilerOptions = parserServices.program.getCompilerOptions();\n    if (compilerOptions.jsxFactory) {\n      factories.add(compilerOptions.jsxFactory);\n    }\n    if (compilerOptions.jsxFragmentFactory) {\n      factories.add(compilerOptions.jsxFragmentFactory);\n    }\n  }\n  return factories;\n}\n\nfunction getJsxIdentifiers(context: Rule.RuleContext) {\n  return context.sourceCode.ast.tokens\n    .filter(token => token.type === 'JSXIdentifier')\n    .map(token => token.value);\n}\n\nfunction getJsDocComments(context: Rule.RuleContext) {\n  return context.sourceCode\n    .getAllComments()\n    .filter(\n      comment => comment.type === 'Block' && JSDOC_TAGS.some(tag => comment.value.includes(tag)),\n    );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5860/javascript\n\nimport { AST, Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport * as regexpp from '@eslint-community/regexpp';\nimport { Backreference, CapturingGroup, RegExpLiteral } from '@eslint-community/regexpp/ast';\nimport {\n  getLhsVariable,\n  getUniqueWriteUsage,\n  getValueOfExpression,\n  getVariableFromName,\n  isDotNotation,\n  isIndexNotation,\n  isMethodCall,\n  isObjectDestructuring,\n  isRequiredParserServices,\n  isString,\n  LocationHolder,\n  RequiredParserServices,\n  toEncodedMessage,\n} from '../helpers';\nimport {\n  extractReferences,\n  getParsedRegex,\n  getRegexpLocation,\n  isStringRegexMethodCall,\n  isStringReplaceCall,\n} from '../helpers/regex';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\nimport { TSESTree } from '@typescript-eslint/utils';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n    const intellisense = new RegexIntelliSense(services, context);\n    return {\n      'Literal[regex]:exit': (literal: estree.Literal) => {\n        /* /regex/ */\n        intellisense.collectKnowledge(literal);\n      },\n      'NewExpression:exit': (newExpr: estree.NewExpression) => {\n        /* new RegExp(regex) */\n        intellisense.collectKnowledge(newExpr);\n      },\n      'CallExpression:exit': (callExpr: estree.CallExpression) => {\n        /* RegExp(regex), implicit regex e.g. str.match('regex') */\n        intellisense.collectKnowledge(callExpr);\n        /* str.match(pattern) / pattern.exec(str) */\n        intellisense.collectPatternMatcher(callExpr);\n        /* str.replace(pattern, substr) */\n        checkStringReplaceGroupReferences(callExpr, intellisense);\n      },\n      'MemberExpression:exit': (memberExpr: estree.MemberExpression) => {\n        if (memberExpr.computed) {\n          /* matcher[index] */\n          checkIndexBasedGroupReference(memberExpr, intellisense);\n        } else {\n          /* matcher.groups.<name> / matcher.indices.groups.<name> */\n          checkNonExistingGroupReference(memberExpr, intellisense);\n        }\n      },\n      'Program:exit': () => {\n        checkUnusedGroups(intellisense);\n        checkIndexedGroups(intellisense);\n      },\n    };\n  },\n};\n\nfunction checkStringReplaceGroupReferences(\n  callExpr: estree.CallExpression,\n  intellisense: RegexIntelliSense,\n) {\n  if (isStringReplaceCall(callExpr, intellisense.services)) {\n    const [pattern, substr] = callExpr.arguments;\n    const regex = intellisense.findRegex(pattern);\n    if (regex) {\n      const references = extractReferences(substr);\n      const indexes = new Set<number>();\n      const names = new Set<string>();\n      references.forEach(ref =>\n        isNaN(Number(ref.value)) ? names.add(ref.value) : indexes.add(Number(ref.value)),\n      );\n      regex.groups.forEach(group => {\n        group.used ||= names.has(group.name);\n        group.used ||= indexes.has(group.index);\n      });\n      const indexedGroups = regex.groups.filter(group => indexes.has(group.index));\n      if (indexedGroups.length > 0) {\n        const { locations, messages } = prepareSecondaries(\n          regex,\n          indexedGroups,\n          intellisense,\n          'Group',\n        );\n        intellisense.context.report({\n          message: toEncodedMessage(\n            `Directly use the group names instead of their numbers.`,\n            locations,\n            messages,\n          ),\n          node: substr,\n        });\n      }\n    }\n  }\n}\n\nfunction checkIndexBasedGroupReference(\n  memberExpr: estree.MemberExpression,\n  intellisense: RegexIntelliSense,\n) {\n  const { object: matcher, property } = memberExpr;\n  const regex = intellisense.resolve(matcher);\n  if (regex) {\n    const maybeIndex = getValueOfExpression(intellisense.context, property, 'Literal');\n    if (maybeIndex && typeof maybeIndex.value === 'number') {\n      const index = maybeIndex.value;\n      const group = regex.groups.find(grp => grp.index === index);\n      if (group) {\n        group.used = true;\n        const { locations, messages } = prepareSecondaries(regex, [group], intellisense, 'Group');\n        intellisense.context.report({\n          message: toEncodedMessage(\n            `Directly use '${group.name}' instead of its group number.`,\n            locations,\n            messages,\n          ),\n          node: property,\n        });\n      }\n    }\n  }\n}\n\nfunction checkNonExistingGroupReference(\n  memberExpr: estree.MemberExpression,\n  intellisense: RegexIntelliSense,\n) {\n  const { object: matcher } = memberExpr;\n  const regex = intellisense.resolve(matcher);\n  if (regex) {\n    /* matcher.groups.<name> / matcher.indices.groups.<name>  */\n    const groupNodes = extractGroupNodes(memberExpr, intellisense);\n    for (const groupNode of groupNodes) {\n      const groupName = groupNode.type === 'Identifier' ? groupNode.name : groupNode.value;\n      const group = regex.groups.find(grp => grp.name === groupName);\n      if (group) {\n        group.used = true;\n      } else {\n        const { locations, messages } = prepareSecondaries(\n          regex,\n          regex.groups,\n          intellisense,\n          'Named group',\n        );\n\n        intellisense.context.report({\n          message: toEncodedMessage(\n            `There is no group named '${groupName}' in the regular expression.`,\n            locations,\n            messages,\n          ),\n          node: groupNode,\n        });\n      }\n    }\n  }\n}\n\nfunction extractGroupNodes(memberExpr: estree.MemberExpression, intellisense: RegexIntelliSense) {\n  if (isDotNotation(memberExpr)) {\n    const { property } = memberExpr;\n    const ancestors = intellisense.context.sourceCode.getAncestors(memberExpr);\n    let parent = ancestors.pop();\n    while ((parent as TSESTree.Node).type === 'TSNonNullExpression') {\n      parent = ancestors.pop();\n    }\n    if (parent) {\n      switch (property.name) {\n        case 'groups':\n          /* matcher.groups.<name> or matcher.groups['name'] */\n          return extractNamedOrDestructuredGroupNodes(parent);\n        case 'indices':\n          /* matcher.indices.groups.<name> or matcher.indices.groups['name'] */\n          if (isDotNotation(parent) && parent.property.name === 'groups') {\n            parent = ancestors.pop();\n            if (parent) {\n              return extractNamedOrDestructuredGroupNodes(parent);\n            }\n          }\n      }\n    }\n  }\n  return [];\n}\n\nfunction extractNamedOrDestructuredGroupNodes(node: estree.Node) {\n  if (isDotNotation(node) || isIndexNotation(node)) {\n    /* matcher.groups.<name> or matcher.groups['name'] */\n    return [node.property];\n  } else if (isObjectDestructuring(node)) {\n    /* { <name1>,..<nameN> } = matcher.groups */\n    const destructuredGroups: estree.Identifier[] = [];\n    const pattern = node.type === 'VariableDeclarator' ? node.id : node.left;\n    for (const property of pattern.properties) {\n      if (property.type === 'Property' && property.key.type === 'Identifier') {\n        destructuredGroups.push(property.key);\n      }\n    }\n    return destructuredGroups;\n  } else {\n    return [];\n  }\n}\n\nfunction checkUnusedGroups(intellisense: RegexIntelliSense) {\n  intellisense.getKnowledge().forEach(regex => {\n    if (regex.matched) {\n      const unusedGroups = regex.groups.filter(group => !group.used);\n      if (unusedGroups.length) {\n        const { locations, messages } = prepareSecondaries(\n          regex,\n          unusedGroups,\n          intellisense,\n          'Named group',\n        );\n\n        intellisense.context.report({\n          message: toEncodedMessage(\n            'Use the named groups of this regex or remove the names.',\n            locations,\n            messages,\n          ),\n          node: regex.node,\n        });\n      }\n    }\n  });\n}\n\nfunction prepareSecondaries(\n  regex: RegexKnowledge,\n  groups: GroupKnowledge[],\n  intellisense: RegexIntelliSense,\n  label: string,\n) {\n  const locations: LocationHolder[] = [];\n  const messages: string[] = [];\n  for (const grp of groups) {\n    const loc: AST.SourceLocation | null = getRegexpLocation(\n      regex.node,\n      grp.node,\n      intellisense.context,\n    );\n    if (loc) {\n      locations.push({ loc });\n      messages.push(`${label} '${grp.name}'`);\n    }\n  }\n  return { locations, messages };\n}\n\nfunction checkIndexedGroups(intellisense: RegexIntelliSense) {\n  intellisense.getKnowledge().forEach(regex => {\n    regex.groups.forEach(group => {\n      const { locations, messages } = prepareSecondaries(regex, [group], intellisense, 'Group');\n\n      group.node.references.forEach(reference => {\n        const loc = getRegexpLocation(regex.node, reference, intellisense.context);\n        if (loc && typeof reference.ref === 'number') {\n          intellisense.context.report({\n            message: toEncodedMessage(\n              `Directly use '${group.name}' instead of its group number.`,\n              locations,\n              messages,\n            ),\n            loc,\n          });\n        }\n      });\n    });\n  });\n}\n\ninterface RegexKnowledge {\n  node: estree.Node;\n  regexp: RegExpLiteral;\n  groups: GroupKnowledge[];\n  matched: boolean;\n}\n\ninterface GroupKnowledge {\n  node: CapturingGroup;\n  name: string;\n  used: boolean;\n  index: number;\n}\n\nfunction makeRegexKnowledge(node: estree.Node, regexp: RegExpLiteral): RegexKnowledge {\n  const capturingGroups: CapturingGroup[] = [];\n  const backreferences: Backreference[] = [];\n  regexpp.visitRegExpAST(regexp, {\n    onBackreferenceEnter: reference => reference.resolved.name && backreferences.push(reference),\n    onCapturingGroupEnter: group => capturingGroups.push(group),\n  });\n  const groups: GroupKnowledge[] = [];\n  capturingGroups.forEach(\n    (group, index) =>\n      group.name && groups.push(makeGroupKnowledge(group, backreferences, index + 1)),\n  );\n  return { node, regexp, groups, matched: false };\n}\n\nfunction makeGroupKnowledge(\n  node: CapturingGroup,\n  backreferences: Backreference[],\n  index: number,\n): GroupKnowledge {\n  const name = node.name!;\n  const used = backreferences.some(backreference => backreference.resolved === node);\n  return { node, name, used, index };\n}\n\nclass RegexIntelliSense {\n  private readonly knowledge: RegexKnowledge[] = [];\n  private readonly bindings = new Map<Scope.Variable, RegexKnowledge>();\n\n  constructor(\n    readonly services: RequiredParserServices,\n    readonly context: Rule.RuleContext,\n  ) {}\n\n  getKnowledge() {\n    return this.knowledge;\n  }\n\n  collectKnowledge(node: estree.Node) {\n    let regexNode = node;\n    if (node.type === 'CallExpression' && isStringRegexMethodCall(node, this.services)) {\n      /* implicit regex */\n      regexNode = node.arguments[0];\n    }\n    const regex = getParsedRegex(regexNode, this.context);\n    if (regex !== null) {\n      this.knowledge.push(makeRegexKnowledge(regexNode, regex));\n    }\n  }\n\n  collectPatternMatcher(callExpr: estree.CallExpression) {\n    const { callee, arguments: args } = callExpr;\n    if (isMethodCall(callExpr) && args.length > 0) {\n      const target = (callee as estree.MemberExpression).object;\n      const matcher = getLhsVariable(this.context, callExpr);\n      if (matcher) {\n        const method = (callee as estree.MemberExpression).property as estree.Identifier;\n        if (isString(target, this.services) && ['match', 'matchAll'].includes(method.name)) {\n          /* str.match(pattern) */\n          const [pattern] = args;\n          this.bind(pattern, matcher);\n        } else if (method.name === 'exec' && isString(args[0], this.services)) {\n          /* pattern.exec(str) */\n          const pattern = target;\n          this.bind(pattern, matcher);\n        }\n      }\n    }\n  }\n\n  resolve(matcher: estree.Node): RegexKnowledge | null {\n    const variable = this.findVariable(matcher);\n    if (variable) {\n      return this.bindings.get(variable) ?? null;\n    } else {\n      return null;\n    }\n  }\n\n  findRegex(node: estree.Node): RegexKnowledge | undefined {\n    return this.findRegexRec(node, new Set<estree.Node>());\n  }\n\n  private findRegexRec(node: estree.Node, visited: Set<estree.Node>): RegexKnowledge | undefined {\n    if (!visited.has(node)) {\n      visited.add(node);\n      const variable = this.findVariable(node);\n      if (variable) {\n        const value = getUniqueWriteUsage(this.context, variable.name, node);\n        if (value) {\n          const regex = this.findRegexRec(value, visited);\n          if (regex) {\n            return regex;\n          }\n        }\n      }\n    }\n    return this.knowledge.find(regex => regex.node === node);\n  }\n\n  private bind(pattern: estree.Node, matcher: Scope.Variable) {\n    const regex = this.findRegex(pattern);\n    if (regex) {\n      regex.matched = true;\n      this.bindings.set(matcher, regex);\n    }\n  }\n\n  private findVariable(node: estree.Node) {\n    if (node.type === 'Identifier') {\n      return getVariableFromName(this.context, node.name, node);\n    }\n    return null;\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4830/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  getValueOfExpression,\n  getPropertyWithValue,\n  toEncodedMessage,\n  getFullyQualifiedName,\n} from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const MESSAGE = 'Enable server certificate validation on this SSL/TLS connection.';\n    const SECONDARY_MESSAGE = 'Set \"rejectUnauthorized\" to \"true\".';\n    function checkSensitiveArgument(\n      callExpression: estree.CallExpression,\n      sensitiveArgumentIndex: number,\n    ) {\n      if (callExpression.arguments.length < sensitiveArgumentIndex + 1) {\n        return;\n      }\n      const sensitiveArgument = callExpression.arguments[sensitiveArgumentIndex];\n      const secondaryLocations: estree.Node[] = [];\n      const secondaryMessages: (string | undefined)[] = [];\n      const argumentValue = getValueOfExpression(context, sensitiveArgument, 'ObjectExpression');\n      if (!argumentValue) {\n        return;\n      }\n      if (sensitiveArgument !== argumentValue) {\n        secondaryLocations.push(argumentValue);\n        secondaryMessages.push(undefined);\n      }\n      const unsafeRejectUnauthorizedConfiguration = getPropertyWithValue(\n        context,\n        argumentValue,\n        'rejectUnauthorized',\n        false,\n      );\n      if (unsafeRejectUnauthorizedConfiguration) {\n        secondaryLocations.push(unsafeRejectUnauthorizedConfiguration);\n        secondaryMessages.push(SECONDARY_MESSAGE);\n        context.report({\n          node: callExpression.callee,\n          message: toEncodedMessage(MESSAGE, secondaryLocations, secondaryMessages),\n        });\n      }\n    }\n\n    return {\n      CallExpression: (node: estree.Node) => {\n        const callExpression = node as estree.CallExpression;\n        const fqn = getFullyQualifiedName(context, callExpression);\n        if (fqn === 'https.request') {\n          checkSensitiveArgument(callExpression, 0);\n        }\n        if (fqn === 'request.get') {\n          checkSensitiveArgument(callExpression, 0);\n        }\n        if (fqn === 'tls.connect') {\n          checkSensitiveArgument(callExpression, 2);\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5667/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  getValueOfExpression,\n  getPropertyWithValue,\n  toEncodedMessage,\n  getFullyQualifiedName,\n  getProperty,\n} from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\nimport { childrenOf } from '../../linter';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    const MESSAGE = 'Enable server hostname verification on this SSL/TLS connection.';\n    const SECONDARY_MESSAGE = 'Set \"rejectUnauthorized\" to \"true\".';\n    function checkSensitiveArgument(\n      callExpression: estree.CallExpression,\n      sensitiveArgumentIndex: number,\n    ) {\n      if (callExpression.arguments.length < sensitiveArgumentIndex + 1) {\n        return;\n      }\n      const sensitiveArgument = callExpression.arguments[sensitiveArgumentIndex];\n      const secondaryLocations: estree.Node[] = [];\n      const secondaryMessages: (string | undefined)[] = [];\n      let shouldReport = false;\n      const argumentValue = getValueOfExpression(context, sensitiveArgument, 'ObjectExpression');\n      if (!argumentValue) {\n        return;\n      }\n      if (sensitiveArgument !== argumentValue) {\n        secondaryLocations.push(argumentValue);\n        secondaryMessages.push(undefined);\n      }\n      const unsafeRejectUnauthorizedConfiguration = getPropertyWithValue(\n        context,\n        argumentValue,\n        'rejectUnauthorized',\n        false,\n      );\n      if (unsafeRejectUnauthorizedConfiguration) {\n        secondaryLocations.push(unsafeRejectUnauthorizedConfiguration);\n        secondaryMessages.push(SECONDARY_MESSAGE);\n        shouldReport = true;\n      }\n      const checkServerIdentityProperty = getProperty(\n        argumentValue,\n        'checkServerIdentity',\n        context,\n      );\n      if (\n        checkServerIdentityProperty &&\n        shouldReportOnCheckServerIdentityCallBack(checkServerIdentityProperty)\n      ) {\n        secondaryLocations.push(checkServerIdentityProperty);\n        secondaryMessages.push(undefined);\n        shouldReport = true;\n      }\n      if (shouldReport) {\n        context.report({\n          node: callExpression.callee,\n          message: toEncodedMessage(MESSAGE, secondaryLocations, secondaryMessages),\n        });\n      }\n    }\n\n    function shouldReportOnCheckServerIdentityCallBack(\n      checkServerIdentityProperty: estree.Property,\n    ) {\n      let baseFunction: estree.BaseFunction | undefined;\n      baseFunction = getValueOfExpression(\n        context,\n        checkServerIdentityProperty.value,\n        'FunctionExpression',\n      );\n      if (!baseFunction) {\n        baseFunction = getValueOfExpression(\n          context,\n          checkServerIdentityProperty.value,\n          'ArrowFunctionExpression',\n        );\n      }\n      if (baseFunction?.body.type === 'BlockStatement') {\n        const returnStatements = ReturnStatementsVisitor.getReturnStatements(\n          baseFunction.body,\n          context,\n        );\n        if (\n          returnStatements.length === 0 ||\n          returnStatements.every(r => {\n            return (\n              !r.argument || getValueOfExpression(context, r.argument, 'Literal')?.value === true\n            );\n          })\n        ) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    return {\n      CallExpression: (node: estree.Node) => {\n        const callExpression = node as estree.CallExpression;\n        const fqn = getFullyQualifiedName(context, callExpression);\n        if (fqn === 'https.request') {\n          checkSensitiveArgument(callExpression, 0);\n        }\n        if (fqn === 'request.get') {\n          checkSensitiveArgument(callExpression, 0);\n        }\n        if (fqn === 'tls.connect') {\n          checkSensitiveArgument(callExpression, 2);\n        }\n      },\n    };\n  },\n};\n\nclass ReturnStatementsVisitor {\n  private readonly returnStatements: estree.ReturnStatement[] = [];\n\n  static getReturnStatements(node: estree.Node, context: Rule.RuleContext) {\n    const visitor = new ReturnStatementsVisitor();\n    visitor.visit(node, context);\n    return visitor.returnStatements;\n  }\n\n  private visit(root: estree.Node, context: Rule.RuleContext) {\n    const visitNode = (node: estree.Node) => {\n      switch (node.type) {\n        case 'ReturnStatement':\n          this.returnStatements.push(node);\n          break;\n        case 'FunctionDeclaration':\n        case 'FunctionExpression':\n        case 'ArrowFunctionExpression':\n          return;\n      }\n      childrenOf(node, context.sourceCode.visitorKeys).forEach(visitNode);\n    };\n    visitNode(root);\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3500/javascript\n\nimport { Rule, Scope } from 'eslint';\nimport * as estree from 'estree';\nimport { toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      'VariableDeclaration[kind=\"const\"]': (node: estree.Node) => {\n        context.sourceCode.getDeclaredVariables(node).forEach(variable =>\n          variable.references.filter(isModifyingReference).forEach(reference =>\n            context.report({\n              message: toEncodedMessage(\n                `Correct this attempt to modify \"${reference.identifier.name}\" or use \"let\" in its declaration.`,\n                [node],\n                ['Const declaration'],\n              ),\n              node: reference.identifier,\n            }),\n          ),\n        );\n      },\n    };\n  },\n};\n\nfunction isModifyingReference(\n  reference: Scope.Reference,\n  index: number,\n  references: Scope.Reference[],\n) {\n  const identifier = reference.identifier;\n  const modifyingDifferentIdentifier =\n    index === 0 || references[index - 1].identifier !== identifier;\n  return (\n    identifier && reference.init === false && reference.isWrite() && modifyingDifferentIdentifier\n  );\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2310/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { toEncodedMessage, getVariableFromName, resolveIdentifiers, getParent } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n\n  create(context: Rule.RuleContext) {\n    function checkLoop<T>(\n      updateNode: T,\n      extractCounters: (updateNode: T, counters: estree.Identifier[]) => void,\n      loopBody: estree.Node,\n    ) {\n      const counters: estree.Identifier[] = [];\n      extractCounters(updateNode, counters);\n      counters.forEach(counter => checkCounter(counter, loopBody as estree.BlockStatement));\n    }\n\n    function checkCounter(counter: estree.Identifier, block: estree.Node) {\n      const variable = getVariableFromName(context, counter.name, block);\n      if (!variable) {\n        return;\n      }\n      variable.references.forEach(ref => {\n        if (ref.isWrite() && isUsedInsideBody(ref.identifier, block)) {\n          context.report({\n            node: ref.identifier,\n            message: toEncodedMessage(\n              `Remove this assignment of \"${counter.name}\".`,\n              [counter as TSESTree.Node],\n              ['Counter variable update'],\n            ),\n          });\n        }\n      });\n    }\n\n    return {\n      'ForStatement > BlockStatement': (node: estree.Node) => {\n        const forLoop = getParent(context, node) as estree.ForStatement;\n        if (forLoop.update) {\n          checkLoop(forLoop.update, collectCountersFor, node);\n        }\n      },\n      'ForInStatement > BlockStatement, ForOfStatement > BlockStatement': (node: estree.Node) => {\n        const { left } = getParent(context, node) as estree.ForOfStatement | estree.ForInStatement;\n        checkLoop(left, collectCountersForX, node);\n      },\n    };\n  },\n};\n\nfunction collectCountersForX(\n  updateExpression: estree.Pattern | estree.VariableDeclaration,\n  counters: estree.Identifier[],\n) {\n  if (updateExpression.type === 'VariableDeclaration') {\n    updateExpression.declarations.forEach(decl => collectCountersForX(decl.id, counters));\n  } else {\n    resolveIdentifiers(updateExpression as TSESTree.Node, true).forEach(id => counters.push(id));\n  }\n}\n\nfunction collectCountersFor(updateExpression: estree.Expression, counters: estree.Identifier[]) {\n  let counter: estree.Node | null | undefined = undefined;\n\n  if (updateExpression.type === 'AssignmentExpression') {\n    counter = updateExpression.left;\n  } else if (updateExpression.type === 'UpdateExpression') {\n    counter = updateExpression.argument;\n  } else if (updateExpression.type === 'SequenceExpression') {\n    updateExpression.expressions.forEach(e => collectCountersFor(e, counters));\n  }\n\n  if (counter && counter.type === 'Identifier') {\n    counters.push(counter);\n  }\n}\n\nfunction isUsedInsideBody(id: estree.Identifier, loopBody: estree.Node) {\n  const bodyRange = loopBody.range;\n  return id.range && bodyRange && id.range[0] > bodyRange[0] && id.range[1] < bodyRange[1];\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2688/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isIdentifier, isMemberExpression, interceptReport } from '../helpers';\n\n// core implementation of this rule does not provide quick fixes\nexport function decorate(rule: Rule.RuleModule): Rule.RuleModule {\n  rule.meta!.hasSuggestions = true;\n  return interceptReport(rule, (context, reportDescriptor) => {\n    const suggest: Rule.SuggestionReportDescriptor[] = [];\n    const node = (reportDescriptor as any).node as estree.Node;\n    if (node.type === 'BinaryExpression') {\n      const { left, operator, right } = node;\n      let negate: boolean | null = null;\n      switch (operator) {\n        case '!=':\n        case '!==':\n          negate = true;\n          break;\n        case '==':\n        case '===':\n          negate = false;\n          break;\n      }\n      if (negate !== null) {\n        const arg = isNaNIdentifier(left) ? right : left;\n        const argText = context.sourceCode.getText(arg);\n        const prefix = negate ? '!' : '';\n        suggest.push(\n          {\n            desc: 'Use \"isNaN()\"',\n            fix: fixer => fixer.replaceText(node, `${prefix}isNaN(${argText})`),\n          },\n          {\n            desc: 'Use \"Number.isNaN()\"',\n            fix: fixer => fixer.replaceText(node, `${prefix}Number.isNaN(${argText})`),\n          },\n        );\n      }\n    }\n    context.report({ ...reportDescriptor, suggest });\n  });\n}\n\nfunction isNaNIdentifier(node: estree.Node) {\n  return isIdentifier(node, 'NaN') || isMemberExpression(node, 'Number', 'NaN');\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { eslintRules } from '../core';\nimport { decorate } from './decorator';\n\nexport const rule = decorate(eslintRules['use-isnan']);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4323/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { toEncodedMessage } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nconst TYPE_THRESHOLD = 2;\nconst USAGE_THRESHOLD = 2;\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    let usage: Map<string, TSESTree.Node[]>;\n    return {\n      Program: () => (usage = new Map<string, TSESTree.Node[]>()),\n      'Program:exit': () =>\n        usage.forEach(nodes => {\n          if (nodes.length > USAGE_THRESHOLD) {\n            const [node, ...rest] = nodes;\n            const kind = node.type === 'TSUnionType' ? 'union' : 'intersection';\n            const message = toEncodedMessage(\n              `Replace this ${kind} type with a type alias.`,\n              rest,\n              Array(rest.length).fill('Following occurrence.'),\n            );\n            context.report({ message, loc: node.loc });\n          }\n        }),\n      'TSUnionType, TSIntersectionType': (node: estree.Node) => {\n        const ancestors = context.sourceCode.getAncestors(node);\n        const declaration = ancestors.find(\n          ancestor => (ancestor as TSESTree.Node).type === 'TSTypeAliasDeclaration',\n        );\n        if (declaration) {\n          return;\n        }\n\n        const composite = node as unknown as TSESTree.TSUnionType | TSESTree.TSIntersectionType;\n        if (composite.types.length <= TYPE_THRESHOLD) {\n          return;\n        }\n\n        if (isNullableType(composite)) {\n          return;\n        }\n\n        const text = composite.types\n          .map(typeNode => context.sourceCode.getText(typeNode as unknown as estree.Node))\n          .sort((a, b) => a.localeCompare(b))\n          .join('|');\n        let occurrences = usage.get(text);\n        if (!occurrences) {\n          occurrences = [composite];\n          usage.set(text, occurrences);\n        } else {\n          occurrences.push(composite);\n        }\n      },\n    };\n\n    function isNullableType(node: TSESTree.TSUnionType | TSESTree.TSIntersectionType) {\n      return (\n        node.type === 'TSUnionType' &&\n        node.types.filter(\n          type => type.type !== 'TSNullKeyword' && type.type !== 'TSUndefinedKeyword',\n        ).length === 1\n      );\n    }\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S1154/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport * as ts from 'typescript';\nimport { isRequiredParserServices, getTypeFromTreeNode } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      uselessStringOp:\n        '{{symbol}} is an immutable object; you must either store or return the result of the operation.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n\n    function isString(node: estree.Node) {\n      const type = getTypeFromTreeNode(node, services);\n      return (type.flags & ts.TypeFlags.StringLike) !== 0;\n    }\n\n    function getVariable(node: estree.Node) {\n      let variable = context.sourceCode.getText(node);\n      if (variable.length > 30) {\n        variable = 'String';\n      }\n      return variable;\n    }\n\n    return {\n      'ExpressionStatement > CallExpression[callee.type=\"MemberExpression\"]': (\n        node: estree.Node,\n      ) => {\n        const { object, property } = (node as estree.CallExpression)\n          .callee as estree.MemberExpression;\n        if (isString(object) && property.type === 'Identifier') {\n          context.report({\n            messageId: 'uselessStringOp',\n            data: {\n              symbol: getVariable(object),\n            },\n            node: property,\n          });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3758/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport * as ts from 'typescript';\nimport {\n  isRequiredParserServices,\n  RequiredParserServices,\n  getTypeFromTreeNode,\n  isStringType,\n  isNumberType,\n  isBigIntType,\n} from '../helpers';\n\nconst comparisonOperators = new Set(['>', '<', '>=', '<=']);\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      reEvaluateDataFlow:\n        'Re-evaluate the data flow; this operand of a numeric comparison could be of type {{type}}.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services: RequiredParserServices = context.sourceCode.parserServices;\n\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n\n    return {\n      BinaryExpression(node: estree.Node) {\n        const { left, operator, right } = node as estree.BinaryExpression;\n        if (!comparisonOperators.has(operator)) {\n          return;\n        }\n        if (left.type === 'MemberExpression' || right.type === 'MemberExpression') {\n          // avoid FPs on field access\n          return;\n        }\n        const checker = services.program.getTypeChecker();\n        const leftType = getTypeFromTreeNode(left, services);\n        const rightType = getTypeFromTreeNode(right, services);\n        if (isStringType(leftType) || isStringType(rightType)) {\n          return;\n        }\n\n        const isLeftConvertibleToNumber = isConvertibleToNumber(leftType, checker);\n        const isRightConvertibleToNumber = isConvertibleToNumber(rightType, checker);\n        if (!isLeftConvertibleToNumber) {\n          context.report({\n            messageId: 'reEvaluateDataFlow',\n            data: {\n              type: checker.typeToString(leftType),\n            },\n            node: left,\n          });\n        }\n        if (!isRightConvertibleToNumber) {\n          context.report({\n            messageId: 'reEvaluateDataFlow',\n            data: {\n              type: checker.typeToString(rightType),\n            },\n            node: right,\n          });\n        }\n      },\n    };\n  },\n};\n\nfunction isConvertibleToNumber(typ: ts.Type, checker: ts.TypeChecker) {\n  const flags = typ.getFlags();\n  if ((flags & ts.TypeFlags.BooleanLike) !== 0) {\n    return true;\n  }\n  if ((flags & ts.TypeFlags.Undefined) !== 0) {\n    return false;\n  }\n  const valueOfSignatures = getValueOfSignatures(typ, checker);\n  return (\n    valueOfSignatures.length === 0 ||\n    valueOfSignatures.some(signature => {\n      const returnType = signature.getReturnType();\n      return isNumberType(returnType) || isBigIntType(returnType);\n    })\n  );\n}\n\nfunction getValueOfSignatures(typ: ts.Type, checker: ts.TypeChecker) {\n  const valueOfSymbol = typ.getProperty('valueOf');\n  if (!valueOfSymbol) {\n    return [];\n  }\n  const declarations = valueOfSymbol.getDeclarations() ?? [];\n  return declarations\n    .map(declaration => checker.getTypeAtLocation(declaration).getCallSignatures())\n    .reduce((result, decl) => result.concat(decl), []);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S117/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { resolveIdentifiers } from '../helpers';\nimport type { RuleModule } from '../../../../shared/src/types/rule';\n\ninterface FunctionLike {\n  declare?: boolean;\n  params: TSESTree.Parameter[];\n}\n\nexport type Options = [\n  {\n    format: string;\n  },\n];\n\nexport const rule: RuleModule<Options> = {\n  meta: {\n    messages: {\n      renameSymbol: `Rename this {{symbolType}} \"{{symbol}}\" to match the regular expression {{format}}.`,\n    },\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          format: {\n            type: 'string',\n          },\n        },\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      VariableDeclaration: (node: estree.Node) =>\n        checkVariable(node as TSESTree.VariableDeclaration, context),\n      'FunctionDeclaration, FunctionExpression, ArrowFunctionExpression, TSDeclareFunction, TSMethodSignature, TSConstructSignatureDeclaration, TSEmptyBodyFunctionExpression':\n        (node: estree.Node) => checkFunction(node as TSESTree.Node as FunctionLike, context),\n      PropertyDefinition: (node: estree.Node) =>\n        checkProperty(node as unknown as TSESTree.PropertyDefinition, context),\n      CatchClause: (node: estree.Node) => checkCatch(node as TSESTree.CatchClause, context),\n    };\n  },\n};\n\nfunction checkVariable(decl: TSESTree.VariableDeclaration, context: Rule.RuleContext) {\n  if (decl.declare) {\n    return;\n  }\n  decl.declarations.forEach(declaration =>\n    resolveIdentifiers(declaration.id).forEach(id =>\n      raiseOnInvalidIdentifier(id, 'local variable', context),\n    ),\n  );\n}\n\nfunction checkFunction(func: FunctionLike, context: Rule.RuleContext) {\n  if (func.declare) {\n    return;\n  }\n  func.params.forEach(param =>\n    resolveIdentifiers(param).forEach(id => raiseOnInvalidIdentifier(id, 'parameter', context)),\n  );\n}\n\nfunction checkProperty(prop: TSESTree.PropertyDefinition, context: Rule.RuleContext) {\n  if (prop.key.type === 'Identifier') {\n    raiseOnInvalidIdentifier(prop.key, 'property', context);\n  }\n}\n\nfunction checkCatch(catchh: TSESTree.CatchClause, context: Rule.RuleContext) {\n  if (catchh.param) {\n    resolveIdentifiers(catchh.param).forEach(id =>\n      raiseOnInvalidIdentifier(id, 'parameter', context),\n    );\n  }\n}\n\nfunction raiseOnInvalidIdentifier(\n  id: TSESTree.Identifier,\n  idType: string,\n  context: Rule.RuleContext,\n) {\n  const [{ format }] = context.options as Options;\n  const { name } = id;\n  if (!name.match(format)) {\n    context.report({\n      messageId: 'renameSymbol',\n      data: {\n        symbol: name,\n        symbolType: idType,\n        format,\n      },\n      node: id,\n    });\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S3735/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { isRequiredParserServices, isThenable } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      removeVoid: 'Remove this use of the \"void\" operator.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    function checkNode(node: estree.Node) {\n      const unaryExpression: estree.UnaryExpression = node as estree.UnaryExpression;\n      if (isVoid0(unaryExpression) || isIIFE(unaryExpression) || isPromiseLike(unaryExpression)) {\n        return;\n      }\n      const operatorToken = context.sourceCode.getTokenBefore(unaryExpression.argument);\n      context.report({\n        loc: operatorToken!.loc, // cannot be null due to previous checks\n        messageId: 'removeVoid',\n      });\n    }\n\n    function isVoid0(expr: estree.UnaryExpression) {\n      return expr.argument.type === 'Literal' && 0 === expr.argument.value;\n    }\n\n    function isIIFE(expr: estree.UnaryExpression) {\n      return (\n        expr.argument.type === 'CallExpression' &&\n        ['ArrowFunctionExpression', 'FunctionExpression'].includes(expr.argument.callee.type)\n      );\n    }\n\n    function isPromiseLike(expr: estree.UnaryExpression) {\n      return isRequiredParserServices(services) && isThenable(expr.argument, services);\n    }\n\n    return {\n      'UnaryExpression[operator=\"void\"]': checkNode,\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4423/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getProperty, getValueOfExpression, getFullyQualifiedName } from '../helpers';\n\nconst SECURE_PROTOCOL_ALLOWED_VALUES = [\n  'TLSv1_2_method',\n  'TLSv1_2_client_method',\n  'TLSv1_2_server_method',\n  'TLS_method',\n  'TLS_client_method',\n  'TLS_server_method',\n];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      useMinimumTLS: \"Change '{{option}}' to use at least TLS v1.2.\",\n      useSecureTLS: \"Change '{{option}}' to allow only secure TLS versions.\",\n      AWSApiGateway: 'Change this code to enforce TLS 1.2 or above.',\n      AWSOpenElasticSearch:\n        'Omitting \"tlsSecurityPolicy\" enables a deprecated version of TLS. Set it to enforce TLS 1.2 or above.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    function getValueOfProperty(\n      objectExpression: estree.ObjectExpression | undefined,\n      propertyName: string,\n    ) {\n      const unsafeProperty =\n        objectExpression && getProperty(objectExpression, propertyName, context);\n      if (unsafeProperty) {\n        return getValueOfExpression(context, unsafeProperty.value, 'Literal');\n      }\n      return undefined;\n    }\n\n    function checkMinMaxVersion(propertyName: string, property: estree.Literal | undefined) {\n      if (property && (property.value === 'TLSv1.1' || property.value === 'TLSv1')) {\n        context.report({\n          node: property,\n          messageId: 'useMinimumTLS',\n          data: {\n            option: propertyName,\n          },\n        });\n      }\n    }\n\n    function checkSslOptions(optionsNode: estree.Node | undefined) {\n      const options = getValueOfExpression(context, optionsNode, 'ObjectExpression');\n      const minVersion = getValueOfProperty(options, 'minVersion');\n      const maxVersion = getValueOfProperty(options, 'maxVersion');\n      checkMinMaxVersion('minVersion', minVersion);\n      checkMinMaxVersion('maxVersion', maxVersion);\n\n      const secureProtocol = getValueOfProperty(options, 'secureProtocol');\n      const secureProtocolValue = secureProtocol?.value?.toString() ?? '';\n      if (secureProtocol && !SECURE_PROTOCOL_ALLOWED_VALUES.includes(secureProtocolValue)) {\n        context.report({\n          node: secureProtocol,\n          messageId: 'useMinimumTLS',\n          data: {\n            option: 'secureProtocol',\n          },\n        });\n      }\n\n      const secureOptions = getProperty(options, 'secureOptions', context);\n      if (secureOptions && !isValidSecureOptions(secureOptions.value)) {\n        context.report({\n          node: secureOptions,\n          messageId: 'useSecureTLS',\n          data: {\n            option: 'secureOptions',\n          },\n        });\n      }\n    }\n\n    function isValidSecureOptions(options: estree.Node) {\n      const flags: string[] = [];\n      collectIdentifiersFromBinary(options, flags);\n      return (\n        flags[0] === null ||\n        (flags.includes('SSL_OP_NO_TLSv1') && flags.includes('SSL_OP_NO_TLSv1_1'))\n      );\n    }\n\n    function collectIdentifiersFromBinary(node: estree.Node, acc: (string | null)[]) {\n      if (node.type === 'BinaryExpression') {\n        collectIdentifiersFromBinary(node.left, acc);\n        collectIdentifiersFromBinary(node.right, acc);\n      } else if (\n        node.type === 'MemberExpression' &&\n        getFullyQualifiedName(context, node.object) === 'constants' &&\n        node.property.type === 'Identifier'\n      ) {\n        acc.push(node.property.name);\n      } else {\n        // if part of expression is some complex node like function call, we set null on index 0\n        acc[0] = null;\n      }\n    }\n\n    return {\n      CallExpression: (node: estree.Node) => {\n        const callExpression = node as estree.CallExpression;\n        const fqn = getFullyQualifiedName(context, callExpression);\n        // https://nodejs.org/api/https.html#https_https_get_options_callback\n        if (fqn === 'https.request') {\n          checkSslOptions(callExpression.arguments[0]);\n          checkSslOptions(callExpression.arguments[1]);\n        }\n        // https://github.com/request/request#tlsssl-protocol\n        if (fqn === 'request.get') {\n          checkSslOptions(callExpression.arguments[0]);\n        }\n        // https://nodejs.org/api/tls.html#tls_tls_connect_options_callback\n        if (fqn === 'tls.connect') {\n          checkSslOptions(callExpression.arguments[0]);\n          checkSslOptions(callExpression.arguments[1]);\n          checkSslOptions(callExpression.arguments[2]);\n        }\n        // https://nodejs.org/api/tls.html#tls_tls_createsecurecontext_options\n        if (fqn === 'tls.createSecureContext') {\n          checkSslOptions(callExpression.arguments[0]);\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4423/javascript\n\nimport { Rule } from 'eslint';\nimport { AwsCdkCheckArguments, AwsCdkTemplate } from '../helpers/aws/cdk';\n\nexport const rule: Rule.RuleModule = AwsCdkTemplate(\n  {\n    'aws_cdk_lib.aws_apigateway.CfnDomainName': AwsCdkCheckArguments(\n      'AWSApiGateway',\n      true,\n      'securityPolicy',\n      { primitives: { valid: ['TLS_1_2'] } },\n    ),\n    'aws_cdk_lib.aws_apigateway.DomainName': AwsCdkCheckArguments(\n      'AWSApiGateway',\n      false,\n      'securityPolicy',\n      { fqns: { valid: ['aws_cdk_lib.aws_apigateway.SecurityPolicy.TLS_1_2'] } },\n    ),\n    'aws_cdk_lib.aws_elasticsearch.CfnDomain': AwsCdkCheckArguments(\n      ['AWSOpenElasticSearch', 'enforceTLS12'],\n      true,\n      ['domainEndpointOptions', 'tlsSecurityPolicy'],\n      {\n        primitives: { valid: ['Policy-Min-TLS-1-2-2019-07'] },\n      },\n    ),\n    'aws_cdk_lib.aws_opensearchservice.Domain': AwsCdkCheckArguments(\n      ['AWSOpenElasticSearch', 'enforceTLS12'],\n      true,\n      'tlsSecurityPolicy',\n      {\n        fqns: { valid: ['aws_cdk_lib.aws_opensearchservice.TLSSecurityPolicy.TLS_1_2'] },\n      },\n    ),\n    'aws_cdk_lib.aws_opensearchservice.CfnDomain': AwsCdkCheckArguments(\n      ['AWSOpenElasticSearch', 'enforceTLS12'],\n      true,\n      ['domainEndpointOptions', 'tlsSecurityPolicy'],\n      {\n        primitives: { valid: ['Policy-Min-TLS-1-2-2019-07'] },\n      },\n    ),\n    'aws_cdk_lib.aws_elasticsearch.Domain': AwsCdkCheckArguments(\n      ['AWSOpenElasticSearch', 'enforceTLS12'],\n      true,\n      'tlsSecurityPolicy',\n      {\n        fqns: { valid: ['aws_cdk_lib.aws_elasticsearch.TLSSecurityPolicy.TLS_1_2'] },\n      },\n    ),\n  },\n  {\n    meta: {\n      messages: {\n        enforceTLS12: 'Change this code to enforce TLS 1.2 or above.',\n        AWSApiGateway: 'Change this code to enforce TLS 1.2 or above.',\n        AWSOpenElasticSearch:\n          'Omitting \"tlsSecurityPolicy\" enables a deprecated version of TLS. Set it to enforce TLS 1.2 or above.',\n      },\n    },\n  },\n);\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4423/javascript\n\nimport { Rule } from 'eslint';\nimport { rule as librariesRule } from './rule.lib';\nimport { rule as awsRule } from './rule.aws';\nimport { mergeRules } from '../helpers';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: { ...librariesRule.meta!.messages, ...awsRule.meta!.messages },\n  },\n  create(context: Rule.RuleContext) {\n    return mergeRules(librariesRule.create(context), awsRule.create(context));\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2817/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  isIdentifier,\n  isRequiredParserServices,\n  getSymbolAtLocation,\n  getTypeAsString,\n} from '../helpers';\n\nconst OPEN_DATABASE = 'openDatabase';\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      convertWebSQLUse: 'Convert this use of a Web SQL database to another technology.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    const services = context.sourceCode.parserServices;\n    if (!isRequiredParserServices(services)) {\n      return {};\n    }\n    return {\n      CallExpression: (node: estree.Node) => {\n        const callExpression = node as estree.CallExpression;\n        const { callee } = callExpression;\n        const symbol = getSymbolAtLocation(callee, services);\n        if (!!symbol) {\n          return;\n        }\n        if (isIdentifier(callee, OPEN_DATABASE)) {\n          context.report({ node: callee, messageId: 'convertWebSQLUse' });\n        }\n        if (callee.type !== 'MemberExpression' || !isIdentifier(callee.property, OPEN_DATABASE)) {\n          return;\n        }\n        const typeName = getTypeAsString(callee.object, services);\n        if (typeName.match(/window/i) || typeName.match(/globalThis/i)) {\n          context.report({ node: callee, messageId: 'convertWebSQLUse' });\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S5689/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { Express, isMethodInvocation, getFullyQualifiedName } from '../helpers';\n\nconst HELMET = 'helmet';\nconst HIDE_POWERED_BY = 'hide-powered-by';\nconst HEADER_X_POWERED_BY = 'X-Powered-By'.toLowerCase();\nconst PROTECTING_MIDDLEWARES = [HELMET, HIDE_POWERED_BY];\n/** Expected number of arguments in `app.set`. */\nconst APP_SET_NUM_ARGS = 2;\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      headerSet: 'Make sure disclosing the fingerprinting of this web technology is safe here.',\n      headerDefault:\n        'This framework implicitly discloses version information by default. Make sure it is safe here.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    let appInstantiation: estree.Identifier | null = null;\n    let isSafe = false;\n    let isExplicitelyUnsafe = false;\n    return {\n      Program() {\n        appInstantiation = null;\n        isSafe = false;\n        isExplicitelyUnsafe = true;\n      },\n      CallExpression: (node: estree.Node) => {\n        if (!isSafe && appInstantiation) {\n          const callExpr = node as estree.CallExpression;\n          isSafe =\n            Express.isUsingMiddleware(context, callExpr, appInstantiation, isProtecting(context)) ||\n            isDisabledXPoweredBy(callExpr, appInstantiation) ||\n            isSetFalseXPoweredBy(callExpr, appInstantiation) ||\n            isAppEscaping(callExpr, appInstantiation);\n          isExplicitelyUnsafe = isSetTrueXPoweredBy(callExpr, appInstantiation);\n        }\n      },\n      VariableDeclarator: (node: estree.Node) => {\n        if (!isSafe && !appInstantiation) {\n          const varDecl = node as estree.VariableDeclarator;\n          const app = Express.attemptFindAppInstantiation(varDecl, context);\n          if (app) {\n            appInstantiation = app;\n          }\n        }\n      },\n      ReturnStatement: (node: estree.Node) => {\n        if (!isSafe && appInstantiation) {\n          const ret = node as estree.ReturnStatement;\n          isSafe = isAppEscapingThroughReturn(ret, appInstantiation);\n        }\n      },\n      'Program:exit'() {\n        if (!isSafe && appInstantiation) {\n          let messageId = 'headerDefault';\n          if (isExplicitelyUnsafe) {\n            messageId = 'headerSet';\n          }\n          context.report({\n            node: appInstantiation,\n            messageId,\n          });\n        }\n      },\n    };\n  },\n};\n\n/**\n * Checks whether node looks like `helmet.hidePoweredBy()`.\n */\nfunction isHidePoweredByFromHelmet(context: Rule.RuleContext, n: estree.Node): boolean {\n  if (n.type === 'CallExpression') {\n    return getFullyQualifiedName(context, n) === `${HELMET}.hidePoweredBy`;\n  }\n  return false;\n}\n\nfunction isProtecting(context: Rule.RuleContext): (n: estree.Node) => boolean {\n  return (n: estree.Node) =>\n    Express.isMiddlewareInstance(context, PROTECTING_MIDDLEWARES, n) ||\n    isHidePoweredByFromHelmet(context, n);\n}\n\nfunction isDisabledXPoweredBy(\n  callExpression: estree.CallExpression,\n  app: estree.Identifier,\n): boolean {\n  if (isMethodInvocation(callExpression, app.name, 'disable', 1)) {\n    const arg0 = callExpression.arguments[0];\n    return arg0.type === 'Literal' && String(arg0.value).toLowerCase() === HEADER_X_POWERED_BY;\n  }\n  return false;\n}\n\nfunction isSetFalseXPoweredBy(\n  callExpression: estree.CallExpression,\n  app: estree.Identifier,\n): boolean {\n  return getSetTrueXPoweredByValue(callExpression, app) === false;\n}\n\nfunction isSetTrueXPoweredBy(\n  callExpression: estree.CallExpression,\n  app: estree.Identifier,\n): boolean {\n  return getSetTrueXPoweredByValue(callExpression, app) === true;\n}\n\nfunction getSetTrueXPoweredByValue(callExpression: estree.CallExpression, app: estree.Identifier) {\n  if (isMethodInvocation(callExpression, app.name, 'set', APP_SET_NUM_ARGS)) {\n    const [headerName, onOff] = callExpression.arguments;\n    if (\n      headerName.type === 'Literal' &&\n      String(headerName.value).toLowerCase() === HEADER_X_POWERED_BY &&\n      onOff.type === 'Literal'\n    ) {\n      return onOff.value;\n    }\n  }\n  return undefined;\n}\n\nfunction isAppEscaping(callExpr: estree.CallExpression, app: estree.Identifier): boolean {\n  return Boolean(\n    callExpr.arguments.find(arg => arg.type === 'Identifier' && arg.name === app.name),\n  );\n}\n\nfunction isAppEscapingThroughReturn(ret: estree.ReturnStatement, app: estree.Identifier): boolean {\n  const arg = ret.argument;\n  return Boolean(arg && arg.type === 'Identifier' && arg.name === app.name);\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S2755/javascript\n\nimport { TSESTree } from '@typescript-eslint/utils';\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport { getProperty, toEncodedMessage, getFullyQualifiedName } from '../helpers';\nimport { SONAR_RUNTIME } from '../../linter/parameters';\n\nconst XML_LIBRARY = 'libxmljs';\nconst XML_PARSERS = ['parseXml', 'parseXmlString'];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    schema: [\n      {\n        // internal parameter for rules having secondary locations\n        enum: [SONAR_RUNTIME],\n      },\n    ],\n  },\n  create(context: Rule.RuleContext) {\n    function isXmlParserCall(call: estree.CallExpression) {\n      const fqn = getFullyQualifiedName(context, call);\n      return XML_PARSERS.some(parser => fqn === `${XML_LIBRARY}.${parser}`);\n    }\n\n    function isNoEntSet(property: estree.Property) {\n      return property.value.type === 'Literal' && property.value.raw === 'true';\n    }\n\n    return {\n      CallExpression: (node: estree.Node) => {\n        const call = node as estree.CallExpression;\n        if (isXmlParserCall(call)) {\n          const noent = getProperty(call.arguments[1], 'noent', context);\n          if (noent && isNoEntSet(noent)) {\n            context.report({\n              message: toEncodedMessage('Disable access to external entities in XML parsing.', [\n                call.callee as TSESTree.Node,\n              ]),\n              node: noent,\n            });\n          }\n        }\n      },\n    };\n  },\n};\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// https://sonarsource.github.io/rspec/#/rspec/S4817/javascript\n\nimport { Rule } from 'eslint';\nimport * as estree from 'estree';\nimport {\n  isMemberExpression,\n  isMemberWithProperty,\n  isLiteral,\n  getFullyQualifiedName,\n} from '../helpers';\n\nconst xpathModule = 'xpath';\n\nconst xpathEvalMethods = ['select', 'select1', 'evaluate'];\nconst ieEvalMethods = ['selectNodes', 'SelectSingleNode'];\n\nexport const rule: Rule.RuleModule = {\n  meta: {\n    messages: {\n      checkXPath: 'Make sure that executing this XPATH expression is safe.',\n    },\n  },\n  create(context: Rule.RuleContext) {\n    return {\n      MemberExpression: (node: estree.Node) => {\n        if (isMemberExpression(node, 'document', 'evaluate')) {\n          context.report({ messageId: 'checkXPath', node });\n        }\n      },\n      CallExpression: (node: estree.Node) =>\n        checkCallExpression(node as estree.CallExpression, context),\n    };\n  },\n};\n\nfunction checkCallExpression(\n  { callee, arguments: args }: estree.CallExpression,\n  context: Rule.RuleContext,\n) {\n  if (args.length > 0 && isLiteral(args[0])) {\n    return;\n  }\n\n  // IE\n  if (isMemberWithProperty(callee, ...ieEvalMethods) && args.length === 1) {\n    context.report({ messageId: 'checkXPath', node: callee });\n    return;\n  }\n\n  // Document.evaluate\n  if (\n    isMemberWithProperty(callee, 'evaluate') &&\n    !isMemberExpression(callee, 'document', 'evaluate') &&\n    args.length >= 4\n  ) {\n    const resultTypeArgument = args[3];\n    const argumentAsText = context.sourceCode.getText(resultTypeArgument);\n    if (argumentAsText.includes('XPathResult')) {\n      context.report({ messageId: 'checkXPath', node: callee });\n      return;\n    }\n  }\n\n  // \"xpath\" module\n  const fqn = getFullyQualifiedName(context, callee);\n  if (xpathEvalMethods.some(method => fqn === `${xpathModule}.${method}`)) {\n    context.report({ messageId: 'checkXPath', node: callee });\n  }\n}\n","/*\n * SonarQube JavaScript Plugin\n * Copyright (C) 2011-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Rule } from 'eslint';\n\nimport { rule as S2376 } from './S2376'; // accessor-pairs\nimport { rule as S1077 } from './S1077'; // alt-text\nimport { rule as S6827 } from './S6827'; // anchor-has-content\nimport { rule as S6844 } from './S6844'; // anchor-is-valid\nimport { rule as S5850 } from './S5850'; // anchor-precedence\nimport { rule as S3782 } from './S3782'; // argument-type\nimport { rule as S2234 } from './S2234'; // arguments-order\nimport { rule as S3513 } from './S3513'; // arguments-usage\nimport { rule as S3796 } from './S3796'; // array-callback-without-return\nimport { rule as S1528 } from './S1528'; // array-constructor\nimport { rule as S3524 } from './S3524'; // arrow-function-convention\nimport { rule as S2699 } from './S2699'; // assertions-in-tests\nimport { rule as S6333 } from './S6333'; // aws-apigateway-public-api\nimport { rule as S6329 } from './S6329'; // aws-ec2-rds-dms-public\nimport { rule as S6275 } from './S6275'; // aws-ec2-unencrypted-ebs-volume\nimport { rule as S6332 } from './S6332'; // aws-efs-unencrypted\nimport { rule as S6302 } from './S6302'; // aws-iam-all-privileges\nimport { rule as S6304 } from './S6304'; // aws-iam-all-resources-accessible\nimport { rule as S6317 } from './S6317'; // aws-iam-privilege-escalation\nimport { rule as S6270 } from './S6270'; // aws-iam-public-access\nimport { rule as S6308 } from './S6308'; // aws-opensearchservice-domain\nimport { rule as S6303 } from './S6303'; // aws-rds-unencrypted-databases\nimport { rule as S6321 } from './S6321'; // aws-restricted-ip-admin-access\nimport { rule as S6265 } from './S6265'; // aws-s3-bucket-granted-access\nimport { rule as S6249 } from './S6249'; // aws-s3-bucket-insecure-http\nimport { rule as S6281 } from './S6281'; // aws-s3-bucket-public-access\nimport { rule as S6245 } from './S6245'; // aws-s3-bucket-server-encryption\nimport { rule as S6252 } from './S6252'; // aws-s3-bucket-versioning\nimport { rule as S6319 } from './S6319'; // aws-sagemaker-unencrypted-notebook\nimport { rule as S6327 } from './S6327'; // aws-sns-unencrypted-topics\nimport { rule as S6330 } from './S6330'; // aws-sqs-unencrypted-queue\nimport { rule as S1529 } from './S1529'; // bitwise-operators\nimport { rule as S4798 } from './S4798'; // bool-param-default\nimport { rule as S1105 } from './S1105'; // brace-style\nimport { rule as S1472 } from './S1472'; // call-argument-line\nimport { rule as S5742 } from './S5742'; // certificate-transparency\nimport { rule as S6092 } from './S6092'; // chai-determinate-assertion\nimport { rule as S101 } from './S101'; // class-name\nimport { rule as S3525 } from './S3525'; // class-prototype\nimport { rule as S1523 } from './S1523'; // code-eval\nimport { rule as S3616 } from './S3616'; // comma-or-logical-or-case\nimport { rule as S124 } from './S124'; // comment-regex\nimport { rule as S6353 } from './S6353'; // concise-regex\nimport { rule as S3973 } from './S3973'; // conditional-indentation\nimport { rule as S5757 } from './S5757'; // confidential-information-logging\nimport { rule as S1848 } from './S1848'; // constructor-for-side-effects\nimport { rule as S5693 } from './S5693'; // content-length\nimport { rule as S5728 } from './S5728'; // content-security-policy\nimport { rule as S3330 } from './S3330'; // cookie-no-httponly\nimport { rule as S2255 } from './S2255'; // cookies\nimport { rule as S5122 } from './S5122'; // cors\nimport { rule as S4502 } from './S4502'; // csrf\nimport { rule as S1541 } from './S1541'; // cyclomatic-complexity\nimport { rule as S3798 } from './S3798'; // declarations-in-global-scope\nimport { rule as S1788 } from './S1788'; // default-param-last\nimport { rule as S1874 } from './S1874'; // deprecation\nimport { rule as S3514 } from './S3514'; // destructuring-assignment-syntax\nimport { rule as S3403 } from './S3403'; // different-types-comparison\nimport { rule as S5247 } from './S5247'; // disabled-auto-escaping\nimport { rule as S5725 } from './S5725'; // disabled-resource-integrity\nimport { rule as S6080 } from './S6080'; // disabled-timeout\nimport { rule as S5743 } from './S5743'; // dns-prefetching\nimport { rule as S5869 } from './S5869'; // duplicates-in-character-class\nimport { rule as S5842 } from './S5842'; // empty-string-repetition\nimport { rule as S4787 } from './S4787'; // encryption\nimport { rule as S5542 } from './S5542'; // encryption-secure-mode\nimport { rule as S3723 } from './S3723'; // enforce-trailing-comma\nimport { rule as S6328 } from './S6328'; // existing-groups\nimport { rule as S1067 } from './S1067'; // expression-complexity\nimport { rule as S1451 } from './S1451'; // file-header\nimport { rule as S3317 } from './S3317'; // file-name-differ-from-class\nimport { rule as S2612 } from './S2612'; // file-permissions\nimport { rule as S2598 } from './S2598'; // file-uploads\nimport { rule as S1134 } from './S1134'; // fixme-tag\nimport { rule as S1535 } from './S1535'; // for-in\nimport { rule as S2251 } from './S2251'; // for-loop-increment-sign\nimport { rule as S5732 } from './S5732'; // frame-ancestors\nimport { rule as S1515 } from './S1515'; // function-inside-loop\nimport { rule as S100 } from './S100'; // function-name\nimport { rule as S3800 } from './S3800'; // function-return-type\nimport { rule as S1527 } from './S1527'; // future-reserved-words\nimport { rule as S3531 } from './S3531'; // generator-without-yield\nimport { rule as S4790 } from './S4790'; // hashing\nimport { rule as S5691 } from './S5691'; // hidden-files\nimport { rule as S6754 } from './S6754'; // hook-use-state\nimport { rule as S5254 } from './S5254'; // html-has-lang\nimport { rule as S3785 } from './S3785'; // in-operator-type-error\nimport { rule as S3686 } from './S3686'; // inconsistent-function-call\nimport { rule as S2692 } from './S2692'; // index-of-compare-to-positive-number\nimport { rule as S2092 } from './S2092'; // insecure-cookie\nimport { rule as S5659 } from './S5659'; // insecure-jwt-token\nimport { rule as S3415 } from './S3415'; // inverted-assertion-arguments\nimport { rule as S6477 } from './S6477'; // jsx-key\nimport { rule as S6481 } from './S6481'; // jsx-no-constructed-context-values\nimport { rule as S6749 } from './S6749'; // jsx-no-useless-fragment\nimport { rule as S6853 } from './S6853'; // label-has-associated-control\nimport { rule as S1439 } from './S1439'; // label-position\nimport { rule as S5148 } from './S5148'; // link-with-target-blank\nimport { rule as S4622 } from './S4622'; // max-union-size\nimport { rule as S4084 } from './S4084'; // media-has-caption\nimport { rule as S1994 } from './S1994'; // misplaced-loop-counter\nimport { rule as S1082 } from './S1082'; // mouse-events-a11y\nimport { rule as S134 } from './S134'; // nested-control-flow\nimport { rule as S2430 } from './S2430'; // new-cap\nimport { rule as S2999 } from './S2999'; // new-operator-misuse\nimport { rule as S4275 } from './S4275'; // no-accessor-field-mismatch\nimport { rule as S2871 } from './S2871'; // no-alphabetical-sort\nimport { rule as S6268 } from './S6268'; // no-angular-bypass-sanitization\nimport { rule as S2870 } from './S2870'; // no-array-delete\nimport { rule as S6479 } from './S6479'; // no-array-index-key\nimport { rule as S3579 } from './S3579'; // no-associative-arrays\nimport { rule as S6551 } from './S6551'; // no-base-to-string\nimport { rule as S2424 } from './S2424'; // no-built-in-override\nimport { rule as S1219 } from './S1219'; // no-case-label-in-switch\nimport { rule as S5332 } from './S5332'; // no-clear-text-protocols\nimport { rule as S6079 } from './S6079'; // no-code-after-done\nimport { rule as S125 } from './S125'; // no-commented-code\nimport { rule as S1854 } from './S1854'; // no-dead-store\nimport { rule as S3001 } from './S3001'; // no-delete-var\nimport { rule as S6957 } from './S6957'; // no-deprecated-react\nimport { rule as S4621 } from './S4621'; // no-duplicate-in-composite\nimport { rule as S108 } from './S108'; // no-empty\nimport { rule as S6019 } from './S6019'; // no-empty-after-reluctant\nimport { rule as S6323 } from './S6323'; // no-empty-alternatives\nimport { rule as S1186 } from './S1186'; // no-empty-function\nimport { rule as S6331 } from './S6331'; // no-empty-group\nimport { rule as S4023 } from './S4023'; // no-empty-interface\nimport { rule as S2187 } from './S2187'; // no-empty-test-file\nimport { rule as S888 } from './S888'; // no-equals-in-for-termination\nimport { rule as S6426 } from './S6426'; // no-exclusive-tests\nimport { rule as S6643 } from './S6643'; // no-extend-native\nimport { rule as S1116 } from './S1116'; // no-extra-semi\nimport { rule as S6788 } from './S6788'; // no-find-dom-node\nimport { rule as S4139 } from './S4139'; // no-for-in-iterable\nimport { rule as S1530 } from './S1530'; // no-function-declaration-in-block\nimport { rule as S2990 } from './S2990'; // no-global-this\nimport { rule as S2137 } from './S2137'; // no-globals-shadowing\nimport { rule as S2068 } from './S2068'; // no-hardcoded-credentials\nimport { rule as S1313 } from './S1313'; // no-hardcoded-ip\nimport { rule as S6442 } from './S6442'; // no-hook-setter-in-body\nimport { rule as S2486 } from './S2486'; // no-ignored-exceptions\nimport { rule as S4328 } from './S4328'; // no-implicit-dependencies\nimport { rule as S2703 } from './S2703'; // no-implicit-global\nimport { rule as S4619 } from './S4619'; // no-in-misuse\nimport { rule as S2970 } from './S2970'; // no-incomplete-assertions\nimport { rule as S3801 } from './S3801'; // no-inconsistent-returns\nimport { rule as S3402 } from './S3402'; // no-incorrect-string-concat\nimport { rule as S2189 } from './S2189'; // no-infinite-loop\nimport { rule as S5604 } from './S5604'; // no-intrusive-permissions\nimport { rule as S4123 } from './S4123'; // no-invalid-await\nimport { rule as S3516 } from './S3516'; // no-invariant-returns\nimport { rule as S5759 } from './S5759'; // no-ip-forward\nimport { rule as S1119 } from './S1119'; // no-labels\nimport { rule as S6958 } from './S6958'; // no-literal-call\nimport { rule as S6660 } from './S6660'; // no-lonely-if\nimport { rule as S5734 } from './S5734'; // no-mime-sniff\nimport { rule as S4043 } from './S4043'; // no-misleading-array-reverse\nimport { rule as S6544 } from './S6544'; // no-misused-promises\nimport { rule as S5730 } from './S5730'; // no-mixed-content\nimport { rule as S1121 } from './S1121'; // no-nested-assignment\nimport { rule as S3358 } from './S3358'; // no-nested-conditional\nimport { rule as S2004 } from './S2004'; // no-nested-functions\nimport { rule as S881 } from './S881'; // no-nested-incdec\nimport { rule as S4036 } from './S4036'; // no-os-command-from-path\nimport { rule as S1226 } from './S1226'; // no-parameter-reassignment\nimport { rule as S1533 } from './S1533'; // no-primitive-wrappers\nimport { rule as S2814 } from './S2814'; // no-redeclare\nimport { rule as S4165 } from './S4165'; // no-redundant-assignments\nimport { rule as S4782 } from './S4782'; // no-redundant-optional\nimport { rule as S1110 } from './S1110'; // no-redundant-parentheses\nimport { rule as S6571 } from './S6571'; // no-redundant-type-constituents\nimport { rule as S3827 } from './S3827'; // no-reference-error\nimport { rule as S5736 } from './S5736'; // no-referrer-policy\nimport { rule as S3533 } from './S3533'; // no-require-or-define\nimport { rule as S4324 } from './S4324'; // no-return-type-any\nimport { rule as S5863 } from './S5863'; // no-same-argument-assert\nimport { rule as S6679 } from './S6679'; // no-self-compare\nimport { rule as S105 } from './S105'; // no-tab\nimport { rule as S5257 } from './S5257'; // no-table-as-layout\nimport { rule as S4327 } from './S4327'; // no-this-alias\nimport { rule as S3696 } from './S3696'; // no-throw-literal\nimport { rule as S4822 } from './S4822'; // no-try-promise\nimport { rule as S4623 } from './S4623'; // no-undefined-argument\nimport { rule as S2138 } from './S2138'; // no-undefined-assignment\nimport { rule as S2681 } from './S2681'; // no-unenclosed-multiline-block\nimport { rule as S6486 } from './S6486'; // no-uniq-key\nimport { rule as S6747 } from './S6747'; // no-unknown-property\nimport { rule as S1763 } from './S1763'; // no-unreachable\nimport { rule as S6791 } from './S6791'; // no-unsafe\nimport { rule as S5042 } from './S5042'; // no-unsafe-unzip\nimport { rule as S6478 } from './S6478'; // no-unstable-nested-components\nimport { rule as S3984 } from './S3984'; // no-unthrown-error\nimport { rule as S905 } from './S905'; // no-unused-expressions\nimport { rule as S1172 } from './S1172'; // no-unused-function-argument\nimport { rule as S1068 } from './S1068'; // no-unused-private-class-members\nimport { rule as S6676 } from './S6676'; // no-useless-call\nimport { rule as S6647 } from './S6647'; // no-useless-constructor\nimport { rule as S2123 } from './S2123'; // no-useless-increment\nimport { rule as S4335 } from './S4335'; // no-useless-intersection\nimport { rule as S6443 } from './S6443'; // no-useless-react-setstate\nimport { rule as S3504 } from './S3504'; // no-var\nimport { rule as S1526 } from './S1526'; // no-variable-usage-before-declaration\nimport { rule as S6299 } from './S6299'; // no-vue-bypass-sanitization\nimport { rule as S5547 } from './S5547'; // no-weak-cipher\nimport { rule as S4426 } from './S4426'; // no-weak-keys\nimport { rule as S2208 } from './S2208'; // no-wildcard-import\nimport { rule as S3760 } from './S3760'; // non-number-in-arithmetic-expression\nimport { rule as S2259 } from './S2259'; // null-dereference\nimport { rule as S5264 } from './S5264'; // object-alt-content\nimport { rule as S3498 } from './S3498'; // object-shorthand\nimport { rule as S3757 } from './S3757'; // operation-returning-nan\nimport { rule as S4721 } from './S4721'; // os-command\nimport { rule as S2819 } from './S2819'; // post-message\nimport { rule as S4524 } from './S4524'; // prefer-default-last\nimport { rule as S6572 } from './S6572'; // prefer-enum-initializers\nimport { rule as S4138 } from './S4138'; // prefer-for-of\nimport { rule as S6598 } from './S6598'; // prefer-function-type\nimport { rule as S4156 } from './S4156'; // prefer-namespace-keyword\nimport { rule as S6606 } from './S6606'; // prefer-nullish-coalescing\nimport { rule as S6661 } from './S6661'; // prefer-object-spread\nimport { rule as S4634 } from './S4634'; // prefer-promise-shorthand\nimport { rule as S6666 } from './S6666'; // prefer-spread\nimport { rule as S6557 } from './S6557'; // prefer-string-starts-ends-with\nimport { rule as S3512 } from './S3512'; // prefer-template\nimport { rule as S4322 } from './S4322'; // prefer-type-guard\nimport { rule as S4823 } from './S4823'; // process-argv\nimport { rule as S4507 } from './S4507'; // production-debug\nimport { rule as S2245 } from './S2245'; // pseudo-random\nimport { rule as S1444 } from './S1444'; // public-static-readonly\nimport { rule as S5443 } from './S5443'; // publicly-writable-directories\nimport { rule as S6959 } from './S6959'; // reduce-initial-value\nimport { rule as S6564 } from './S6564'; // redundant-type-aliases\nimport { rule as S5843 } from './S5843'; // regex-complexity\nimport { rule as S4784 } from './S4784'; // regular-expr\nimport { rule as S6440 } from './S6440'; // rules-of-hooks\nimport { rule as S1438 } from './S1438'; // semi\nimport { rule as S5876 } from './S5876'; // session-regeneration\nimport { rule as S3499 } from './S3499'; // shorthand-property-grouping\nimport { rule as S6397 } from './S6397'; // single-char-in-character-classes\nimport { rule as S6035 } from './S6035'; // single-character-alternation\nimport { rule as S5852 } from './S5852'; // slow-regex\nimport { rule as S4818 } from './S4818'; // sockets\nimport { rule as S2392 } from './S2392'; // sonar-block-scoped-var\nimport { rule as S6439 } from './S6439'; // sonar-jsx-no-leaked-render\nimport { rule as S104 } from './S104'; // sonar-max-lines\nimport { rule as S138 } from './S138'; // sonar-max-lines-per-function\nimport { rule as S107 } from './S107'; // sonar-max-params\nimport { rule as S6324 } from './S6324'; // sonar-no-control-regex\nimport { rule as S1534 } from './S1534'; // sonar-no-dupe-keys\nimport { rule as S2639 } from './S2639'; // sonar-no-empty-character-class\nimport { rule as S128 } from './S128'; // sonar-no-fallthrough\nimport { rule as S5856 } from './S5856'; // sonar-no-invalid-regexp\nimport { rule as S109 } from './S109'; // sonar-no-magic-numbers\nimport { rule as S5868 } from './S5868'; // sonar-no-misleading-character-class\nimport { rule as S6326 } from './S6326'; // sonar-no-regex-spaces\nimport { rule as S6441 } from './S6441'; // sonar-no-unused-class-component-methods\nimport { rule as S1481 } from './S1481'; // sonar-no-unused-vars\nimport { rule as S6582 } from './S6582'; // sonar-prefer-optional-chain\nimport { rule as S6759 } from './S6759'; // sonar-prefer-read-only-props\nimport { rule as S6594 } from './S6594'; // sonar-prefer-regexp-exec\nimport { rule as S2077 } from './S2077'; // sql-queries\nimport { rule as S5973 } from './S5973'; // stable-tests\nimport { rule as S4829 } from './S4829'; // standard-input\nimport { rule as S6351 } from './S6351'; // stateful-regex\nimport { rule as S5739 } from './S5739'; // strict-transport-security\nimport { rule as S3003 } from './S3003'; // strings-comparison\nimport { rule as S3854 } from './S3854'; // super-invocation\nimport { rule as S131 } from './S131'; // switch-without-default\nimport { rule as S5256 } from './S5256'; // table-header\nimport { rule as S5260 } from './S5260'; // table-header-reference\nimport { rule as S5958 } from './S5958'; // test-check-exception\nimport { rule as S1135 } from './S1135'; // todo-tag\nimport { rule as S135 } from './S135'; // too-many-break-or-continue-in-loop\nimport { rule as S5867 } from './S5867'; // unicode-aware-regex\nimport { rule as S6535 } from './S6535'; // unnecessary-character-escapes\nimport { rule as S1128 } from './S1128'; // unused-import\nimport { rule as S5860 } from './S5860'; // unused-named-groups\nimport { rule as S4830 } from './S4830'; // unverified-certificate\nimport { rule as S5527 } from './S5527'; // unverified-hostname\nimport { rule as S3500 } from './S3500'; // updated-const-var\nimport { rule as S2310 } from './S2310'; // updated-loop-counter\nimport { rule as S2688 } from './S2688'; // use-isnan\nimport { rule as S4323 } from './S4323'; // use-type-alias\nimport { rule as S1154 } from './S1154'; // useless-string-operation\nimport { rule as S3758 } from './S3758'; // values-not-convertible-to-numbers\nimport { rule as S117 } from './S117'; // variable-name\nimport { rule as S3735 } from './S3735'; // void-use\nimport { rule as S4423 } from './S4423'; // weak-ssl\nimport { rule as S2817 } from './S2817'; // web-sql-database\nimport { rule as S5689 } from './S5689'; // x-powered-by\nimport { rule as S2755 } from './S2755'; // xml-parser-xxe\nimport { rule as S4817 } from './S4817'; // xpath\n\n/**\n * Maps ESLint rule keys declared in the JavaScript checks to rule implementations\n */\nconst rules: { [key: string]: Rule.RuleModule } = {};\n\nrules['accessor-pairs'] = S2376;\nrules['alt-text'] = S1077;\nrules['anchor-has-content'] = S6827;\nrules['anchor-is-valid'] = S6844;\nrules['anchor-precedence'] = S5850;\nrules['argument-type'] = S3782;\nrules['arguments-order'] = S2234;\nrules['arguments-usage'] = S3513;\nrules['array-callback-without-return'] = S3796;\nrules['array-constructor'] = S1528;\nrules['arrow-function-convention'] = S3524;\nrules['assertions-in-tests'] = S2699;\nrules['aws-apigateway-public-api'] = S6333;\nrules['aws-ec2-rds-dms-public'] = S6329;\nrules['aws-ec2-unencrypted-ebs-volume'] = S6275;\nrules['aws-efs-unencrypted'] = S6332;\nrules['aws-iam-all-privileges'] = S6302;\nrules['aws-iam-all-resources-accessible'] = S6304;\nrules['aws-iam-privilege-escalation'] = S6317;\nrules['aws-iam-public-access'] = S6270;\nrules['aws-opensearchservice-domain'] = S6308;\nrules['aws-rds-unencrypted-databases'] = S6303;\nrules['aws-restricted-ip-admin-access'] = S6321;\nrules['aws-s3-bucket-granted-access'] = S6265;\nrules['aws-s3-bucket-insecure-http'] = S6249;\nrules['aws-s3-bucket-public-access'] = S6281;\nrules['aws-s3-bucket-server-encryption'] = S6245;\nrules['aws-s3-bucket-versioning'] = S6252;\nrules['aws-sagemaker-unencrypted-notebook'] = S6319;\nrules['aws-sns-unencrypted-topics'] = S6327;\nrules['aws-sqs-unencrypted-queue'] = S6330;\nrules['bitwise-operators'] = S1529;\nrules['bool-param-default'] = S4798;\nrules['brace-style'] = S1105;\nrules['call-argument-line'] = S1472;\nrules['certificate-transparency'] = S5742;\nrules['chai-determinate-assertion'] = S6092;\nrules['class-name'] = S101;\nrules['class-prototype'] = S3525;\nrules['code-eval'] = S1523;\nrules['comma-or-logical-or-case'] = S3616;\nrules['comment-regex'] = S124;\nrules['concise-regex'] = S6353;\nrules['conditional-indentation'] = S3973;\nrules['confidential-information-logging'] = S5757;\nrules['constructor-for-side-effects'] = S1848;\nrules['content-length'] = S5693;\nrules['content-security-policy'] = S5728;\nrules['cookie-no-httponly'] = S3330;\nrules['cookies'] = S2255;\nrules['cors'] = S5122;\nrules['csrf'] = S4502;\nrules['cyclomatic-complexity'] = S1541;\nrules['declarations-in-global-scope'] = S3798;\nrules['default-param-last'] = S1788;\nrules['deprecation'] = S1874;\nrules['destructuring-assignment-syntax'] = S3514;\nrules['different-types-comparison'] = S3403;\nrules['disabled-auto-escaping'] = S5247;\nrules['disabled-resource-integrity'] = S5725;\nrules['disabled-timeout'] = S6080;\nrules['dns-prefetching'] = S5743;\nrules['duplicates-in-character-class'] = S5869;\nrules['empty-string-repetition'] = S5842;\nrules['encryption'] = S4787;\nrules['encryption-secure-mode'] = S5542;\nrules['enforce-trailing-comma'] = S3723;\nrules['existing-groups'] = S6328;\nrules['expression-complexity'] = S1067;\nrules['file-header'] = S1451;\nrules['file-name-differ-from-class'] = S3317;\nrules['file-permissions'] = S2612;\nrules['file-uploads'] = S2598;\nrules['fixme-tag'] = S1134;\nrules['for-in'] = S1535;\nrules['for-loop-increment-sign'] = S2251;\nrules['frame-ancestors'] = S5732;\nrules['function-inside-loop'] = S1515;\nrules['function-name'] = S100;\nrules['function-return-type'] = S3800;\nrules['future-reserved-words'] = S1527;\nrules['generator-without-yield'] = S3531;\nrules['hashing'] = S4790;\nrules['hidden-files'] = S5691;\nrules['hook-use-state'] = S6754;\nrules['html-has-lang'] = S5254;\nrules['in-operator-type-error'] = S3785;\nrules['inconsistent-function-call'] = S3686;\nrules['index-of-compare-to-positive-number'] = S2692;\nrules['insecure-cookie'] = S2092;\nrules['insecure-jwt-token'] = S5659;\nrules['inverted-assertion-arguments'] = S3415;\nrules['jsx-key'] = S6477;\nrules['jsx-no-constructed-context-values'] = S6481;\nrules['jsx-no-useless-fragment'] = S6749;\nrules['label-has-associated-control'] = S6853;\nrules['label-position'] = S1439;\nrules['link-with-target-blank'] = S5148;\nrules['max-union-size'] = S4622;\nrules['media-has-caption'] = S4084;\nrules['misplaced-loop-counter'] = S1994;\nrules['mouse-events-a11y'] = S1082;\nrules['nested-control-flow'] = S134;\nrules['new-cap'] = S2430;\nrules['new-operator-misuse'] = S2999;\nrules['no-accessor-field-mismatch'] = S4275;\nrules['no-alphabetical-sort'] = S2871;\nrules['no-angular-bypass-sanitization'] = S6268;\nrules['no-array-delete'] = S2870;\nrules['no-array-index-key'] = S6479;\nrules['no-associative-arrays'] = S3579;\nrules['no-base-to-string'] = S6551;\nrules['no-built-in-override'] = S2424;\nrules['no-case-label-in-switch'] = S1219;\nrules['no-clear-text-protocols'] = S5332;\nrules['no-code-after-done'] = S6079;\nrules['no-commented-code'] = S125;\nrules['no-dead-store'] = S1854;\nrules['no-delete-var'] = S3001;\nrules['no-deprecated-react'] = S6957;\nrules['no-duplicate-in-composite'] = S4621;\nrules['no-empty'] = S108;\nrules['no-empty-after-reluctant'] = S6019;\nrules['no-empty-alternatives'] = S6323;\nrules['no-empty-function'] = S1186;\nrules['no-empty-group'] = S6331;\nrules['no-empty-interface'] = S4023;\nrules['no-empty-test-file'] = S2187;\nrules['no-equals-in-for-termination'] = S888;\nrules['no-exclusive-tests'] = S6426;\nrules['no-extend-native'] = S6643;\nrules['no-extra-semi'] = S1116;\nrules['no-find-dom-node'] = S6788;\nrules['no-for-in-iterable'] = S4139;\nrules['no-function-declaration-in-block'] = S1530;\nrules['no-global-this'] = S2990;\nrules['no-globals-shadowing'] = S2137;\nrules['no-hardcoded-credentials'] = S2068;\nrules['no-hardcoded-ip'] = S1313;\nrules['no-hook-setter-in-body'] = S6442;\nrules['no-ignored-exceptions'] = S2486;\nrules['no-implicit-dependencies'] = S4328;\nrules['no-implicit-global'] = S2703;\nrules['no-in-misuse'] = S4619;\nrules['no-incomplete-assertions'] = S2970;\nrules['no-inconsistent-returns'] = S3801;\nrules['no-incorrect-string-concat'] = S3402;\nrules['no-infinite-loop'] = S2189;\nrules['no-intrusive-permissions'] = S5604;\nrules['no-invalid-await'] = S4123;\nrules['no-invariant-returns'] = S3516;\nrules['no-ip-forward'] = S5759;\nrules['no-labels'] = S1119;\nrules['no-literal-call'] = S6958;\nrules['no-lonely-if'] = S6660;\nrules['no-mime-sniff'] = S5734;\nrules['no-misleading-array-reverse'] = S4043;\nrules['no-misused-promises'] = S6544;\nrules['no-mixed-content'] = S5730;\nrules['no-nested-assignment'] = S1121;\nrules['no-nested-conditional'] = S3358;\nrules['no-nested-functions'] = S2004;\nrules['no-nested-incdec'] = S881;\nrules['no-os-command-from-path'] = S4036;\nrules['no-parameter-reassignment'] = S1226;\nrules['no-primitive-wrappers'] = S1533;\nrules['no-redeclare'] = S2814;\nrules['no-redundant-assignments'] = S4165;\nrules['no-redundant-optional'] = S4782;\nrules['no-redundant-parentheses'] = S1110;\nrules['no-redundant-type-constituents'] = S6571;\nrules['no-reference-error'] = S3827;\nrules['no-referrer-policy'] = S5736;\nrules['no-require-or-define'] = S3533;\nrules['no-return-type-any'] = S4324;\nrules['no-same-argument-assert'] = S5863;\nrules['no-self-compare'] = S6679;\nrules['no-tab'] = S105;\nrules['no-table-as-layout'] = S5257;\nrules['no-this-alias'] = S4327;\nrules['no-throw-literal'] = S3696;\nrules['no-try-promise'] = S4822;\nrules['no-undefined-argument'] = S4623;\nrules['no-undefined-assignment'] = S2138;\nrules['no-unenclosed-multiline-block'] = S2681;\nrules['no-uniq-key'] = S6486;\nrules['no-unknown-property'] = S6747;\nrules['no-unreachable'] = S1763;\nrules['no-unsafe'] = S6791;\nrules['no-unsafe-unzip'] = S5042;\nrules['no-unstable-nested-components'] = S6478;\nrules['no-unthrown-error'] = S3984;\nrules['no-unused-expressions'] = S905;\nrules['no-unused-function-argument'] = S1172;\nrules['no-unused-private-class-members'] = S1068;\nrules['no-useless-call'] = S6676;\nrules['no-useless-constructor'] = S6647;\nrules['no-useless-increment'] = S2123;\nrules['no-useless-intersection'] = S4335;\nrules['no-useless-react-setstate'] = S6443;\nrules['no-var'] = S3504;\nrules['no-variable-usage-before-declaration'] = S1526;\nrules['no-vue-bypass-sanitization'] = S6299;\nrules['no-weak-cipher'] = S5547;\nrules['no-weak-keys'] = S4426;\nrules['no-wildcard-import'] = S2208;\nrules['non-number-in-arithmetic-expression'] = S3760;\nrules['null-dereference'] = S2259;\nrules['object-alt-content'] = S5264;\nrules['object-shorthand'] = S3498;\nrules['operation-returning-nan'] = S3757;\nrules['os-command'] = S4721;\nrules['post-message'] = S2819;\nrules['prefer-default-last'] = S4524;\nrules['prefer-enum-initializers'] = S6572;\nrules['prefer-for-of'] = S4138;\nrules['prefer-function-type'] = S6598;\nrules['prefer-namespace-keyword'] = S4156;\nrules['prefer-nullish-coalescing'] = S6606;\nrules['prefer-object-spread'] = S6661;\nrules['prefer-promise-shorthand'] = S4634;\nrules['prefer-spread'] = S6666;\nrules['prefer-string-starts-ends-with'] = S6557;\nrules['prefer-template'] = S3512;\nrules['prefer-type-guard'] = S4322;\nrules['process-argv'] = S4823;\nrules['production-debug'] = S4507;\nrules['pseudo-random'] = S2245;\nrules['public-static-readonly'] = S1444;\nrules['publicly-writable-directories'] = S5443;\nrules['reduce-initial-value'] = S6959;\nrules['redundant-type-aliases'] = S6564;\nrules['regex-complexity'] = S5843;\nrules['regular-expr'] = S4784;\nrules['rules-of-hooks'] = S6440;\nrules['semi'] = S1438;\nrules['session-regeneration'] = S5876;\nrules['shorthand-property-grouping'] = S3499;\nrules['single-char-in-character-classes'] = S6397;\nrules['single-character-alternation'] = S6035;\nrules['slow-regex'] = S5852;\nrules['sockets'] = S4818;\nrules['sonar-block-scoped-var'] = S2392;\nrules['sonar-jsx-no-leaked-render'] = S6439;\nrules['sonar-max-lines'] = S104;\nrules['sonar-max-lines-per-function'] = S138;\nrules['sonar-max-params'] = S107;\nrules['sonar-no-control-regex'] = S6324;\nrules['sonar-no-dupe-keys'] = S1534;\nrules['sonar-no-empty-character-class'] = S2639;\nrules['sonar-no-fallthrough'] = S128;\nrules['sonar-no-invalid-regexp'] = S5856;\nrules['sonar-no-magic-numbers'] = S109;\nrules['sonar-no-misleading-character-class'] = S5868;\nrules['sonar-no-regex-spaces'] = S6326;\nrules['sonar-no-unused-class-component-methods'] = S6441;\nrules['sonar-no-unused-vars'] = S1481;\nrules['sonar-prefer-optional-chain'] = S6582;\nrules['sonar-prefer-read-only-props'] = S6759;\nrules['sonar-prefer-regexp-exec'] = S6594;\nrules['sql-queries'] = S2077;\nrules['stable-tests'] = S5973;\nrules['standard-input'] = S4829;\nrules['stateful-regex'] = S6351;\nrules['strict-transport-security'] = S5739;\nrules['strings-comparison'] = S3003;\nrules['super-invocation'] = S3854;\nrules['switch-without-default'] = S131;\nrules['table-header'] = S5256;\nrules['table-header-reference'] = S5260;\nrules['test-check-exception'] = S5958;\nrules['todo-tag'] = S1135;\nrules['too-many-break-or-continue-in-loop'] = S135;\nrules['unicode-aware-regex'] = S5867;\nrules['unnecessary-character-escapes'] = S6535;\nrules['unused-import'] = S1128;\nrules['unused-named-groups'] = S5860;\nrules['unverified-certificate'] = S4830;\nrules['unverified-hostname'] = S5527;\nrules['updated-const-var'] = S3500;\nrules['updated-loop-counter'] = S2310;\nrules['use-isnan'] = S2688;\nrules['use-type-alias'] = S4323;\nrules['useless-string-operation'] = S1154;\nrules['values-not-convertible-to-numbers'] = S3758;\nrules['variable-name'] = S117;\nrules['void-use'] = S3735;\nrules['weak-ssl'] = S4423;\nrules['web-sql-database'] = S2817;\nrules['x-powered-by'] = S5689;\nrules['xml-parser-xxe'] = S2755;\nrules['xpath'] = S4817;\n\nexport { rules };\n","import { name, version } from '../package.json' with { type: 'json' }\n\nexport { rules } from 'sonarjs/rules/index.js'\n\nexport const meta = {\n  name,\n  version,\n}\n","import type { Linter } from 'eslint'\n\nexport const baseRules: Linter.RulesRecord = {\n  'no-labels': 0,\n  'sonar/argument-type': 2,\n  'sonar/arguments-order': 2,\n  'sonar/array-callback-without-return': 2,\n  'sonar/bitwise-operators': 2,\n  'sonar/call-argument-line': 2,\n  'sonar/comma-or-logical-or-case': 2,\n  'sonar/code-eval': 2,\n  'sonar/deprecation': 1,\n  'sonar/different-types-comparison': 2,\n  'sonar/for-in': 2,\n  'sonar/for-loop-increment-sign': 2,\n  'sonar/function-inside-loop': 2,\n  'sonar/future-reserved-words': 1,\n  'sonar/generator-without-yield': 2,\n  'sonar/in-operator-type-error': 2,\n  'sonar/inconsistent-function-call': 2,\n  'sonar/label-position': 2,\n  'sonar/new-operator-misuse': [2, { considerJSDoc: false }],\n  'sonar/no-accessor-field-mismatch': 2,\n  'sonar/no-alphabetical-sort': 2,\n  'sonar/no-array-delete': 2,\n  'sonar/no-associative-arrays': 2,\n  // https://community.sonarsource.com/t/incorrect-no-built-in-override-report-from-imports/40053\n  // 'sonar/no-built-in-override': 2,\n  'sonar/no-case-label-in-switch': 2,\n  'sonar/no-dead-store': 2,\n  'sonar/no-delete-var': 2,\n  'sonar/no-duplicate-in-composite': 2,\n  'sonar/no-equals-in-for-termination': 1,\n  'sonar/no-function-declaration-in-block': 1,\n  'sonar/no-global-this': 1,\n  'sonar/no-globals-shadowing': 1,\n  'sonar/no-implicit-global': 2,\n  'sonar/no-in-misuse': 2,\n  'sonar/no-infinite-loop': 2,\n  'sonar/no-invalid-await': 2,\n  'sonar/no-labels': 1,\n  // 'sonar/no-misleading-array-reverse': 1,\n  'sonar/no-parameter-reassignment': 1,\n  'sonar/no-primitive-wrappers': 1,\n  'sonar/no-redundant-assignments': 1,\n  'sonar/no-redundant-optional': 1,\n  'sonar/no-try-promise': 2,\n  'sonar/no-undefined-argument': 1,\n  'sonar/no-unthrown-error': 2,\n  'sonar/no-useless-increment': 2,\n  'sonar/operation-returning-nan': 2,\n  'sonar/post-message': 1,\n  'sonar/sonar-block-scoped-var': 1,\n  'sonar/sonar-no-fallthrough': 1,\n  'sonar/sonar-no-unused-vars': 2,\n  'sonar/strings-comparison': 2,\n  'sonar/super-invocation': 2,\n  'sonar/unused-import': 2,\n  'sonar/updated-loop-counter': 1,\n  'sonar/useless-string-operation': 2,\n  'sonar/values-not-convertible-to-numbers': 1,\n}\n\nexport const baseTsRules: Linter.RulesRecord = {\n  'sonar/argument-type': 0,\n  'sonar/arguments-order': 0,\n  'sonar/array-callback-without-return': 0,\n  'sonar/call-argument-line': 0,\n  'sonar/different-types-comparison': 0,\n  'sonar/inconsistent-function-call': 0,\n  'sonar/new-operator-misuse': 0,\n  'sonar/no-associative-arrays': 0,\n  'sonar/no-gratuitous-expressions': 0,\n  'sonar/no-implicit-global': 0,\n  'sonar/no-invalid-await': 0,\n  'sonar/no-primitive-wrappers': 0,\n  'sonar/operation-returning-nan': 0,\n  'sonar/sonar-block-scoped-var': 0,\n  'sonar/sonar-no-fallthrough': 0,\n  'sonar/sonar-no-unused-vars': 0,\n  'sonar/strings-comparison': 0,\n  'sonar/super-invocation': 0,\n  'sonar/unused-import': 0,\n  'sonar/values-not-convertible-to-numbers': 0,\n}\n\nexport const recommendedRules: Linter.RulesRecord = {\n  ...baseRules,\n  'sonar/array-constructor': 2,\n  'sonar/class-prototype': 2,\n  'sonar/destructuring-assignment-syntax': 2,\n  'sonar/function-name': [2, { format: '^_?[a-zA-Z][a-zA-Z0-9]*\\\\$?$' }],\n  'sonar/future-reserved-words': 2,\n  'sonar/max-union-size': [\n    1,\n    {\n      threshold: 5,\n    },\n  ],\n  'sonar/misplaced-loop-counter': 2,\n  'sonar/no-equals-in-for-termination': 2,\n  'sonar/no-for-in-iterable': 2,\n  'sonar/no-labels': 2,\n  // https://jira.sonarsource.com/browse/RSPEC-4043?focusedCommentId=245770&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-245770\n  // 'sonar/no-misleading-array-reverse': 2,\n  'sonar/no-parameter-reassignment': 2,\n  'sonar/no-primitive-wrappers': 2,\n  'sonar/no-redundant-assignments': 2,\n  'sonar/no-redundant-optional': 2,\n  'sonar/no-return-type-any': 1,\n  'sonar/no-undefined-argument': 2,\n  'sonar/no-unused-function-argument': 1,\n  'sonar/no-useless-intersection': 2,\n  'sonar/no-variable-usage-before-declaration': 2,\n  'sonar/non-number-in-arithmetic-expression': 1,\n  'sonar/null-dereference': 2,\n  'sonar/prefer-default-last': 1,\n  'sonar/prefer-promise-shorthand': 2,\n  'sonar/sonar-block-scoped-var': 2,\n  'sonar/sonar-no-fallthrough': 2,\n  'sonar/updated-loop-counter': 2,\n  'sonar/values-not-convertible-to-numbers': 2,\n}\n\nexport const recommendedTsRules: Linter.RulesRecord = {\n  ...baseTsRules,\n  'sonar/array-constructor': 0,\n  // doesn't work with constructor with accessibility\n  'sonar/no-unused-function-argument': 0,\n  'sonar/class-prototype': 0,\n  'sonar/no-for-in-iterable': 0,\n  'sonar/no-variable-usage-before-declaration': 0,\n  'sonar/non-number-in-arithmetic-expression': 0,\n  'sonar/null-dereference': 0,\n  'sonar/sonar-block-scoped-var': 0,\n}\n","import type { Linter } from 'eslint'\nimport * as sonar from './plugin.js'\n\nimport {\n  baseRules,\n  baseTsRules,\n  recommendedRules,\n  recommendedTsRules,\n} from './config-rules.js'\n\nconst tsPatterns = ['**/*.{cts,mts,ts,tsx}']\n\nexport const base: Linter.Config = {\n  plugins: ['sonar'],\n  rules: baseRules,\n  overrides: [\n    {\n      files: tsPatterns,\n      rules: baseTsRules,\n    },\n  ],\n}\n\nexport const recommended: Linter.Config = {\n  ...base,\n  rules: recommendedRules,\n  overrides: [\n    ...base.overrides!,\n    {\n      files: tsPatterns,\n      rules: recommendedTsRules,\n    },\n  ],\n}\n\nexport const flatBase: Linter.FlatConfig[] = [\n  {\n    plugins: {\n      sonar,\n    },\n    rules: baseRules,\n  },\n  {\n    files: tsPatterns,\n    plugins: {\n      sonar,\n    },\n    rules: baseTsRules,\n  },\n]\n\nexport const flatRecommended: Linter.FlatConfig[] = [\n  {\n    plugins: {\n      sonar,\n    },\n    rules: recommendedRules,\n  },\n  {\n    files: tsPatterns,\n    plugins: {\n      sonar,\n    },\n    rules: recommendedTsRules,\n  },\n]\n"],"names":["builtinRules","functionLike","isMemberWithProperty","isLiteral","getProperty","toEncodedMessage","toSecondaryLocation","isRequire","rule","getTypeFromTreeNode","isTypedArray","isString","isNumber","isStringType","isFunction","isUnion","isThenable","isAny","decorate","reportExempting","regexpp","MESSAGE","message","getNodeToReport","getMainFunctionTokenLocation","childrenOf","getLiteralValue","messages","PROPERTIES_POSITION","ARN_PRINCIPAL","MESSAGES","getSensitiveAction","getSensitiveResource","isException","ts","reportIssue","HELMET","checkCallExpression","FORMIDABLE_MODULE","MULTER_MODULE","formidableObjects","visitAssignment","report","checkFormidable","checkMulter","parse","CONTENT_SECURITY_POLICY","HELMET_CSP","DIRECTIVES","isValidHelmetModuleCall","isNullLike","areEquivalent","isHardcodedLiteral","raiseIssue","getMessageAndData","url","URL","networkProtocolsRule","awsRule","babel","SourceCode","peek","CodePathContext","AssignmentContext","semver","getSuggestions","notEqualOperators","isUsedInsideBody","isIP","path","fs","isConcatenation","tsTypes","TSESTree","flaggedNodeStarts","helpers.isRequiredParserServices","helpers.isString","helpers.isFunction","isAuraLightningComponent","isQuestionable","isIfStatement","rules","isArray","isArrayType","detectReact","analyse","_a","RegExpValidator","librariesRule","S2376","S1077","S6827","S6844","S5850","S3782","S2234","S3513","S3796","S1528","S3524","S2699","S6333","S6329","S6275","S6332","S6302","S6304","S6317","S6270","S6308","S6303","S6321","S6265","S6249","S6281","S6245","S6252","S6319","S6327","S6330","S1529","S4798","S1105","S1472","S5742","S6092","S101","S3525","S1523","S3616","S124","S6353","S3973","S5757","S1848","S5693","S5728","S3330","S2255","S5122","S4502","S1541","S3798","S1788","S1874","S3514","S3403","S5247","S5725","S6080","S5743","S5869","S5842","S4787","S5542","S3723","S6328","S1067","S1451","S3317","S2612","S2598","S1134","S1535","S2251","S5732","S1515","S100","S3800","S1527","S3531","S4790","S5691","S6754","S5254","S3785","S3686","S2692","S2092","S5659","S3415","S6477","S6481","S6749","S6853","S1439","S5148","S4622","S4084","S1994","S1082","S134","S2430","S2999","S4275","S2871","S6268","S2870","S6479","S3579","S6551","S2424","S1219","S5332","S6079","S125","S1854","S3001","S6957","S4621","S108","S6019","S6323","S1186","S6331","S4023","S2187","S888","S6426","S6643","S1116","S6788","S4139","S1530","S2990","S2137","S2068","S1313","S6442","S2486","S4328","S2703","S4619","S2970","S3801","S3402","S2189","S5604","S4123","S3516","S5759","S1119","S6958","S6660","S5734","S4043","S6544","S5730","S1121","S3358","S2004","S881","S4036","S1226","S1533","S2814","S4165","S4782","S1110","S6571","S3827","S5736","S3533","S4324","S5863","S6679","S105","S5257","S4327","S3696","S4822","S4623","S2138","S2681","S6486","S6747","S1763","S6791","S5042","S6478","S3984","S905","S1172","S1068","S6676","S6647","S2123","S4335","S6443","S3504","S1526","S6299","S5547","S4426","S2208","S3760","S2259","S5264","S3498","S3757","S4721","S2819","S4524","S6572","S4138","S6598","S4156","S6606","S6661","S4634","S6666","S6557","S3512","S4322","S4823","S4507","S2245","S1444","S5443","S6959","S6564","S5843","S4784","S6440","S1438","S5876","S3499","S6397","S6035","S5852","S4818","S2392","S6439","S104","S138","S107","S6324","S1534","S2639","S128","S5856","S109","S5868","S6326","S6441","S1481","S6582","S6759","S6594","S2077","S5973","S4829","S6351","S5739","S3003","S3854","S131","S5256","S5260","S5958","S1135","S135","S5867","S6535","S1128","S5860","S4830","S5527","S3500","S2310","S2688","S4323","S1154","S3758","S117","S3735","S4423","S2817","S5689","S2755","S4817"],"mappings":"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"}